0
two sum given array integ num integ target return indic number add target you assum input solut element you return answer order
1
revers integ given sign bit integ return digit revers if revers sign bit integ rang return assum environ store bit integ sign unsign
2
palindrom number given integ return true palindrom integ an integ palindrom read backward forward for palindrom
3
roman integ roman numer repres symbol i v x l c d m symbol valu i v x l c d m for written ii roman numer ad written xii simpli x ii the number written xxvii xx v ii roman numer written largest smallest left howev numer iiii instead number written iv becaus subtract make the principl appli number written ix there instanc subtract i v x make x l c make c d m make given roman numer convert integ
4
longest common prefix write function find longest common prefix string array string if common prefix return empti string
5
valid parenthes given string charact determin input string valid an input string valid open bracket close type bracket open bracket close correct order
6
merg two sort list merg sort link list return sort list the list made splice node list
7
remov duplic sort array given integ array num sort decreas order remov duplic place uniqu element appear the rel order element sinc imposs chang length array languag result part array num more formal element remov duplic element num hold final result it matter leav element return place final result slot num do alloc extra space array you modifi input array place o extra memori custom judg the judg test solut code int num input array int expectednum the expect answer correct length int removedupl num call implement assert expectednum length int lt assert num expectednum if assert pass solut accept
8
remov element given integ array num integ val remov occurr val num place the rel order element chang sinc imposs chang length array languag result part array num more formal element remov duplic element num hold final result it matter leav element return place final result slot num do alloc extra space array you modifi input array place o extra memori custom judg the judg test solut code int num input array int val valu remov int expectednum the expect answer correct length it sort valu equal val int removeel num val call implement assert expectednum length sort num sort element num int lt actuallength assert num expectednum if assert pass solut accept
9
implement strstr implement strstr return index occurr needl haystack needl part haystack clarif what return needl empti string thi great question interview for purpos problem return needl empti string thi consist c strstr java indexof
10
search insert posit given sort array distinct integ target return index target found if return index insert order you write algorithm o log runtim complex
11
maximum subarray given integ array num find contigu subarray number largest sum return sum a subarray contigu part array
12
length last word given string consist word separ number space return length word string a word maxim substr consist space charact
13
plu one you larg integ repres integ array digit digit ith digit integ the digit order signific signific left order the larg integ lead increment larg integ return result array digit
14
add binari given binari string return sum binari string
15
sqrt given neg integ comput return squar root sinc return type integ decim digit truncat integ part result return note you allow built expon function oper pow
16
climb stair you climb staircas it take step reach top each time climb step in distinct way climb top
17
remov duplic sort list given head sort link list delet duplic element appear return link list sort
18
merg sort array you integ array num num sort decreas order integ repres number element num num merg num num singl array sort decreas order the final sort array return function store insid array num to accommod num length element denot element merg element set num length
19
binari tree inord travers given root binari tree return inord travers node valu
20
same tree given root binari tree write function check two binari tree consid structur ident node
21
symmetr tree given root binari tree check mirror symmetr center
22
maximum depth binari tree given root binari tree return maximum depth a binari tree maximum depth number node longest path root node farthest leaf node
23
convert sort array binari search tree given integ array num element sort ascend order convert height balanc binari search tree a height balanc binari tree binari tree depth subtre node differ
24
balanc binari tree given binari tree determin height balanc for problem height balanc binari tree defin binari tree left subtre node differ height
25
minimum depth binari tree given binari tree find minimum depth the minimum depth number node shortest path root node nearest leaf node note a leaf node children
26
path sum given root binari tree integ targetsum return true tree root leaf path ad valu path equal targetsum a leaf node children
27
pascal triangl given integ numrow return numrow pascal triangl in pascal triangl number sum number directli shown
28
pascal triangl ii given integ rowindex return rowindexth index row pascal triangl in pascal triangl number sum number directli shown
29
best time buy sell stock you array price price price stock ith day you maxim profit choos singl day buy stock choos day futur sell stock return maximum profit achiev transact if achiev profit return
30
best time buy sell stock ii you integ array price price price stock ith day on day decid buy sell stock you hold share stock time howev buy immedi sell day find return maximum profit achiev
31
valid palindrom given string determin palindrom alphanumer charact ignor case
32
singl number given empti array integ num element appear find singl you implement solut linear runtim complex constant extra space
33
link list cycl given head head link list determin link list cycl there cycl link list node list reach continu pointer intern po denot index node tail pointer connect note po pass paramet return true cycl link list otherwis return fals
34
binari tree preorder travers given root binari tree return preorder travers node valu
35
binari tree postord travers given root binari tree return postord travers node valu
36
min stack design stack support push pop top retriev minimum element constant time implement minstack class minstack initi stack object void push val push element val stack void pop remov element top stack int top top element stack int getmin retriev minimum element stack
37
intersect two link list given head singli link list heada headb return node list intersect if link list intersect return null for link list begin intersect node the test case gener cycl entir link structur note link list retain origin structur function return custom judg the input judg program input intersectv the node intersect occur thi intersect node lista the link list listb the link list skipa the number node skip ahead lista start head intersect node skipb the number node skip ahead listb start head intersect node the judg creat link structur base input pass head heada headb program if correctli return intersect node solut accept
38
two sum ii input array sort given array integ number sort decreas order find number add specif target number return indic number index integ array answer size lt answer lt answer lt number length the test gener solut you element
39
excel sheet column titl given integ columnnumb return column titl appear excel sheet for a gt b gt c gt z gt aa gt ab gt
40
major element given array num size return major element the major element element appear time you assum major element exist array
41
excel sheet column number given string columntitl repres column titl excel sheet return column number for a gt b gt c gt z gt aa gt ab gt
42
factori trail zero given integ return number trail zero follow could write solut work logarithm time complex
43
revers bit revers bit bit unsign integ note note languag java unsign integ type in case input output sign integ type they affect implement integ intern binari represent sign unsign in java compil repres sign integ complement notat therefor
44
number bit write function take unsign integ return number bit ham weight note note languag java unsign integ type in case input sign integ type it affect implement integ intern binari represent sign unsign in java compil repres sign integ complement notat therefor
45
happi number write algorithm determin number happi a happi number number defin process start posit integ replac number sum squar digit repeat process number equal stay loop endlessli cycl includ those number process end happi return true happi number fals
46
remov link list element given head link list integ val remov node link list node val val return head
47
count prime count number prime number neg number
48
isomorph string given string determin isomorph two string isomorph charact replac all occurr charact replac charact preserv order charact no charact map charact charact map
49
revers link list given head singli link list revers list return revers list
50
contain duplic given integ array num return true appear array return fals element distinct
51
contain duplic ii given integ array num integ return true distinct indic array num num ab lt
52
implement stack queue implement lifo stack queue the implement stack support function normal stack push top pop empti implement mystack class void push int push element top stack int pop remov element top stack return int top return element top stack boolean empti return true stack empti fals note you standard oper queue mean push back peek pop front size empti oper valid depend languag queue support nativ you simul queue list dequ doubl end queue long queue standard oper
53
invert binari tree given root binari tree invert tree return root
54
summari rang you sort uniqu integ array num return smallest sort list rang cover number array that element num cover rang integ rang num each rang list output gt
55
power two given integ return true power otherwis return fals an integ power exist integ
56
implement queue stack implement fifo queue stack the implement queue support function normal queue push peek pop empti implement myqueu class void push int push element back queue int pop remov element front queue return int peek return element front queue boolean empti return true queue empti fals note you standard oper stack mean push top peek pop top size empti oper valid depend languag stack support nativ you simul stack list dequ doubl end queue long stack standard oper
57
palindrom link list given head singli link list return true palindrom
58
lowest common ancestor binari search tree given binari search tree bst find lowest common ancestor lca node bst accord definit lca wikipedia the lowest common ancestor defin node lowest node t descend node descend
59
delet node link list write function delet node singli link list you access head list access node delet directli it guarante node delet tail node list
60
valid anagram given string return true anagram fals
61
binari tree path given root binari tree return root leaf path order a leaf node children
62
add digit given integ num repeatedli add digit result digit return
63
ugli number an ugli number posit integ prime factor limit given integ return true ugli number
64
miss number given array num distinct number rang return number rang miss array follow could implement solut o extra space complex o runtim complex
65
first bad version you product manag lead team develop product unfortun latest version product fail qualiti check sinc version develop base previou version version bad version bad suppos version find bad bad you api bool isbadvers version return version bad implement function find bad version you minim number call api
66
move zero given integ array num move end maintain rel order element note place make copi array
67
word pattern given pattern string find pattern here follow mean full match biject letter pattern empti word
68
nim game you play nim game friend initi heap stone tabl you friend altern take turn on turn person turn remov stone heap the remov stone winner given number stone heap return true win game assum friend play optim return fals
69
rang sum queri immut given integ array num handl multipl queri type calcul sum element num indic left inclus left lt implement numarray class numarray int num initi object integ array num int sumrang int left int return sum element num indic left inclus num left num left num
70
power three given integ return true power otherwis return fals an integ power exist integ
71
count bit given integ return array an length lt lt an number binari represent
72
power four given integ return true power otherwis return fals an integ power exist integ
73
revers string write function revers string the input string array charact
74
revers vowel string given string revers vowel string return the vowel case
75
intersect two array given integ array num num return array intersect each element result uniqu return result order
76
intersect two array ii given integ array num num return array intersect each element result time show array return result order
77
valid perfect squar given posit integ num write function return true num perfect squar fals follow do built librari function sqrt
78
guess number higher lower we play guess game the game i pick number you guess number i pick everi time guess wrong i number i pick higher lower guess you call pre defin api int guess int num return result the number i pick lower guess pick lt num the number i pick higher guess pick gt num the number i pick equal guess pick num return number i pick
79
ransom note given sting ransomnot magazin return true ransomnot construct magazin fals each letter magazin ransomnot
80
first uniqu charact string given string find repeat charact return index if exist return
81
find differ you string string gener random shuffl string add letter random posit return letter ad
82
is subsequ given string return true subsequ fals a subsequ string string form origin string delet charact disturb rel posit remain charact ace subsequ abcd aec
83
binari watch a binari watch led top repres hour led bottom repres minut each led repres signific bit for binari watch read given integ turnedon repres number led return time watch repres you return answer order the hour lead for valid it the minut consist digit lead for valid it
84
sum left leav given root binari tree return sum left leav
85
convert number hexadecim given integ num return string repres hexadecim represent for neg integ complement method all letter answer string lowercas charact lead zero answer note you allow built librari method directli solv problem
86
longest palindrom given string consist lowercas uppercas letter return length longest palindrom built letter letter case sensit aa consid palindrom
87
fizz buzz given integ return string array answer index answer fizzbuzz divis answer fizz divis answer buzz divis answer condit true
88
third maximum number given integ array num return distinct maximum number array if maximum exist return maximum number
89
add string given neg integ num num repres string return sum num num string you solv problem built librari handl larg integ biginteg you convert input integ directli
90
number segment string you string return number segment string a segment defin contigu sequenc space charact
91
arrang coin you coin build staircas coin the staircas consist row ith row coin the row staircas incomplet given integ return number complet row staircas build
92
find all number disappear array given array num integ num rang return array integ rang num
93
minimum move equal array element given integ array num size return minimum number move requir make array element equal in move increment element array
94
assign cooki assum awesom give children cooki but give child cooki each child greed factor minimum size cooki child content cooki size if gt assign cooki child child content your goal maxim number content children output maximum number
95
repeat substr pattern given string check construct take substr append multipl copi substr
96
ham distanc the ham distanc integ number posit bit given integ return ham distanc
97
island perimet you row col grid repres map grid repres land grid repres water grid cell connect horizont vertic diagon the grid complet surround water island connect land cell the island doesn lake mean water insid isn connect water island one cell squar side length the grid rectangular width height don exceed determin perimet island
98
number complement the complement integ integ flip binari represent for the integ binari complement integ given integ num return complement
99
licens key format you licens key repres string consist alphanumer charact dash the string separ group dash you integ we reformat string group charact group shorter charact furthermor dash insert group convert lowercas letter uppercas return reformat licens key
100
max consecut one given binari array num return maximum number consecut array
101
construct rectangl a web develop design web page size so specif rectangular web page area job design rectangular web page length l width w satisfi requir the area rectangular web page design equal target area the width w larger length l mean l gt w the differ length l width w small return array l w l w length width web page design sequenc
102
teemo attack our hero teemo attack enemi ash poison attack when teemo attack ash ash poison durat second more formal attack ash poison inclus time interv durat if teemo attack poison effect end timer reset poison effect end durat second attack you decreas integ array timeseri timeseri denot teemo attack ash timeseri integ durat return total number second ash poison
103
next greater element i the greater element element array greater element array you distinct index integ array num num num subset num for lt lt num length find index num num determin greater element num num if greater element answer queri return array an length num length an greater element
104
keyboard row given array string word return word type letter alphabet row american keyboard imag in american keyboard row consist charact qwertyuiop row consist charact asdfghjkl row consist charact zxcvbnm
105
find mode binari search tree given root binari search tree bst duplic return mode frequent occur element if tree mode return order assum bst defin the left subtre node node key equal node key the subtre node node key greater equal node key both left subtre binari search tree
106
base given integ num return string base represent
107
rel rank you integ array score size score score ith athlet competit all score guarante uniqu the athlet base score st place athlet highest score place athlet highest score the placement athlet determin rank the st place athlet rank gold medal the place athlet rank silver medal the place athlet rank bronz medal for place nth place athlet rank placement number xth place athlet rank return array answer size answer rank ith athlet
108
perfect number a perfect number posit integ equal sum posit divisor exclud number a divisor integ integ divid evenli given integ return true perfect number return fals
109
fibonacci number the fibonacci number commonli denot f form sequenc call fibonacci sequenc number sum preced start that f f f f f gt given calcul f
110
detect capit we defin usag capit word case hold all letter word capit usa all letter word capit leetcod onli letter word capit googl given string word return true usag capit
111
longest uncommon subsequ i given string return length longest uncommon subsequ if longest uncommon subsequ exist return an uncommon subsequ string string subsequ a subsequ string string obtain delet number charact for abc subsequ aebdc delet underlin charact aebdc abc other subsequ aebdc includ aebdc aeb empti string
112
minimum absolut differ bst given root binari search tree bst return minimum absolut differ valu node tree
113
revers string ii given string integ revers charact charact count start string if fewer charact left revers if greater equal charact revers charact left origin
114
diamet binari tree given root binari tree return length diamet tree the diamet binari tree length longest path node tree thi path pass root the length path node repres number edg
115
student attend record i you string repres attend record student charact signifi student absent late present day the record charact a absent l late p present the student elig attend award meet criteria the student absent a strictli fewer day total the student late l consecut day return true student elig attend award fals
116
revers word string iii given string revers order charact word sentenc preserv whitespac initi word order
117
maximum depth n ari tree given ari tree find maximum depth the maximum depth number node longest path root node farthest leaf node nari tree input serial repres level order travers group children separ null see exampl
118
array partit i given integ array num integ group integ pair bn sum min ai bi maxim return maxim sum
119
binari tree tilt given root binari tree return sum tree node tilt the tilt tree node absolut differ sum left subtre node valu subtre node valu if node left child sum left subtre node valu treat the rule similar node child
120
reshap matrix in matlab handi function call reshap reshap matrix size keep origin data you matrix mat integ repres number row number column want reshap matrix the reshap matrix fill element origin matrix row travers order if reshap oper paramet legal output reshap matrix otherwis output origin matrix
121
subtre anoth tree given root binari tree root subroot return true subtre root structur node valu subroot fals a subtre binari tree tree tree consist node tree node descend the tree tree consid subtre
122
distribut candi alic candi ith candi type candytyp alic notic start gain weight visit doctor the doctor advis alic eat candi alic like candi eat maximum number type candi doctor advic given integ array candytyp length return maximum number type candi eat eat
123
n ari tree preorder travers given root ari tree return preorder travers node valu nari tree input serial repres level order travers each group children separ null see exampl
124
n ari tree postord travers given root ari tree return postord travers node valu nari tree input serial repres level order travers each group children separ null see exampl
125
longest harmoni subsequ we defin harmoni array array differ maximum minimum given integ array num return length longest harmoni subsequ subsequ a subsequ array sequenc deriv array delet element chang order remain element
126
rang addit ii you matrix m initi array oper op op ai bi mean m increment lt lt ai lt lt bi count return number maximum integ matrix perform oper
127
minimum index sum two list suppos andi dori choos restaur dinner list favorit restaur repres string you find common interest list index sum if choic tie answer output order requir you assum exist answer
128
can place flower you long flowerb plot plant howev flower plant adjac plot given integ array flowerb mean empti mean empti integ return flower plant flowerb violat adjac flower rule
129
construct string binari tree given root binari tree construct string consist parenthesi integ binari tree preorder travers return omit empti parenthesi pair affect map relationship string origin binari tree
130
merg two binari tree you binari tree root root imagin put cover node tree overlap you merg tree binari tree the merg rule node overlap sum node valu merg node otherwis not null node node tree return merg tree note the merg process start root node tree
131
maximum product three number given integ array num find number product maximum return maximum product
132
averag level binari tree given root binari tree return averag node level form array answer actual answer accept
133
maximum averag subarray i you integ array num consist element integ find contigu subarray length equal maximum averag return ani answer calcul error accept
134
set mismatch you set integ origin number unfortun due error number duplic number set result repetit number loss number you integ array num repres data statu set error find number occur number miss return form array
135
two sum iv input bst given root binari search tree target number return true exist element bst sum equal target
136
robot return origin there robot start posit origin d plane given sequenc move judg robot end complet move you string move repres move sequenc robot move repres ith move valid move r l left u d return true robot return origin finish move fals note the robot face irrelev r make robot move l make move left also assum magnitud robot movement move
137
imag smoother an imag smoother filter size appli cell imag round averag cell surround cell averag cell blue smoother if surround cell cell present averag averag cell red smoother given integ matrix img repres grayscal imag return imag appli smoother cell
138
second minimum node in binari tree given empti special binari tree consist node neg node tree node if node node node smaller node more formal properti root val min root left val root val hold given binari tree output minimum set made node tree if minimum exist output
139
longest continu increas subsequ given unsort array integ num return length longest continu increas subsequ subarray the subsequ strictli increas a continu increas subsequ defin indic lt num num num num lt lt num lt num
140
valid palindrom ii given string return true palindrom delet charact
141
basebal game you keep score basebal game strang rule the game consist round score past round affect futur round score at begin game start empti record you list string op op ith oper appli record an integ record score record score sum previou score it guarante previou score d record score doubl previou score it guarante previou score c invalid previou score remov record it guarante previou score return sum score record
142
employe import you data structur employe inform includ employe uniqu id import direct subordin id you array employe employe employe id id ith employe employe import import ith employe employe subordin list id subordin ith employe given integ id repres id employe return total import employe subordin
143
binari number altern bit given posit integ check altern bit adjac bit valu
144
count binari substr give binari string return number empti substr number substr group consecut substr occur multipl time count number time occur
145
degre array given empti array neg integ num degre array defin maximum frequenc element your task find smallest length contigu subarray num degre num
146
search binari search tree you root binari search tree bst integ val find node bst node equal val return subtre root node if node exist return null
147
kth largest element stream design class find kth largest element stream note kth largest element sort order kth distinct element implement kthlargest class kthlargest int int num initi object integ stream integ num int add int val append integ val stream return element repres kth largest element stream
148
binari search given array integ num sort ascend order integ target write function search target num if target exist return index otherwis return you write algorithm o log runtim complex
149
design hashset design hashset built hash tabl librari implement myhashset class void add key insert key hashset bool key return key exist hashset void remov key remov key hashset if key exist hashset
150
design hashmap design hashmap built hash tabl librari implement myhashmap class myhashmap initi object empti map void put int key int insert key pair hashmap if key exist map updat int int key return key map map map key void remov key remov key map map key
151
to lower case given string return string replac uppercas letter lowercas letter
152
bit bit charact we special charact the charact repres bit the charact repres bit given binari array bit end return true charact bit charact
153
find pivot index given array integ num calcul pivot index array the pivot index index sum number strictli left index equal sum number strictli index if index left edg array left sum element left thi appli edg array return leftmost pivot index if index exist return
154
self divid number a divid number number divis digit for divid number a divid number allow digit given integ left return list divid number rang left
155
flood fill an imag repres integ grid imag imag repres pixel imag you integ sr sc newcolor you perform flood fill imag start pixel imag sr sc to perform flood fill start pixel pixel connect direct start pixel color start pixel pixel connect direct pixel color replac color aforement pixel newcolor return modifi imag perform flood fill
156
find smallest letter greater than target given charact array letter sort decreas order charact target return smallest charact array larger target note letter wrap for target letter answer
157
min cost climb stair you integ array cost cost cost ith step staircas onc pay cost climb step you start step index step index return minimum cost reach top floor
158
largest number at least twice other you integ array num largest integ uniqu determin largest element array number array if return index largest element return
159
shortest complet word given string licensepl array string word find shortest complet word word a complet word word letter licensepl ignor number space licensepl treat letter case insensit if letter appear licensepl word number time for licensepl abc letter ignor case possibl complet word abccdef caaacab cbca return shortest complet word word it guarante answer exist if multipl shortest complet word return occur word
160
prime number set bit binari represent given integ left return count number inclus rang left prime number set bit binari represent recal number set bit integ number present written binari for written binari set bit
161
toeplitz matrix given matrix return true matrix toeplitz otherwis return fals a matrix toeplitz diagon top left bottom element
162
jewel stone you string jewel repres type stone jewel stone repres stone each charact stone type stone you stone jewel letter case sensit consid type stone a
163
minimum distanc between bst node given root binari search tree bst return minimum differ valu node tree
164
rotat string given string goal return true goal number shift a shift consist move leftmost charact rightmost posit for abcd bcdea shift
165
uniqu mors code word intern mors code defin standard encod letter map seri dot dash map map map for conveni full tabl letter english alphabet given array string word word written concaten mors code letter for cab written concaten we call concaten transform word return number transform word
166
number line to write string you string lowercas english letter array width denot pixel wide lowercas english letter specif width width width width you write line line longer pixel start begin write letter line total width exceed pixel then stop continu write letter line continu process written return array result length result total number line result width line pixel
167
largest triangl area given array point x y plane point point xi yi return area largest triangl form point answer actual answer accept
168
most common word given string paragraph string array ban word ban return frequent word ban it guarante word ban answer uniqu the word paragraph case insensit answer return lowercas
169
shortest distanc charact given string charact occur return array integ answer answer length length answer distanc index closest occurr charact the distanc indic ab ab absolut function
170
goat latin you string sentenc consist word separ space each word consist lowercas uppercas letter we convert sentenc goat latin made languag similar pig latin the rule goat latin if word begin vowel append ma end word for word appl applema if word begin conson vowel remov letter append end add ma for word goat oatgma add letter end word word index sentenc start for word ad end word aa ad end return final sentenc repres convers sentenc goat latin
171
posit larg group in string lowercas letter letter form consecut group charact for string abbxxxxzyy group bb xxxx yy a group identifi interv start end start end denot start end indic inclus group in xxxx interv a group consid larg charact return interv larg group sort increas order start index
172
flip imag given binari matrix imag flip imag horizont invert return result imag to flip imag horizont mean row imag revers for flip horizont result to invert imag mean replac replac for invert result
173
rectangl overlap an axi align rectangl repres list coordin bottom left corner coordin top corner it top bottom edg parallel x axi left edg parallel y axi two rectangl overlap area intersect posit to clear rectangl touch corner edg overlap given axi align rectangl rec rec return true overlap return fals
174
backspac string compar given string return true equal type empti text editor mean backspac charact note backspac empti text text continu empti
175
peak index mountain array let call array arr mountain properti hold arr length gt there exist lt lt arr length arr lt arr lt arr lt arr arr gt arr gt gt arr arr length given integ array arr guarante mountain return arr lt arr lt arr lt arr gt arr gt gt arr arr length
176
buddi string given string goal return true swap letter result equal goal return fals swap letter defin take indic index swap charact for swap indic abcd result cbad
177
lemonad chang at lemonad stand lemonad cost custom stand queue buy order time order bill each custom buy lemonad pay bill you provid correct chang custom net transact custom pay note don chang hand given integ array bill bill bill ith custom pay return true provid custom correct chang fals
178
transpos matrix given d integ array matrix return transpos matrix the transpos matrix matrix flip main diagon switch matrix row column indic
179
binari gap given posit integ find return longest distanc adjac binari represent if adjac return two adjac separ possibl the distanc absolut differ bit posit for distanc
180
leaf similar tree consid leav binari tree left order valu leav form leaf sequenc for tree leaf sequenc two binari tree consid leaf similar leaf sequenc return true tree head node root root leaf similar
181
walk robot simul a robot infinit xy plane start point face north the robot receiv type command turn left degre turn degre lt lt move forward unit some grid squar obstacl the ith obstacl grid point obstacl xi yi if robot move robot stay previou grid squar continu rest rout return maximum euclidean distanc robot origin squar distanc return note north mean y direct east mean x direct south mean y direct west mean x direct
182
middl link list given head singli link list return middl node link list if middl node return middl node
183
project area d shape you grid place cube axi align axe each grid repres tower cube top cell we view project cube xy yz zx plane a project shadow map dimension figur dimension plane we view shadow cube top front side return total area project
184
uncommon word two sentenc a sentenc string singl space separ word word consist lowercas letter a word uncommon appear sentenc sentenc given sentenc return list uncommon word you return answer order
185
fair candi swap alic bob total number candi you integ array alices bobsiz alices number candi ith box candi alic bobsiz number candi jth box candi bob sinc friend exchang candi box exchang total amount candi the total amount candi person sum number candi box return integ array answer answer number candi box alic exchang answer number candi box bob exchang if multipl answer return it guarante answer exist
186
surfac area d shape you grid cube each grid repres tower cube top cell after place cube decid glue directli adjac cube form irregular d shape return total surfac area result shape note the bottom face shape count surfac area
187
monoton array an array monoton monoton increas monoton decreas an array num monoton increas lt num lt num an array num monoton decreas lt num gt num given integ array num return true array monoton fals
188
increas order search tree given root binari search tree rearrang tree order leftmost node tree root tree node left child child
189
sort array by pariti given integ array num move integ begin array odd integ return array satisfi condit
190
smallest rang i you integ array num integ in oper choos index lt lt num length chang num num integ rang you appli oper index the score num differ maximum minimum element num return minimum score num appli mention oper index
191
x kind deck card in deck card card integ written return true choos x gt split entir deck group card each group x card all card group integ
192
revers onli letter given string revers string rule all charact english letter remain posit all english letter lowercas uppercas revers return revers
193
sort array by pariti ii given array integ num half integ num odd half sort array num odd odd num return answer array satisfi condit
194
long press name your friend type keyboard sometim type charact key long press charact type time you examin type charact keyboard return true friend charact possibl long press
195
uniqu email address everi valid email consist local domain separ sign besid lowercas letter email for alic leetcod alic local leetcod domain if add period charact local part email address mail forward address dot local note rule appli domain name for alic leetcod alicez leetcod forward email address if add local sign thi email filter note rule appli domain name for email forward email it rule time given array string email send email email return number address receiv mail
196
number recent call you recentcount class count number recent request time frame implement recentcount class recentcount initi counter recent request int ping int add request time repres time millisecond return number request happen past millisecond includ request specif return number request happen inclus rang it guarante call ping strictli larger previou call
197
reorder data log file you array log each log space delimit string word word identifi there type log letter log all word identifi consist lowercas english letter digit log all word identifi consist digit reorder log the letter log digit log the letter log sort lexicograph content if content sort lexicograph identifi the digit log maintain rel order return final order log
198
rang sum bst given root node binari search tree integ low high return sum valu node inclus rang low high
199
valid mountain array given array integ arr return true valid mountain array recal arr mountain array arr length gt there exist lt lt arr length arr lt arr lt lt arr lt arr arr gt arr gt gt arr arr length
200
di string match a permut perm integ integ rang repres string length i perm lt perm d perm gt perm given string reconstruct permut perm return if multipl valid permut perm return
201
delet column make sort you array string str length the string arrang line make grid for str abc bce cae arrang abc bce cae you delet column sort lexicograph in index column sort column delet column return number column delet
202
verifi alien dictionari in alien languag surprisingli english lowercas letter possibl order the order alphabet permut lowercas letter given sequenc word written alien languag order alphabet return true word sort lexicograph alien languag
203
n repeat element size n array you integ array num properti num length num uniqu element exactli element num repeat time return element repeat time
204
univalu binari tree a binari tree uni valu node tree given root binari tree return true tree uni valu fals
205
largest perimet triangl given integ array num return largest perimet triangl area form length if imposs form triangl area return
206
squar sort array given integ array num sort decreas order return array squar number sort decreas order
207
add array form integ the array form integ num array repres digit left order for num array form given num array form integ integ return array form integ num
208
cousin binari tree given root binari tree uniqu valu valu node tree return true node valu tree cousin fals two node binari tree cousin depth parent note binari tree root node depth children depth node depth
209
find town judg in town peopl label there rumor peopl secretli town judg if town judg exist the town judg trust everybodi town judg trust town judg there person satisfi properti you array trust trust ai bi repres person label ai trust person label bi return label town judg town judg exist identifi return
210
avail captur rook on chessboard white rook r number white bishop b black pawn empti squar when rook move choos cardin direct north east south west move direct choos stop reach edg board captur black pawn block white bishop a rook consid attack pawn rook captur pawn rook turn the number captur white rook number pawn rook attack return number captur white rook
211
find common charact given string array word return array charact show string word includ duplic you return answer order
212
maxim sum of array after k negat given integ array num integ modifi array choos index replac num num you appli process time you choos index multipl time return largest sum array modifi
213
complement base integ the complement integ integ flip binari represent for the integ binari complement integ given integ return complement
214
partit array into three part with equal sum given array integ arr return true partit array empti part equal sum formal partit array find index lt arr arr arr arr arr arr arr arr arr arr length
215
binari prefix divis by you binari array num index we defin xi number binari represent subarray num signific bit signific bit for num return array boolean answer answer true xi divis
216
remov outermost parenthes a valid parenthes string empti a a b a b valid parenthes string repres string concaten for valid parenthes string a valid parenthes string primit nonempti exist split a b a b nonempti valid parenthes string given valid parenthes string primit decomposit p p pk pi primit valid parenthes string return remov outermost parenthes primit string primit decomposit
217
sum root to leaf binari number you root binari tree node each root leaf path repres binari number start signific bit for path gt gt gt gt repres binari for leav tree number repres path root leaf return sum number the answer guarante fit bit integ
218
divisor game alic bob turn play game alic start initi number chalkboard on player turn player make move consist choos lt lt replac number chalkboard also player make move lose game return true alic win game assum player play optim
219
matrix cell distanc order you integ row col rcenter ccenter there row col matrix cell coordin rcenter ccenter return coordin cell matrix sort distanc rcenter ccenter smallest distanc largest distanc you return answer order satisfi condit the distanc cell
220
valid boomerang given array point point xi yi repres point x y plane return true point boomerang a boomerang set point distinct straight line
221
last stone weight you array integ stone stone weight ith stone we play game stone on turn choos heaviest stone smash suppos heaviest stone weight lt the result smash if stone destroy if stone weight destroy stone weight weight at end game stone left return smallest weight left stone if stone left return
222
remov all adjac duplic in string you string consist lowercas english letter a duplic remov consist choos adjac equal letter remov we repeatedli make duplic remov longer return final string duplic remov made it proven answer uniqu
223
height checker a school annual photo student the student ask stand singl file line decreas order height let order repres integ array expect expect expect height ith student line you integ array height repres current order student stand each height height ith student line index return number indic height expect
224
greatest common divisor string for string divid concaten time given string str str return largest string divid str str
225
occurr after bigram given string occurr text form immedi immedi return array word occurr
226
duplic zero given fix length integ array arr duplic occurr shift remain element note element length origin array written do modif input array place return
227
distribut candi peopl we distribut number candi row num peopl peopl we give candi person candi person give candi person then back start row give candi person candi person give candi person thi process repeat give candi time move start row reach end run candi the person receiv remain candi necessarili previou gift return array length num peopl sum candi repres final distribut candi
228
defang ip address given valid ipv ip address return defang version ip address a defang ip address replac period
229
rel sort array given array arr arr element arr distinct element arr arr sort element arr rel order item arr arr element arr end arr ascend order
230
number equival domino pair given list domino domino equival domino domino rotat equal domino return number pair lt lt lt domino length domino equival domino
231
n tribonacci number the tribonacci sequenc tn defin t t t tn tn tn tn gt given return tn
232
day year given string date repres gregorian calendar date format yyyi mm dd return day number year
233
find word that can be form charact you array string word string char a string good form charact char charact return sum length good string word
234
prime arrang return number permut prime number prime indic index recal integ prime greater written product posit integ smaller sinc answer larg return answer modulo
235
distanc between bu stop a bu stop number form circl we distanc pair neighbor stop distanc distanc stop number the bu direct clockwis counterclockwis return shortest distanc start destin stop
236
day week given date return day week date the input integ repres day month year return answer valu sunday monday tuesday wednesday thursday friday saturday
237
maximum number balloon given string text charact text form instanc word balloon you charact text return maximum number instanc form
238
minimum absolut differ given array distinct integ arr find pair element minimum absolut differ element return list pair ascend order respect pair pair arr lt equal minimum absolut differ element arr
239
uniqu number occurr given array integ arr write function return true number occurr array uniqu
240
minimum cost move chip the same posit we chip posit ith chip posit we move chip posit in step chang posit ith chip posit posit posit cost posit posit cost return minimum cost need move chip posit
241
split string balanc string balanc string equal quantiti l r charact given balanc string split maximum amount balanc string return maximum amount split balanc string
242
check if it is straight line you array coordin coordin repres coordin point check point make straight line xy plane
243
cell odd valu matrix there matrix initi there d array indic indic ri ci repres index locat perform increment oper matrix for locat indic increment cell row ri increment cell column ci given indic return number odd valu cell matrix appli increment locat indic
244
shift d grid given d grid size integ you shift grid time in shift oper element grid move grid element grid move grid element grid move grid return d grid appli shift oper time
245
minimum time visit all point on d plane point integ coordin point xi yi return minimum time second visit point order point you move rule in move vertic unit move horizont unit move diagon sqrt unit word move unit vertic unit horizont you visit point order array you allow pass point order count visit
246
find winner tic tac toe game tic tac toe play player a b grid here rule tic tac toe player turn place charact empti squar the player a place x charact player b place o charact x o charact empti squar fill the game end empti charact fill row column diagon the game end squar empti no move play game given array move element array size row column grid mark respect charact order a b play return winner game exist a b case game end draw return draw movement play return pend you assum move valid it rule tic tac toe grid initi empti a play
247
subtract product sum digit integ given integ number return differ product digit sum digit
248
element appear more than in sort array given integ array sort decreas order integ array occur time return integ
249
convert binari number link list integ given head refer node singli link list the node link list the link list hold binari represent number return decim number link list
250
find number even number digit given array num integ return number digit
251
replac element greatest element right side given array arr replac element array greatest element element replac element after return array
252
find n uniqu integ sum zero given integ return array uniqu integ add
253
decrypt string alphabet integ map given string form digit we map english lowercas charact charact repres charact repres return string form map it guarante uniqu map exist
254
decompress run length encod list we list num integ repres list compress run length encod consid adjac pair element freq val num num gt for pair freq element val concaten sublist concaten sublist left gener decompress list return decompress list
255
convert integ sum two no zero integ given integ no zero integ posit integ doesn decim represent return list integ a b a b no zero integ a b it guarate valid solut if valid solut return
256
maximum number given posit integ num consist digit return maximum number chang digit
257
rank transform array given array integ arr replac element rank the rank repres larg element the rank rule rank integ start the larger element larger rank if element equal rank rank small
258
remov palindrom subsequ you string consist letter in singl step remov palindrom subsequ return minimum number step make string empti a string subsequ string gener delet charact string chang order note subsequ necessarili contigu a string call palindrom read backward forward
259
the k weakest row matrix you binari matrix mat repres soldier repres civilian the soldier posit front civilian that left row a row weaker row true the number soldier row number soldier row both row number soldier lt return indic weakest row matrix order weakest strongest
260
number step reduc number zero given integ num return number step reduc in step current number divid subtract
261
check if n it doubl exist given array arr integ check exist integ n m n doubl m n m more formal check exist indic lt lt arr length arr arr
262
count neg number sort matrix given matrix grid sort increas order row wise column wise return number neg number grid
263
sort integ the number bit given integ array arr you sort integ array ascend order number binari represent case integ number sort ascend order return sort array
264
number day between two date write program count number day date the date string format yyyi mm dd shown exampl
265
how mani number are smaller than current number given array num num find number array smaller that num count number valid num lt num return answer array
266
increas decreas string given string you order string algorithm pick smallest charact append result pick smallest charact greater append charact result append repeat step pick charact pick largest charact append result pick largest charact smaller append charact result append repeat step pick charact repeat step pick charact in step if smallest largest charact appear choos occurr append result return result string sort algorithm
267
gener string with charact that have odd count given integ return string charact charact string occur odd number time the return string lowercas english letter if multipl valid string return
268
lucki number matrix given matrix distinct number return lucki number matrix order a lucki number element matrix minimum element row maximum column
269
find distanc valu between two array given integ array arr arr integ return distanc array the distanc defin number element arr element arr arr arr lt
270
creat target array given order given array integ num index your task creat target array rule initi target array empti from left read num index insert index index num target array repeat previou step element read num index return target array it guarante insert oper valid
271
find lucki integ array given array integ arr lucki integ integ frequenc array equal return lucki integ array if multipl lucki integ return largest if lucki integ return
272
count largest group given integ each number group sum digit return group largest size
273
minimum subsequ non increas order given array num obtain subsequ array sum element strictli greater sum includ element subsequ if multipl solut return subsequ minimum size exist multipl solut return subsequ maximum total sum element a subsequ array obtain eras possibl element array note solut constraint guarante uniqu also return answer sort increas order
274
string match array given array string word return string word substr word order string word substr word obtain remov charact left side word
275
minimum valu get posit step step sum given array integ num start initi posit startvalu in iter calcul step step sum startvalu element num left return minimum posit startvalu step step sum
276
reformat the string given alphanumer string alphanumer string string consist lowercas english letter digit you find permut string letter letter digit digit that adjac charact type return reformat string return empti string imposs reformat string
277
maximum score after split string given string zero return maximum score split string empti substr left substr substr the score split string number zero left substr number substr
278
kid with greatest number candi there kid candi you integ array candi candi repres number candi ith kid integ extracandi denot number extra candi return boolean array result length result true give ith kid extracandi greatest number candi kid fals note multipl kid greatest number candi
279
destin citi you array path path cityai citybi mean exist direct path cityai citybi return destin citi citi path outgo citi it guarante graph path form line loop destin citi
280
check if all are least length k place away given array num integ return true place return fals
281
build array with stack oper given array target integ in iter read number list build target array oper push read element begin list push array pop delet element array if target array built stop read element return oper build target array you guarante answer uniqu
282
consecut charact the power string maximum length empti substr uniqu charact given string return power
283
number student do homework given time given integ array starttim endtim integ querytim the ith student start homework time starttim finish time endtim return number student homework time querytim more formal return number student querytim lay interv starttim endtim inclus
284
check if word occur as prefix ani word sentenc given sentenc consist word separ singl space searchword check searchword prefix word sentenc return index word sentenc index searchword prefix word if searchword prefix word return index word minimum index if word return a prefix string lead contigu substr
285
make two array equal revers sub array given integ array equal length target arr in step select empti array arr revers you allow make number step return true make arr equal target fals
286
maximum product two element array given array integ num choos indic array return maximum num num
287
shuffl array given array num consist element form xn yn return array form xn yn
288
final price with special discount shop given array price price price ith item shop there special discount item shop buy ith item receiv discount equival price minimum index gt price lt price receiv discount return array ith element final price pay ith item shop special discount
289
run sum array given array num we defin run sum array runningsum sum num num return run sum num
290
xor oper array given integ integ start defin array num num start index num length return bitwis xor element num
291
averag salari exclud minimum maximum salari given array uniqu integ salari salari salari employe return averag salari employe exclud minimum maximum salari
292
path cross given string path path n s e w repres move unit north south east west you start origin d plane walk path path return true path cross point time locat previous visit return fals
293
can make arithmet progress from sequenc a sequenc number call arithmet progress differ consecut element given array number arr return true array rearrang form arithmet progress otherwis return fals
294
reformat date given date string form day month year day set st st month set jan feb mar apr may jun jul aug sep oct nov dec year rang convert date string format yyyi mm dd yyyi denot digit year mm denot digit month dd denot digit day
295
number good pair given array integ num return number good pair a pair call good num num lt
296
water bottl given numbottl full water bottl exchang numexchang empti water bottl full water bottl the oper drink full water bottl turn empti bottl return maximum number water bottl drink
297
count odd number interv rang given neg integ low high return count odd number low high inclus
298
shuffl string given string integ array indic length the string shuffl charact ith posit move indic shuffl string return shuffl string
299
count good triplet given array integ arr integ you find number good triplet a triplet arr arr arr good condit true lt lt lt lt arr length arr arr lt arr arr lt arr arr lt where denot absolut return number good triplet
300
kth miss posit number given array arr posit integ sort strictli increas order integ find kth posit integ miss array
301
make the string great given string lower upper case english letter a good string string doesn adjac charact lt lt length lower case letter letter upper case vice versa to make string good choos adjac charact make string bad remov you string good return string make good the answer guarante uniqu constraint notic empti string good
302
three consecut odd given integ array arr return true consecut odd number array otherwis return fals
303
thousand separ given integ add dot thousand separ return string format
304
most visit sector circular track given integ integ array round we circular track consist sector label a marathon held track marathon consist round the ith round start sector round end sector round for round start sector round end sector round return array visit sector sort ascend order notic circul track ascend order sector number counter clockwis direct see
305
detect pattern length m repeat k more time given array posit integ arr find pattern length repeat time a pattern subarray consecut sequenc consist valu repeat multipl time consecut overlap a pattern defin length number repetit return true exist pattern length repeat time return fals
306
matrix diagon sum given squar matrix mat return sum matrix diagon onli includ sum element primari diagon element secondari diagon part primari diagon
307
replac all avoid consecut repeat charact given string lowercas english letter charact convert charact lowercas letter final string consecut repeat charact you modifi charact it guarante consecut repeat charact string return final string convers possibl made if solut return it shown answer constraint
308
special posit binari matrix given row col matrix mat mat return number special posit mat a posit call special mat element row column row column index
309
sum all odd length subarray given array posit integ arr calcul sum odd length subarray a subarray contigu subsequ array return sum odd length subarray arr
310
rearrang space between word you string text word number space each word consist lowercas english letter separ space it guarante text word rearrang space equal number space pair adjac word number maxim if redistribut space equal place extra space end mean return string length text return string rearrang space
311
crawler log folder the leetcod file system log time user perform chang folder oper the oper move folder current folder if main folder remain folder remain folder move child folder name thi folder guarante exist you list string log log oper perform user ith step the file system start main folder oper log perform return minimum number oper need back main folder chang folder oper
312
design park system design park system park lot the park lot kind park space big medium small fix number slot size implement parkingsystem class parkingsystem int big int medium int small initi object parkingsystem class the number slot park space part constructor bool addcar int cartyp check park space cartyp car park lot cartyp kind big medium small repres a car park park space cartyp if space return fals park car size space return true
313
special array with x element greater than equal x you array num neg integ num consid special exist number number num greater equal notic element num return array special return it proven num special uniqu
314
maximum nest depth parenthes a string valid parenthes string denot vp meet it empti string singl charact equal it written ab a concaten b a b vp it written a a vp we similarli defin nest depth depth s vp s depth depth c c string singl charact equal depth a b max depth a depth b a b vp depth a depth a a vp for vp nest depth vp given vp repres string return nest depth
315
mean array after remov some element given integ array arr return remain integ remov smallest largest element answer actual answer consid accept
316
largest substr between two equal charact given string return length longest substr equal charact exclud charact if substr return a substr contigu sequenc charact string
317
slowest key a newli design keypad test tester press sequenc key time you string keyspress length keyspress ith key press test sequenc sort list releasetim releasetim time ith key releas both array index the key press time subsequ key press exact time previou key releas the tester key keypress longest durat the ith keypress durat releasetim releasetim keypress durat releasetim note key press multipl time test multipl press key durat return key keypress longest durat if multipl keypress return lexicograph largest key keypress
318
sort array increas frequenc given array integ num sort array increas order base frequenc valu if multipl valu frequenc sort decreas order return sort array
319
check array format through concaten you array distinct integ arr array integ array piec integ piec distinct your goal form arr concaten array piec order howev allow reorder integ array piec return true form array arr piec otherwis return fals
320
get maximum gener array you integ an array num length gener num num num num lt lt num num num lt lt return maximum integ array num
321
defus bomb you bomb defus time run your inform provid circular array code length key to decrypt code replac number all number replac simultan if gt replac ith number sum number if lt replac ith number sum previou number if replac ith number as code circular element code code previou element code code given circular array code integ key return decrypt code defus bomb
322
design order stream there stream idkey pair arriv arbitrari order idkey integ string no pair id design stream return valu increas order id return chunk list valu insert the concaten chunk result list sort valu implement orderedstream class orderedstream int construct stream valu string insert int idkey string insert pair idkey stream return largest chunk insert valu order
323
check if two string array equival given string array word word return true array repres string fals a string repres array array element concaten order form string
324
maximum repeat substr for string sequenc string word repeat word concaten time substr sequenc the word maximum repeat highest word repeat sequenc if word substr sequenc word maximum repeat given string sequenc word return maximum repeat word sequenc
325
richest custom wealth you integ grid account account amount money custom bank return wealth richest custom a custom wealth amount money bank account the richest custom custom maximum wealth
326
goal parser interpret you goal parser interpret string command the command consist alphabet g al order the goal parser interpret g string g string al string al the interpret string concaten origin order given string command return goal parser interpret command
327
count number consist string you string allow consist distinct charact array string word a string consist charact string string allow return number consist string array word
328
count match tournament you integ number team tournament strang rule if current number team team pair team a total match play team advanc round if current number team odd team randomli advanc tournament rest pair a total match play team advanc round return number match play tournament winner decid
329
reformat phone number you phone number string number number consist digit space dash you reformat phone number manner firstli remov space dash then group digit left block length fewer digit the final digit group digit a singl block length digit a singl block length digit two block length the block join dash notic reformat process produc block length produc block length return phone number format
330
number student unabl eat lunch the school cafeteria offer circular squar sandwich lunch break refer number all student stand queue each student prefer squar circular sandwich the number sandwich cafeteria equal number student the sandwich stack at step if student front queue prefer sandwich top stack leav queue otherwis leav queue end thi continu queue student top sandwich unabl eat you integ array student sandwich sandwich type sandwich stack top stack student prefer student initi queue front queue return number student unabl eat
331
determin string halv are alik you string length split string halv equal length half half two string alik number vowel a e i o u notic uppercas lowercas letter return true alik otherwis return fals
332
maximum unit truck you assign put amount box truck you d array boxtyp boxtyp numberofboxesi numberofunitsperboxi numberofboxesi number box type numberofunitsperboxi number unit box type you integ trucksiz maximum number box put truck you choos box put truck long number box exceed trucksiz return maximum total number unit put truck
333
calcul money leetcod bank herci save money car he put money leetcod bank day he start put monday day everi day tuesday sunday put day on subsequ monday put previou monday given return total amount money leetcod bank end nth day
334
decod xore array there hidden integ array arr consist neg integ it encod integ array encod length encod arr xor arr for arr encod you encod array you integ element arr arr return origin array arr it prove answer exist uniqu
335
number of rectangl that can form the largest squar you array rectangl rectangl li wi repres ith rectangl length li width wi you cut ith rectangl form squar side length lt li lt wi for rectangl cut squar side length let maxlen side length largest squar obtain rectangl return number rectangl make squar side length maxlen
336
find highest altitud there biker road trip the road trip consist point altitud the biker start trip point altitud equal you integ array gain length gain net gain altitud point lt lt return highest altitud point
337
latest time replac hidden digit you string time form hh mm digit string hidden repres the valid time inclus return latest valid time time replac hidden digit
338
maximum number ball box you work ball factori ball number lowlimit highlimit inclus highlimit lowlimit infinit number box number infin your job factori put ball box number equal sum digit ball number for ball number put box number ball number put box number given integ lowlimit highlimit return number ball box ball
339
sum uniqu element you integ array num the uniqu element array element array return sum uniqu element num
340
check array is sort rotat given array num return true array origin sort decreas order rotat number posit includ otherwis return fals there duplic origin array note an array a rotat posit result array b length a b a length modulo oper
341
minimum chang to make altern binari string you string consist charact in oper chang vice versa the string call altern adjac charact equal for string altern string return minimum number oper need make altern
342
longest nice substr a string nice letter alphabet appear uppercas lowercas for ababb nice a b howev aba appear b given string return longest substr nice if multipl return substr earliest occurr if return empti string
343
merg string altern you string word word merg string ad letter altern order start word if string longer append addit letter end merg string return merg string
344
count item match rule you array item item typei colori namei describ type color ith item you rule repres string rulekey rulevalu the ith item match rule true rulekey type rulevalu typei rulekey color rulevalu colori rulekey rulevalu namei return number item match rule
345
find nearest point that ha same x y coordin you integ repres current locat cartesian grid you array point point ai bi repres point exist ai bi a point valid share coordin coordin locat return index index valid point smallest manhattan distanc current locat if multipl return valid point smallest index if valid point return the manhattan distanc point ab ab
346
check binari string ha most one segment one given binari string lead zero return true contigu segment otherwis return fals
347
check one string swap can make string equal you string equal length a string swap oper choos indic string necessarili swap charact indic return true make string equal perform string swap string otherwis return fals
348
find center star graph there undirect star graph consist node label a star graph graph center node edg connect center node node you d integ array edg edg ui vi edg node ui vi return center star graph
349
second largest digit string given alphanumer string return largest numer digit appear exist an alphanumer string string consist lowercas english letter digit
350
maximum ascend subarray sum given array posit integ num return maximum sum ascend subarray num a subarray defin contigu sequenc number array a subarray numsl numsl numsr numsr ascend lt lt numsi lt numsi note subarray size ascend
351
number differ integ string you string word consist digit lowercas english letter you replac digit charact space for bc ef notic left integ separ space return number integ perform replac oper word two integ consid decim represent lead zero
352
determin color chessboard squar you coordin string repres coordin squar chessboard below chessboard refer return true squar white fals squar black the coordin repres valid chessboard squar the coordin letter number
353
truncat sentenc a sentenc list word separ singl space lead trail space each word consist uppercas lowercas english letter punctuat for hello world hello world world sentenc you sentenc integ you truncat word return truncat
354
sign product array there function signfunc return posit neg equal you integ array num let product product valu array num return signfunc product
355
minimum oper make array increas you integ array num index in oper choos element array increment for num choos increment num make num return minimum number oper need make num strictli increas an array num strictli increas num lt num lt lt num length an array length trivial strictli increas
356
check sentenc is pangram a pangram sentenc letter english alphabet appear given string sentenc lowercas english letter return true sentenc pangram fals
357
sum digit base k given integ base base return sum digit convert base base after convert digit interpret base number sum return base
358
replac all digit charact you index string lowercas english letter indic digit odd indic there function shift charact digit return xth charact for shift shift for odd index replac digit shift return replac digit it guarante shift exceed
359
minimum distanc target element given integ array num index integ target start find index num target ab start minim note ab absolut return ab start it guarante target exist num
360
maximum popul year you d integ array log log birthi deathi birth death year ith person the popul year number peopl aliv year the ith person count year popul inclus rang birthi deathi note person count year die return earliest year maximum popul
361
sort sentenc a sentenc list word separ singl space lead trail space each word consist lowercas uppercas english letter a sentenc shuffl append index word posit word rearrang word sentenc for sentenc thi sentenc shuffl sentenc thi sentenc thi given shuffl sentenc word reconstruct return origin sentenc
362
sum all subset xor total the xor total array defin bitwis xor element array empti for xor total array xor xor given array num return sum xor total subset num note subset element count multipl time an array subset array obtain delet possibl element
363
longer contigu segment one zero given binari string return true longest contigu segment strictli longer longest contigu segment return fals for longest contigu segment length longest contigu segment length note longest contigu segment consid length the appli
364
substr size three distinct charact a string good repeat charact given string return number good substr length note multipl occurr substr occurr count a substr contigu sequenc charact string
365
check word equal summat two word the letter letter posit alphabet start gt gt gt the numer string lowercas english letter concaten letter valu letter convert integ for acb concaten letter letter result after convert you string firstword secondword targetword consist lowercas english letter inclus return true summat numer valu firstword secondword equal numer targetword fals
366
determin whether matrix can be obtain by rotat given binari matric mat target return true make mat equal target rotat mat degre increment fals
367
check all integ rang are cover you d integ array rang integ left each rang starti endi repres inclus interv starti endi return true integ inclus rang left cover interv rang return fals an integ cover interv rang starti endi starti lt lt endi
368
redistribut charact make all string equal you array string word index in oper pick distinct indic word empti string move charact word posit word return true make string word equal number oper fals
369
largest odd number string you string num repres larg integ return largest valu odd integ string empti substr num empti string odd integ exist a substr contigu sequenc charact string
370
remov one element make array strictli increas given index integ array num return true made strictli increas remov element fals if array strictli increas return true the array num strictli increas num lt num index lt lt num length
371
maximum product differ between two pair the product differ pair defin for product differ given integ array num choos distinct indic product differ pair num num num num maxim return maximum product differ
372
build array permut given base permut num index build array an length an num num lt lt num length return a base permut num array distinct integ num length inclus
373
count squar sum tripl a squar tripl tripl integ given integ return number squar tripl lt lt
374
concaten array given integ array num length creat array an length an num an num lt lt index specif an concaten num array return array an
375
maximum number word you can type there malfunct keyboard letter key work all key keyboard work properli given string text word separ singl space lead trail space string brokenlett distinct letter key broken return number word text fulli type keyboard
376
check all charact have equal number occurr given string return true good string fals a string good charact number occurr frequenc
377
sum digit string after convert you string consist lowercas english letter integ first convert integ replac letter posit alphabet replac then transform integ replac sum digit repeat transform oper time total for zbax result integ oper convert zbax transform transform return result integ perform oper
378
three divisor given integ return true posit divisor otherwis return fals an integ divisor exist integ
379
delet charact make fanci string a fanci string string consecut charact equal given string delet minimum number charact make fanci return final string delet it shown answer uniqu
380
check if string is prefix array given string array string word determin prefix string word a string prefix string word made concaten string word posit larger word length return true prefix string word fals
381
number string that appear substr word given array string pattern string word return number string pattern exist substr word a substr contigu sequenc charact string
382
find path exist graph there bi direct graph vertic vertex label inclus the edg graph repres d integ array edg edg ui vi denot bi direct edg vertex ui vertex vi everi vertex pair connect edg vertex edg you determin valid path exist vertex start vertex end given edg integ start end return true valid path start end fals
383
minimum time type word use special typewrit there special typewrit lowercas english letter arrang circl pointer a charact type pointer point charact the pointer initi point charact each perform oper move pointer charact counterclockwis clockwis type charact pointer given string word return minimum number second type charact word
384
find greatest common divisor array given integ array num return greatest common divisor smallest number largest number num the greatest common divisor number largest posit integ evenli divid number
385
add two number you empti link list repres neg integ the digit store revers order node singl digit add number return sum link list you assum number lead number
386
longest substr without repeat charact given string find length longest substr repeat charact
387
longest palindrom substr given string return longest palindrom substr
388
zigzag convers the string paypalishir written zigzag pattern number row display pattern fix font legibl p a h n a p l s i i g y i r and read line line pahnaplsiigyir write code string make convers number row string convert string int numrow
389
string integ atoi implement myatoi string function convert string bit sign integ similar c c atoi function the algorithm myatoi string read ignor lead whitespac check charact end string read charact thi determin final result neg posit assum result posit present read charact digit charcter end input reach the rest string convert digit integ gt gt if digit read integ chang sign step if integ bit sign integ rang clamp integ remain rang specif integ clamp integ greater clamp return integ final result note onli space charact consid whitespac charact do ignor charact lead whitespac rest string digit
390
contain with most water given neg integ repres point coordin ai vertic line drawn endpoint line ai find line axi form contain contain water notic slant contain
391
integ roman roman numer repres symbol i v x l c d m symbol valu i v x l c d m for written ii roman numer ad written xii simpli x ii the number written xxvii xx v ii roman numer written largest smallest left howev numer iiii instead number written iv becaus subtract make the principl appli number written ix there instanc subtract i v x make x l c make c d m make given integ convert roman numer
392
sum given integ array num return triplet num num num num num num notic solut set duplic triplet
393
sum closest given integ array num length integ target find integ num sum closest target return sum integ you assum input solut
394
letter combin phone number given string digit inclus return letter combin number repres return answer order a map digit letter telephon button note map letter
395
sum given array num integ return array uniqu quadruplet num num num num lt lt distinct num num num num target you return answer order
396
remov nth node from end list given head link list remov nth node end list return head
397
gener parenthes given pair parenthes write function gener combin form parenthes
398
swap node pair given link list swap adjac node return head you solv problem modifi valu list node node chang
399
divid two integ given integ dividend divisor divid integ multipl divis mod oper return quotient divid dividend divisor the integ divis truncat mean lose fraction part for truncat truncat note assum deal environ store integ bit sign integ rang for problem assum function return divis result overflow
400
next permut implement permut rearrang number lexicograph greater permut number if arrang rearrang lowest order sort ascend order the replac place constant extra memori
401
search rotat sort array there integ array num sort ascend order distinct valu prior pass function num rotat unknown pivot index lt lt num length result array num num num num num num index for rotat pivot index given array num rotat integ target return index target num num you write algorithm o log runtim complex
402
find first last posit element sort array given array integ num sort ascend order find start end posit target if target found array return you write algorithm o log runtim complex
403
valid sudoku determin sudoku board valid onli fill cell valid rule each row digit repetit each column digit repetit each box grid digit repetit note a sudoku board partial fill valid necessarili solvabl onli fill cell valid mention rule
404
count say the count sequenc sequenc digit string defin recurs formula countandsay countandsay digit string countandsay convert digit string to determin digit string split minim number group group contigu section charact then group number charact charact to convert digit string replac count number concaten for convers digit string given posit integ return nth term count sequenc
405
combin sum given array distinct integ candid target integ target return list uniqu combin candid chosen number sum target you return combin order the number chosen candid unlimit number time two combin uniqu frequenc chosen number it guarante number uniqu combin sum target combin input
406
combin sum ii given collect candid number candid target number target find uniqu combin candid candid number sum target each number candid combin note the solut set duplic combin
407
multipli string given neg integ num num repres string return product num num repres string note you built biginteg librari convert input integ directli
408
jump game ii given array neg integ num initi posit index array each element array repres maximum jump length posit your goal reach index minimum number jump you assum reach index
409
permut given array num distinct integ return permut you return answer order
410
permut ii given collect number num duplic return uniqu permut order
411
rotat imag you d matrix repres imag rotat imag degre clockwis you rotat imag place mean modifi input d matrix directli do not alloc d matrix rotat
412
group anagram given array string str group anagram you return answer order an anagram word phrase form rearrang letter word phrase typic origin letter
413
pow implement pow calcul rais power xn
414
spiral matrix given matrix return element matrix spiral order
415
jump game you integ array num you initi posit array index element array repres maximum jump length posit return true reach index fals
416
merg interv given array interv interv starti endi merg overlap interv return array overlap interv cover interv input
417
insert interv you array overlap interv interv interv starti endi repres start end ith interv interv sort ascend order starti you interv newinterv start end repres start end interv insert newinterv interv interv sort ascend order starti interv overlap interv merg overlap interv return interv insert
418
spiral matrix ii given posit integ gener matrix fill element spiral order
419
rotat list given head link list rotat list place
420
uniqu path a robot locat top left corner grid mark start diagram the robot move point time the robot reach bottom corner grid mark finish diagram how uniqu path
421
uniqu path ii a robot locat top left corner grid mark start diagram the robot move point time the robot reach bottom corner grid mark finish diagram now obstacl ad grid how uniqu path an obstacl space mark grid
422
minimum path sum given grid fill neg number find path top left bottom minim sum number path note you move point time
423
simplifi path given string path absolut path start slash file directori unix style file system convert simplifi canon path in unix style file system period refer current directori doubl period refer directori level multipl consecut slash treat singl slash for problem format period treat file directori name the canon path format the path start singl slash ani directori separ singl slash the path end trail the path directori path root directori target file directori period doubl period return simplifi canon path
424
set matrix zero given integ matrix matrix element set entir row column return matrix you place
425
search d matrix write effici algorithm search matrix thi matrix properti integ row sort left the integ row greater integ previou row
426
sort color given array num object color red white blue sort place object color adjac color order red white blue we integ repres color red white blue you solv problem librari sort function
427
combin given integ return combin number rang you return answer order
428
subset given integ array num uniqu element return subset power set the solut set duplic subset return solut order
429
word search given grid charact board string word return true word exist grid the word construct letter sequenti adjac cell adjac cell horizont vertic neighbor the letter cell
430
remov duplic sort array ii given integ array num sort decreas order remov duplic place uniqu element appear the rel order element sinc imposs chang length array languag result part array num more formal element remov duplic element num hold final result it matter leav element return place final result slot num do alloc extra space array you modifi input array place o extra memori custom judg the judg test solut code int num input array int expectednum the expect answer correct length int removedupl num call implement assert expectednum length int lt assert num expectednum if assert pass solut accept
431
search rotat sort array ii there integ array num sort decreas order necessarili distinct valu befor pass function num rotat unknown pivot index lt lt num length result array num num num num num num index for rotat pivot index given array num rotat integ target return true target num fals num you decreas oper step
432
remov duplic sort list ii given head sort link list delet node duplic number leav distinct number origin list return link list sort
433
partit list given head link list partit node node greater equal you preserv origin rel order node partit
434
gray code an bit gray code sequenc sequenc integ everi integ inclus rang the integ an integ appear sequenc the binari represent pair adjac integ differ bit the binari represent integ differ bit given integ return valid bit gray code sequenc
435
subset ii given integ array num duplic return subset power set the solut set duplic subset return solut order
436
decod way a messag letter a z encod number map a gt b gt z gt to decod encod messag digit group map back letter revers map multipl way for map aajf group kjf group note group invalid map f given string digit return number way decod the answer guarante fit bit integ
437
revers link list ii given head singli link list integ left left lt revers node list posit left posit return revers list
438
restor ip address given string digit return valid ip address obtain you return order a valid ip address consist integ integ separ singl dot lead zero for valid ip address invalid ip address
439
uniqu binari search tree ii given integ return structur uniqu bst binari search tree node uniqu valu return answer order
440
uniqu binari search tree given integ return number structur uniqu bst binari search tree node uniqu valu
441
interleav string given string find form interleav an interleav string configur divid empti substr sn tm lt the interleav note concaten string
442
valid binari search tree given root binari tree determin valid binari search tree bst a valid bst defin the left subtre node node key node key the subtre node node key greater node key both left subtre binari search tree
443
recov binari search tree you root binari search tree bst valu node tree swap mistak recov tree chang structur
444
binari tree level order travers given root binari tree return level order travers node valu left level level
445
binari tree zigzag level order travers given root binari tree return zigzag level order travers node valu left left level altern
446
construct binari tree preorder inord travers given integ array preorder inord preorder preorder travers binari tree inord inord travers tree construct return binari tree
447
construct binari tree inord postord travers given integ array inord postord inord inord travers binari tree postord postord travers tree construct return binari tree
448
binari tree level order travers ii given root binari tree return bottom level order travers node valu left level level leaf root
449
convert sort list binari search tree given head singli link list element sort ascend order convert height balanc bst for problem height balanc binari tree defin binari tree depth subtre node differ
450
path sum ii given root binari tree integ targetsum return root leaf path sum node valu path equal targetsum each path return list node valu node refer a root leaf path path start root end leaf node a leaf node children
451
flatten binari tree link list given root binari tree flatten tree link list the link list treenod class child pointer point node list left child pointer null the link list order pre order travers binari tree
452
popul next right pointer each node you perfect binari tree leav level children the binari tree definit struct node int val node left node node popul pointer point node if node pointer set null initi pointer set null
453
popul next right pointer each node ii given binari tree struct node int val node left node node popul pointer point node if node pointer set null initi pointer set null
454
triangl given triangl array return minimum path sum top bottom for step move adjac number row more formal index current row move index index row
455
longest consecut sequenc given unsort array integ num return length longest consecut element sequenc you write algorithm run o time
456
sum root leaf number you root binari tree digit each root leaf path tree repres number for root leaf path gt gt repres number return total sum root leaf number test case gener answer fit bit integ a leaf node node children
457
surround region given matrix board x o captur region direct surround x a region captur flip o x surround region
458
palindrom partit given string partit substr partit palindrom return palindrom partit a palindrom string string read backward forward
459
clone graph given refer node connect undirect graph return deep copi clone graph each node graph int list list node neighbor class node public int val public list lt node gt neighbor test case format for simplic node node index index for node val node val the graph repres test case adjac list an adjac list collect unord list repres finit graph each list describ set neighbor node graph the node node val you return copi node refer clone graph
460
ga station there ga station circular rout amount ga ith station ga you car unlimit ga tank cost cost ga travel ith station station you begin journey empti tank ga station given integ array ga cost return start ga station index travel circuit clockwis direct return if exist solut guarante uniqu
461
singl number ii given integ array num element appear time appear find singl element return you implement solut linear runtim complex constant extra space
462
copi list random pointer a link list length node addit random pointer point node list null construct deep copi list the deep copi consist brand node node set origin node both random pointer node point node copi list pointer origin list copi list repres list state none pointer list point node origin list for node x y origin list x random gt y node copi list random gt return head copi link list the link list repres input output list node each node repres pair val random index val integ repres node val random index index node rang random pointer point null point node your code head origin link list
463
word break given string dictionari string worddict return true segment space separ sequenc dictionari word note word dictionari reus multipl time segment
464
link list cycl ii given head link list return node cycl begin if cycl return null there cycl link list node list reach continu pointer intern po denot index node tail pointer connect index it cycl note po pass paramet do modifi link list
465
reorder list you head singli link list the list repres l l ln ln reorder list form l ln l ln l ln you modifi valu list node onli node chang
466
lru cach design data structur constraint least recent use lru cach implement lrucach class lrucach int capac initi lru cach posit size capac int int key return key key exist return void put int key int updat key key exist otherwis add key pair cach if number key exce capac oper evict recent key the function put run o averag time complex
467
insert sort list given head singli link list sort list insert sort return sort list head the step insert sort algorithm insert sort iter consum input element repetit grow sort output list at iter insert sort remov element input data find locat belong sort list insert it repeat input element remain the graphic insert sort algorithm the partial sort list black initi element list one element red remov input data insert place sort list iter
468
sort list given head link list return list sort ascend order follow can sort link list o logn time o memori constant space
469
evalu revers polish notat evalu arithmet express revers polish notat valid oper each operand integ express note divis integ truncat it guarante rpn express valid that mean express evalu result divis oper
470
revers word string given input string revers order word a word defin sequenc space charact the word separ space return string word revers order concaten singl space note lead trail space multipl space word the return string singl space separ word do includ extra space
471
maximum product subarray given integ array num find contigu empti subarray array largest product return product it guarante answer fit bit integ a subarray contigu subsequ array
472
find minimum rotat sort array suppos array length sort ascend order rotat time for array num rotat time rotat time notic rotat array time result array given sort rotat array num uniqu element return minimum element array you write algorithm run o log time
473
find peak element a peak element element strictli greater neighbor given integ array num find peak element return index if array multipl peak return index peak you imagin num num you write algorithm run o log time
474
compar version number given version number version version compar version number consist revis join dot each revis consist digit lead zero everi revis charact revis index left leftmost revis revis revis revis for valid version number to compar version number compar revis left order revis compar integ ignor lead zero thi mean revis consid equal if version number revis index treat revis for version version revis revis lt return if version lt version return if version gt version return otherwis return
475
fraction recur decim given integ repres numer denomin fraction return fraction string format if fraction part repeat enclos repeat part parenthes if multipl answer return it guarante length answer string input
476
binari search tree iter implement bstiter class repres iter order travers binari search tree bst bstiter treenod root initi object bstiter class the root bst part constructor the pointer initi exist number smaller element bst boolean hasnext return true exist number travers pointer return fals int move pointer return number pointer notic initi pointer exist smallest number call return smallest element bst you assum call valid that number order travers call
477
largest number given list neg integ num arrang form largest number note the result larg return string integ
478
repeat dna sequenc the dna sequenc compos seri nucleotid abbrevi a c g t for acgaattccg dna sequenc when studi dna identifi repeat sequenc dna given string repres dna sequenc return letter long sequenc substr occur dna molecul you return answer order
479
rotat array given array rotat array step neg
480
hous robber you profession robber plan rob hous street each hous amount money stash constraint stop rob adjac hous secur system connect automat contact polic adjac hous broken night given integ array num repres amount money hous return maximum amount money rob tonight alert polic
481
binari tree right side view given root binari tree imagin stand side return valu node order top bottom
482
number island given d binari grid grid repres map land water return number island an island surround water form connect adjac land horizont vertic you assum edg grid surround water
483
bitwis and number rang given integ left repres rang left return bitwis and number rang inclus
484
cours schedul there total numcours cours label numcours you array prerequisit prerequisit ai bi bi ai for pair return true finish cours otherwis return fals
485
implement trie prefix tree a trie pronounc prefix tree tree data structur effici store retriev key dataset string there applic data structur autocomplet spellcheck implement trie class trie initi trie object void insert string word insert string word trie boolean search string word return true string word trie insert fals boolean startswith string prefix return true previous insert string word prefix prefix fals
486
minimum size subarray sum given array posit integ num posit integ target return minim length contigu subarray numsl numsl numsr numsr sum greater equal target if subarray return
487
cours schedul ii there total numcours cours label numcours you array prerequisit prerequisit ai bi bi ai for pair return order cours finish cours if valid answer return if imposs finish cours return empti array
488
design add search word data structur design data structur support ad word find string match previous ad string implement worddictionari class worddictionari initi object void addword word add word data structur match bool search word return true string data structur match word fals word dot dot match letter
489
hous robber ii you profession robber plan rob hous street each hous amount money stash all hous place arrang circl that mean hous neighbor meanwhil adjac hous secur system connect automat contact polic adjac hous broken night given integ array num repres amount money hous return maximum amount money rob tonight alert polic
490
kth largest element array given integ array num integ return kth largest element array note kth largest element sort order kth distinct element
491
combin sum iii find valid combin number sum condit true onli number each number return list valid combin the list combin combin return order
492
contain duplic iii given integ array num integ return true distinct indic array ab num num lt ab lt
493
maxim squar given binari matrix fill find largest squar return area
494
count complet tree node given root complet binari tree return number node tree accord wikipedia level possibl complet fill complet binari tree node level left it node inclus level design algorithm run o time complex
495
rectangl area given coordin rectilinear rectangl d plane return total area cover rectangl the rectangl defin bottom left corner ax ay top corner ax ay the rectangl defin bottom left corner bx top corner bx
496
basic calcul ii given string repres express evalu express return the integ divis truncat you assum express valid all intermedi result rang note you allow built function evalu string mathemat express eval
497
major element ii given integ array size find element time follow could solv problem linear time o space
498
kth smallest element bst given root binari search tree integ return kth index smallest element tree
499
lowest common ancestor binari tree given binari tree find lowest common ancestor lca node tree accord definit lca wikipedia the lowest common ancestor defin node lowest node t descend node descend
500
product array except self given integ array num return array answer answer equal product element num num the product prefix suffix num guarante fit bit integ you write algorithm run o time divis oper
501
search d matrix ii write effici algorithm search target integ matrix the matrix properti integ row sort ascend left integ column sort ascend top bottom
502
differ way add parenthes given string express number oper return result comput way group number oper you return answer order
503
singl number iii given integ array num element element find element you return answer order you write algorithm run linear runtim complex constant extra space
504
ugli number ii an ugli number posit integ prime factor limit given integ return nth ugli number
505
h index given array integ citat citat number citat research receiv ith paper return comput research index accord definit index wikipedia a scientist index paper citat paper citat if valu maximum index
506
h index ii given array integ citat citat number citat research receiv ith paper citat sort ascend order return comput research index accord definit index wikipedia a scientist index paper citat paper citat if valu maximum index you write algorithm run logarithm time
507
perfect squar given integ return number perfect squar number sum a perfect squar integ squar integ word product integ for perfect squar
508
peek iter design iter support peek oper list addit hasnext oper implement peekingiter class peekingiter int num initi object integ array num int return element array move pointer element bool hasnext return true element array int peek return element array move pointer
509
find duplic number given array integ num integ integ rang inclus there repeat number num return repeat number you solv problem modifi array num constant extra space
510
game life accord wikipedia articl the game life simpli life cellular automaton devis british mathematician john horton conway the board made grid cell cell initi state live repres dead repres each cell interact neighbor horizont vertic diagon rule wikipedia articl ani live cell fewer live neighbor die caus popul ani live cell live neighbor live gener ani live cell live neighbor die popul ani dead cell live neighbor live cell reproduct the state creat appli rule simultan cell current state birth death occur simultan given current state grid board return state
511
bull cow you play bull cow game friend you write secret number friend guess number when friend make guess provid hint info the number bull digit guess correct posit the number cow digit guess secret number locat wrong posit specif bull digit guess rearrang bull given secret number secret friend guess guess return hint friend guess the hint format xayb number bull number cow note secret guess duplic digit
512
longest increas subsequ given integ array num return length longest strictli increas subsequ a subsequ sequenc deriv array delet element chang order remain element for subsequ array
513
rang sum queri d immut given d matrix matrix handl multipl queri type calcul sum element matrix insid rectangl defin upper left corner row col lower corner row col implement nummatrix class nummatrix int matrix initi object integ matrix matrix int sumregion int row int col int row int col return sum element matrix insid rectangl defin upper left corner row col lower corner row col
514
addit number addit number string digit form addit sequenc a valid addit sequenc number except number subsequ number sequenc sum preced given string digit write function determin addit number note number addit sequenc lead zero sequenc invalid
515
rang sum queri mutabl given integ array num handl multipl queri type updat element num calcul sum element num indic left inclus left lt implement numarray class numarray int num initi object integ array num void updat int index int val updat num index val int sumrang int left int return sum element num indic left inclus num left num left num
516
best time buy sell stock cooldown you array price price price stock ith day find maximum profit achiev you complet transact buy sell share stock multipl time restrict after sell stock buy stock day cooldown day note you engag multipl transact simultan sell stock buy
517
minimum height tree a tree undirect graph vertic connect path in word connect graph simpl cycl tree given tree node label array edg edg ai bi undirect edg node ai bi tree choos node tree root when select node root result tree height among root tree minimum height min call minimum height tree mht return list mht root label you return answer order the height root tree number edg longest downward path root leaf
518
super ugli number a super ugli number posit integ prime factor array prime given integ array integ prime return nth super ugli number the nth super ugli number guarante fit bit sign integ
519
remov duplic letter given string remov duplic letter letter appear you make result smallest lexicograph order result
520
maximum product word length given string array word return maximum length word length word word share common letter if word exist return
521
bulb switcher there bulb initi you turn bulb turn bulb on round toggl bulb turn turn for ith round toggl bulb for nth round toggl bulb return number bulb round
522
coin chang you integ array coin repres coin denomin integ amount repres total amount money return fewest number coin make amount if amount money made combin coin return you assum infinit number kind coin
523
wiggl sort ii given integ array num reorder num lt num gt num lt num you assum input array valid answer
524
odd even link list given head singli link list group node odd indic node indic return reorder list the node consid odd node note rel order insid odd group remain input you solv problem o extra space complex o time complex
525
verifi preorder serial binari tree one serial binari tree preorder travers when encount null node record node if null node record sentinel for binari tree serial string repres null node given string comma separ valu preorder return true correct preorder travers serial binari tree it guarante comma separ string integ charact repres null pointer you assum input format valid for consecut comma note you allow reconstruct tree
526
reconstruct itinerari you list airlin ticket ticket fromi toi repres departur arriv airport flight reconstruct itinerari order return all ticket belong man depart jfk itinerari begin jfk if multipl valid itinerari return itinerari smallest lexic order read singl string for itinerari jfk lga smaller lexic order jfk lgb you assum ticket form valid itinerari you ticket
527
increas triplet subsequ given integ array num return true exist tripl indic lt lt num lt num lt num if indic exist return fals
528
hous robber iii the thief found place thieveri there entranc area call root besid root hous hous after tour smart thief realiz hous place form binari tree it automat contact polic directli link hous broken night given root binari tree return maximum amount money thief rob alert polic
529
flatten nest list iter you nest list integ nestedlist each element integ list element integ list implement iter flatten implement nestediter class nestediter list lt nestedinteg gt nestedlist initi iter nest list nestedlist int return integ nest list boolean hasnext return true integ nest list fals your code test pseudocod initi iter nestedlist re iter hasnext append iter end re return re if re match expect flatten list code judg correct
530
integ break given integ break sum posit integ gt maxim product integ return maximum product
531
top k frequent element given integ array num integ return frequent element you return answer order
532
design twitter design simplifi version twitter user post tweet follow unfollow user recent tweet user news feed implement twitter class twitter initi twitter object void posttweet int userid int tweetid compos tweet id tweetid user userid each call function made uniqu tweetid list lt integ gt getnewsfe int userid retriev recent tweet id user news feed each item news feed post user user user themself tweet order recent recent void follow int followerid int followeeid the user id followerid start user id followeeid void unfollow int followerid int followeeid the user id followerid start unfollow user id followeeid
533
count number uniqu digit given integ return count number uniqu digit lt lt
534
water jug problem you jug capac jug capac jug capac liter there infinit amount water suppli determin measur targetcapac liter jug if targetcapac liter water measur targetcapac liter water contain bucket end oper allow fill jug water empti jug pour water jug till jug complet full jug empti
535
largest divis subset given set distinct posit integ num return largest subset answer pair answer answer element subset satisfi answer answer answer answer if multipl solut return
536
sum two integ given integ return sum integ oper
537
super pow your task calcul ab mod posit integ extrem larg posit integ form array
538
find k pair smallest sum you integ array num num sort ascend order integ defin pair consist element array element array return pair uk vk smallest sum
539
guess number higher lower ii we play guess game the game work i pick number you guess number if guess number win game if guess wrong number i number i pick higher lower continu guess everi time guess wrong number pay dollar if run money lose game given return minimum amount money guarante win number i pick
540
wiggl subsequ a wiggl sequenc sequenc differ success number strictli altern posit neg the differ exist posit neg a sequenc element sequenc equal element trivial wiggl sequenc for wiggl sequenc differ altern posit neg in contrast wiggl sequenc the differ posit differ a subsequ obtain delet element possibl origin sequenc leav remain element origin order given integ array num return length longest wiggl subsequ num
541
combin sum iv given array distinct integ num target integ target return number combin add target the answer guarante fit bit integ
542
kth smallest element sort matrix given matrix row column sort ascend order return kth smallest element matrix note kth smallest element sort order kth distinct element
543
insert delet getrandom o implement randomizedset class randomizedset initi randomizedset object bool insert int val insert item val set present return true item present fals bool remov int val remov item val set present return true item present fals int getrandom return random element current set element guarante element exist method call each element probabl return you implement function class function work averag o time complex
544
link list random node given singli link list return random node link list each node probabl chosen implement solut class solut listnod head initi object integ array num int getrandom choos node randomli list return all node list equal choosen
545
shuffl array given integ array num design algorithm randomli shuffl array all permut array equal result shuffl implement solut class solut int num initi object integ array num int reset reset array origin configur return int shuffl return random shuffl array
546
mini parser given string repres serial nest list implement parser deseri return deseri nestedinteg each element integ list element integ list
547
lexicograph number given integ return number rang sort lexicograph order you write algorithm run o time o extra space
548
longest absolut file path suppos file system store file directori an system repres pictur here dir directori root dir subdirectori subdir subdir subdir file file ext subdirectori subsubdir subdir subdirectori subsubdir file file ext in text form repres tab charact dir subdir file ext subsubdir subdir subsubdir file ext if write represent code dir tsubdir tfile ext tsubsubdir tsubdir tsubsubdir tfile ext note line tab charact everi file directori uniqu absolut path file system order directori open reach file directori concaten use absolut path file ext dir subdir subsubdir file ext each directori consist letter digit space each file form extens extens consist letter digit space given string input repres file system explain format return length longest absolut path file abstract file system if file system return
549
elimin game you list arr integ rang sort strictli increas order appli algorithm arr start left remov number number afterward reach end list repeat previou step time left remov rightmost number number remain number keep repeat step altern left left singl number remain given integ return number remain arr
550
utf valid given integ array data repres data return valid utf encod a charact utf byte long subject rule for byte charact bit unicod code for byte charact bit bit byte signific bit thi utf encod work char number rang utf octet sequenc hexadecim binari f xxxxxxx ff xxxxx xxxxxx ffff xxxx xxxxxx xxxxxx ffff xxx xxxxxx xxxxxx xxxxxx note the input array integ onli signific bit integ store data thi mean integ repres byte data
551
decod string given encod string return decod string the encod rule encod string encod string insid squar bracket repeat time note guarante posit integ you assum input string valid no extra white space squar bracket form furthermor assum origin data digit digit repeat number for won input
552
longest substr at least k repeat charact given string integ return length longest substr frequenc charact substr greater equal
553
rotat function you integ array num length assum arrk array obtain rotat num posit clock wise we defin rotat function f num follow f arrk arrk arrk return maximum f f f the test case gener answer fit bit integ
554
integ replac given posit integ appli oper if replac if odd replac return minimum number oper need
555
random pick index given integ array num duplic randomli output index target number you assum target number exist array implement solut class solut int num initi object array num int pick int target pick random index num num target if multipl valid index equal probabl return
556
evalu divis you array variabl pair equat array real number valu equat ai bi valu repres equat ai bi valu each ai bi string repres singl variabl you queri queri cj dj repres jth queri find answer cj dj return answer queri if singl answer determin return note the input valid you assum evalu queri result divis contradict
557
nth digit given integ return nth digit infinit integ sequenc
558
remov k digit given string num repres neg integ num integ return smallest integ remov digit num
559
queue reconstruct height you array peopl peopl attribut peopl queue necessarili order each peopl ki repres ith person height ki peopl front height greater equal reconstruct return queue repres input array peopl the return queue format array queue queue hj kj attribut jth person queue queue person front queue
560
arithmet slice an integ array call arithmet consist element differ consecut element for arithmet sequenc given integ array num return number arithmet subarray num a subarray contigu subsequ array
561
partit equal subset sum given empti array num posit integ find array partit subset sum element subset equal
562
pacif atlant water flow there rectangular island border pacif ocean atlant ocean the pacif ocean touch island left top edg atlant ocean touch island bottom edg the island partit grid squar cell you integ matrix height height repres height sea level cell coordin the island receiv lot rain rain water flow neighbor cell directli north south east west neighbor cell height equal current cell height water flow cell adjac ocean ocean return d list grid coordin result result ri ci denot rain water flow cell ri ci pacif atlant ocean
563
battleship board given matrix board cell battleship x empti return number battleship board battleship horizont vertic board in word made shape row column row column size at horizont vertic cell separ battleship adjac battleship
564
maximum xor two number array given integ array num return maximum result num xor num lt lt lt
565
reconstruct origin digit english given string order english represent digit return digit ascend order
566
longest repeat charact replac you string integ you choos charact string chang uppercas english charact you perform oper time return length longest substr letter perform oper
567
construct quad tree given matrix grid we repres grid quad tree return root quad tree repres grid notic assign node true fals isleaf fals accept answer a quad tree tree data structur intern node children besid node attribut val true node repres grid fals node repres grid isleaf true node leaf node tree fals node children class node public boolean val public boolean isleaf public node topleft public node topright public node bottomleft public node bottomright we construct quad tree dimension area step if current grid set isleaf true set val grid set children null stop if current grid valu set isleaf fals set val divid current grid grid shown photo recurs children proper grid if quad tree refer wiki quad tree format the output repres serial format quad tree level order travers null signifi path termin node exist it similar serial binari tree the differ node repres list isleaf val if isleaf val true repres list isleaf val isleaf val fals repres
568
n ari tree level order travers given ari tree return level order travers node valu nari tree input serial repres level order travers group children separ null see exampl
569
flatten multilevel doubli link list you doubli link list addit previou pointer child pointer point separ doubli link list these child list children produc multilevel data structur shown flatten list node singl level doubli link list you head level list
570
minimum genet mutat a gene string repres charact long string choic a c g t suppos investig mutat gene string start gene string end mutat defin singl charact chang gene string for aaccggtt gt aaccggta mutat there gene bank bank record valid gene mutat a gene bank make valid gene string given gene string start end gene bank bank return minimum number mutat need mutat start end if mutat return note start point assum valid includ bank
571
non overlap interv given array interv interv interv starti endi return minimum number interv remov make rest interv overlap
572
find right interv you array interv interv starti endi starti uniqu the interv interv interv startj gt endi startj minim return array interv indic interv if interv exist interv put index
573
path sum iii given root binari tree integ targetsum return number path sum valu path equal targetsum the path start end root leaf travel node child node
574
find all anagram string given string return array start indic anagram you return answer order an anagram word phrase form rearrang letter word phrase typic origin letter
575
find all duplic array given integ array num length integ num rang integ appear return array integ appear you write algorithm run o time constant extra space
576
string compress given array charact char compress algorithm begin empti string for group consecut repeat charact char if group length append charact otherwis append charact group length the compress string return separ store input charact array char note group length longer split multipl charact char after modifi input array return length array you write algorithm constant extra space
577
add two number ii you empti link list repres neg integ the signific digit node singl digit add number return sum link list you assum number lead number
578
number boomerang you point plane distinct point xi yi a boomerang tupl point distanc equal distanc order tupl matter return number boomerang
579
serial deseri bst serial convert data structur object sequenc bit store file memori buffer transmit network connect link reconstruct comput environ design algorithm serial deseri binari search tree there restrict serial deseri algorithm work you ensur binari search tree serial string string deseri origin tree structur the encod string compact
580
delet node bst given root node refer bst key delet node key bst return root node refer possibl updat bst basic delet divid stage search node remov if node found delet node follow can solv time complex o height tree
581
sort charact by frequenc given string sort decreas order base frequenc charact return sort string
582
minimum number arrow burst balloon there spheric balloon spread dimension space for balloon provid input start end coordin horizont diamet sinc horizont coordin don matter coordin start end diamet suffic the start smaller end an arrow shot vertic point axi a balloon xstart xend burst arrow shot xstart xend there limit number arrow shot an arrow shot travel infinit given array point point xstart xend return minimum number arrow shot burst balloon
583
sum ii given integ array num num num num length return number tupl lt lt num num num num
584
pattern given array integ num pattern subsequ integ num num num lt lt num lt num lt num return true pattern num return fals
585
circular array loop you play game involv circular array integ num each num denot number indic forward backward move locat index if num posit move num step forward if num neg move num step backward sinc array circular assum move forward element put element move backward element put element a cycl array consist sequenc indic seq length follow movement rule result repeat index sequenc seq gt seq gt gt seq gt seq gt everi num seq posit neg gt return true cycl num fals
586
minimum move equal array element ii given integ array num size return minimum number move requir make array element equal in move increment decrement element array test case design answer fit bit integ
587
can i win in game player turn ad run total integ the player run total reach exceed win what chang game player integ for player turn draw common pool number replac reach total gt given integ maxchoosableinteg desiredtot return true player move forc win return fals assum player play optim
588
uniqu substr wraparound string we defin string infinit wraparound string abcdefghijklmnopqrstuvwxyz zabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcd given string return number uniqu empti substr present
589
valid ip address given string ip return ipv ip valid ipv address ipv ip valid ipv address neither ip correct ip type a valid ipv address ip form lt xi lt xi lead zero for valid ipv address invalid ipv address a valid ipv address ip form lt xi length lt xi hexadecim string digit lower case english letter upper case english letter a f lead zero allow xi for db db a e valid ipv address db a e db invalid ipv address
590
implement rand use rand given api rand gener uniform random integ rang write function rand gener uniform random integ rang you call api rand shouldn call api pleas languag built random api each test case intern argument number time implement function rand call test note argument pass rand follow what expect number call rand function could minim number call rand
591
matchstick squar you integ array matchstick matchstick length ith matchstick you matchstick make squar you break stick link matchstick time return true make squar fals
592
one zero you array binari string str integ return size largest subset str subset a set subset set element element
593
heater winter come dure contest job design standard heater fix warm radiu warm hous everi hous warm long hous heater warm radiu rang given posit hous heater horizont line return minimum radiu standard heater heater cover hous notic heater follow radiu standard warm radiu
594
total ham distanc the ham distanc integ number posit bit given integ array num return sum ham distanc pair integ num
595
gener random point circl given radiu posit center circl implement function randpoint gener uniform random point insid circl implement solut class solut doubl radiu doubl center doubl center initi object radiu circl radiu posit center center center randpoint return random point insid circl a point circumfer circl consid circl the answer return array
596
magic string a magic string consist obey rule the string magic concaten number contigu occurr charact gener string the element if group consecut occurr group you occurr sequenc given integ return number number magic string
597
predict winner you integ array num two player play game array player player player player turn player start both player start game score at turn player take number end array num num num length reduc size array the player add chosen number score the game end element array return true player win game if score player equal player winner return true you assum player play optim
598
increas subsequ given integ array num return increas subsequ array element you return answer order the array duplic equal integ consid special case increas sequenc
599
target sum you integ array num integ target you build express num ad symbol integ num concaten integ for num add concaten build express return number express build evalu target
600
random point non overlap rectangl you array overlap axi align rectangl rect rect ai bi xi yi ai bi bottom left corner point ith rectangl xi yi top corner point ith rectangl design algorithm pick random integ point insid space cover rectangl a point perimet rectangl includ space cover rectangl ani integ point insid space cover rectangl equal return note integ point point integ coordin implement solut class solut int rect initi object rectangl rect int pick return random integ point insid space cover rectangl
601
diagon travers given matrix mat return array element array diagon order
602
next greater element ii given circular integ array num element num num length num return greater number element num the greater number number greater number travers order array mean search circularli find greater number if doesn exist return number
603
most frequent subtre sum given root binari tree return frequent subtre sum if tie return valu highest frequenc order the subtre sum node defin sum node valu form subtre root node includ node
604
find bottom left tree valu given root binari tree return leftmost row tree
605
find largest valu each tree row given root binari tree return array largest row tree index
606
longest palindrom subsequ given string find longest palindrom subsequ length a subsequ sequenc deriv sequenc delet element chang order remain element
607
coin chang you integ array coin repres coin denomin integ amount repres total amount money return number combin make amount if amount money made combin coin return you assum infinit number kind coin the answer guarante fit sign bit integ
608
random flip matrix there binari grid matrix valu set initi design algorithm randomli pick index matrix flip all indic matrix equal return optim algorithm minim number call made built random function languag optim time space complex implement solut class solut int int initi object size binari matrix int flip return random index matrix matrix flip void reset reset valu matrix
609
longest uncommon subsequ ii given array string str return length longest uncommon subsequ if longest uncommon subsequ exist return an uncommon subsequ array string string subsequ string a subsequ string string obtain delet number charact for abc subsequ aebdc delet underlin charact aebdc abc other subsequ aebdc includ aebdc aeb empti string
610
continu subarray sum given integ array num integ return true num continu subarray size element sum multipl fals an integ multipl exist integ multipl
611
longest word dictionari delet given string string array dictionari return longest string dictionari form delet string charact if result return longest word smallest lexicograph order if result return empti string
612
contigu array given binari array num return maximum length contigu subarray equal number
613
beauti arrang suppos integ label a permut integ perm index consid beauti arrang lt lt true perm divis divis perm given integ return number beauti arrang construct
614
random pick weight you array posit integ describ weight ith index index we call function pickindex randomli return integ rang length pickindex return integ proport weight array for probabl pick index probabl pick index more formal probabl pick index sum
615
minesweep let play minesweep game wikipedia onlin game you char matrix board repres game board m repres unrev mine e repres unrev empti squar b repres reveal blank squar adjac mine left diagon digit repres mine adjac reveal squar x repres reveal mine you integ array click click clickr clickc repres click posit unrev squar m e return board reveal posit rule if mine m reveal game you chang x if empti squar e adjac mine reveal chang reveal blank b adjac unrev squar reveal recurs if empti squar e adjac mine reveal chang digit repres number adjac mine return board squar reveal
616
k diff pair array given array integ num integ return number uniqu diff pair array a diff pair integ pair num num true lt lt lt num length num num notic val denot absolut val
617
encod decod tinyurl note thi companion problem system design problem design tinyurl tinyurl url shorten servic enter url http leetcod problem design tinyurl return short url http tinyurl iak design class encod url decod tini url there restrict encod decod algorithm work you ensur url encod tini url tini url decod origin url implement solut class solut initi object system string encod string longurl return tini url longurl string decod string shorturl return origin long url shorturl it guarante shorturl encod object
618
complex number multipl a complex number repres string form real imaginaryi real real part integ rang imaginari imaginari part integ rang given complex number num num string return string complex number repres multipl
619
convert bst greater tree given root binari search tree bst convert greater tree key origin bst chang origin key sum key greater origin key bst as remind binari search tree tree satisfi constraint the left subtre node node key node key the subtre node node key greater node key both left subtre binari search tree note thi question http leetcod problem binari search tree greater sum tree
620
minimum time differ given list hour clock time point hh mm format return minimum minut differ time point list
621
singl element sort array you sort array consist integ element appear element appear find singl element appear follow your solut run o log time o space
622
matrix given binari matrix mat return distanc nearest cell the distanc adjac cell
623
number provinc there citi some connect if citi connect directli citi citi connect directli citi citi connect indirectli citi a provinc group directli indirectli connect citi citi group you matrix isconnect isconnect ith citi jth citi directli connect isconnect return total number provinc
624
optim divis you integ array num the adjac integ num perform float divis for num evalu express howev add number parenthesi posit chang prioriti oper you add parenthes express evalu maximum return express maximum string format note express redund parenthesi
625
brick wall there rectangular brick wall front row brick the ith row number brick height unit width the total width row draw vertic line top bottom cross brick if line edg brick brick consid cross you draw line vertic edg wall case line cross brick given d array wall inform wall return minimum number cross brick draw vertic line
626
next greater element iii given posit integ find smallest integ digit exist integ greater if posit integ exist return note return integ fit bit integ valid answer fit bit integ return
627
logic or two binari grid repres quad tree a binari matrix matrix element given quadtre quadtre quadtre repres binari matrix quadtre repres binari matrix return quad tree repres binari matrix result logic bitwis or binari matrix repres quadtre quadtre notic assign node true fals isleaf fals accept answer a quad tree tree data structur intern node children besid node attribut val true node repres grid fals node repres grid isleaf true node leaf node tree fals node children class node public boolean val public boolean isleaf public node topleft public node topright public node bottomleft public node bottomright we construct quad tree dimension area step if current grid set isleaf true set val grid set children null stop if current grid valu set isleaf fals set val divid current grid grid shown photo recurs children proper grid if quad tree refer wiki quad tree format the input output repres serial format quad tree level order travers null signifi path termin node exist it similar serial binari tree the differ node repres list isleaf val if isleaf val true repres list isleaf val isleaf val fals repres
628
subarray sum equal k given array integ num integ return total number continu subarray sum equal
629
array nest you integ array num length num permut number rang you build set num num num num num num subject rule the element start select element num index the element num num num num num we stop ad duplic element occur return longest length set
630
permut string given string return true permut fals in word return true permut substr
631
out boundari path there grid ball the ball initi posit startrow startcolumn you allow move ball adjac cell grid possibl grid cross grid boundari you appli maxmov move ball given integ maxmov startrow startcolumn return number path move ball grid boundari sinc answer larg return modulo
632
shortest unsort continu subarray given integ array num find continu subarray sort subarray ascend order array sort ascend order return shortest subarray output length
633
delet oper two string given string word word return minimum number step requir make word word in step delet charact string
634
fraction addit subtract given string express repres express fraction addit subtract return calcul result string format the final result irreduc fraction if final result integ chang format fraction denomin so case convert
635
valid squar given coordin point d space return true point construct squar the coordin point pi repres xi yi the input order a valid squar equal side posit length equal angl degre angl
636
find duplic file system given list path directori info includ directori path file content directori return duplic file file system term path you return answer order a group duplic file consist file content a singl directori info string input list format root dm txt content txt content fn txt fn content it mean file txt txt fn txt content content content fn content directori root dm note gt gt if mean directori root directori the output list group duplic file path for group file path file content a file path string format directori path file txt
637
valid triangl number given integ array num return number triplet chosen array make triangl side length triangl
638
task schedul given charact array task repres task cpu letter repres task task order each task unit time for unit time cpu complet task idl howev neg integ repres cooldown period task letter array unit time task return number unit time cpu finish task
639
design circular queue design implement circular queue the circular queue linear data structur oper perform base fifo first in first out principl posit connect back posit make circl it call ring buffer one benefit circular queue make space front queue in normal queue queue full insert element space front queue but circular queue space store valu implement mycircularqueu class mycircularqueu initi object size queue int front get front item queue if queue empti return int rear get item queue if queue empti return boolean enqueu int insert element circular queue return true oper success boolean dequeu delet element circular queue return true oper success boolean isempti check circular queue empti boolean isful check circular queue full you solv problem built queue data structur program languag
640
add one row tree given root binari tree integ val depth add row node val depth depth note root node depth the ad rule given integ depth null tree node cur depth depth creat tree node val cur left subtre root subtre root cur origin left subtre left subtre left subtre root cur origin subtre subtre subtre root if depth mean depth depth creat tree node val root origin tree origin tree root left subtre
641
sum squar number given neg integ decid integ
642
exclus time function on singl thread cpu execut program function each function uniqu id function call store call stack function call start id push stack function call end id pop stack the function id top stack current function execut each time function start end write log id start end timestamp you list log log repres ith log messag format string function id start end timestamp for start mean function call function id start begin timestamp end mean function call function id end end timestamp note function call multipl time possibl recurs a function exclus time sum execut time function call program for function call call execut time unit call execut time unit exclus time return exclus time function array ith index repres exclus time function id
643
shop offer in leetcod store item sell each item price howev special offer special offer consist kind item sale price you integ array price price price ith item integ array number piec ith item buy you array special special size special number piec jth item ith offer special integ array price ith offer return lowest price pay item make optim special offer you allow buy item lower price you special offer time
644
solv equat solv equat return form string the equat oper variabl coeffici you return no solut solut equat infinit solut infinit solut equat if solut equat ensur integ
645
design circular dequ design implement circular doubl end queue dequ implement mycirculardequ class mycirculardequ int initi dequ maximum size boolean insertfront add item front dequ return true oper success fals boolean insertlast add item rear dequ return true oper success fals boolean deletefront delet item front dequ return true oper success fals boolean deletelast delet item rear dequ return true oper success fals int getfront return front item dequ return dequ empti int getrear return item dequ return dequ empti boolean isempti return true dequ empti fals boolean isful return true dequ full fals
646
maximum length pair chain you array pair pair pair lefti righti lefti lt righti a pair pair lt a chain pair form fashion return length longest chain form you interv you select pair order
647
palindrom substr given string return number palindrom substr a string palindrom read backward forward a substr contigu sequenc charact string
648
replac word in english concept call root word form longer word call word successor for root successor word form word given dictionari consist root sentenc consist word separ space replac successor sentenc root form if successor replac root replac root shortest length return sentenc replac
649
dota senat in world dota parti radiant dire the dota senat consist senat come parti now senat decid chang dota game the vote chang round base procedur in round senat exercis right ban senat a senat make senat lose right round announc victori if senat found senat right vote parti announc victori decid chang game given string senat repres senat parti belong the charact r d repres radiant parti dire parti then senat size string the round base procedur start senat senat order thi procedur end vote all senat lost right skip procedur suppos senat smart play strategi parti predict parti final announc victori chang dota game the output radiant dire
650
key keyboard there charact a screen notepad you perform oper notepad step copi all you copi charact present screen partial copi allow past you past charact copi time given integ return minimum number oper charact a time screen
651
find duplic subtre given root binari tree return duplic subtre for kind duplic subtre return root node two tree duplic structur node valu
652
maximum binari tree you integ array num duplic a maximum binari tree built recurs num algorithm creat root node maximum num recurs build left subtre subarray prefix left maximum recurs build subtre subarray suffix maximum return maximum binari tree built num
653
print binari tree given root binari tree construct index string matrix re repres format layout tree the format layout matrix construct rule the height tree height number row equal height the number column equal height place root node middl top row formal locat re for node matrix posit re place left child re height child re height continu process node tree ani empti cell empti string return construct matrix re
654
find k closest element given sort integ array arr integ return closest integ array the result sort ascend order an integ closer integ lt lt
655
split array consecut subsequ you integ array num sort decreas order determin split num subsequ condit true each subsequ consecut increas sequenc integ previou integ all subsequ length return true split num condit fals a subsequ array array form origin array delet element disturb rel posit remain element subsequ
656
maximum width binari tree given root binari tree return maximum width tree the maximum width tree maximum width level the width level defin length end node leftmost rightmost null node null node end node count length calcul it guarante answer rang bit sign integ
657
non decreas array given array num integ task check decreas modifi element we defin array decreas num lt num hold base lt lt
658
beauti arrang ii given integ construct list answer posit integ rang obey requir suppos list answer list distinct integ return list answer if multipl valid answer return
659
trim binari search tree given root binari search tree lowest highest boundari low high trim tree element lie low high trim tree chang rel structur element remain tree node descend remain descend it proven uniqu answer return root trim binari search tree note root chang depend bound
660
maximum swap you integ num you swap digit maximum valu number return maximum valu number
661
bulb switcher ii there room bulb label turn initi button wall each button function button flip statu bulb button flip statu bulb label button flip statu bulb odd label button flip statu bulb label you press mention button press time given integ press return number status press button press time
662
number longest increas subsequ given integ array num return number longest increas subsequ notic sequenc strictli increas
663
implement magic dictionari design data structur initi list word provid string determin chang charact string match word data structur implement magicdictionari class magicdictionari initi object void builddict string dictionari set data structur array distinct string dictionari bool search string searchword return true chang charact searchword match string data structur return fals
664
map sum pair design map map string key return sum valu key prefix equal string implement mapsum class mapsum initi mapsum object void insert string key int val insert key val pair map if key exist origin key pair overridden int sum string prefix return sum pair key start prefix
665
valid parenthesi string given string type charact return true valid the rule defin valid string ani left parenthesi parenthesi ani parenthesi left parenthesi left parenthesi parenthesi treat singl parenthesi singl left parenthesi empti string
666
redund connect in problem tree undirect graph connect cycl you graph start tree node label addit edg ad the ad edg vertic chosen edg exist the graph repres array edg length edg ai bi edg node ai bi graph return edg remov result graph tree node if multipl answer return answer occur input
667
repeat string match given string return minimum number time repeat string string substr if imposs substr repeat return notic string abc repeat time repeat time abc repeat time abcabc
668
longest univalu path given root binari tree return length longest path node path thi path pass root the length path node repres number edg
669
knight probabl chessboard on chessboard knight start cell row column attempt make move the row column index top left cell bottom cell a chess knight move make illustr each move cell cardin direct cell orthogon direct each time knight move choos move uniformli random piec chessboard move the knight continu move made move move chessboard return probabl knight remain board stop move
670
top k frequent word given array string word integ return frequent string return answer sort frequenc highest lowest sort word frequenc lexicograph order
671
max area island you binari matrix grid an island group repres land connect direct horizont vertic you assum edg grid surround water the area island number cell island return maximum area island grid if island return
672
partit k equal sum subset given integ array num integ return true divid array empti subset sum equal
673
insert binari search tree you root node binari search tree bst insert tree return root node bst insert it guarante exist origin bst notic exist multipl valid way insert long tree remain bst insert you return
674
design link list design implement link list you choos singli doubli link list a node singli link list attribut val val current node pointer refer node if doubli link list attribut prev previou node link list assum node link list index implement mylinkedlist class mylinkedlist initi mylinkedlist object int int index get indexth node link list if index invalid return void addathead int val add node val element link list after insert node node link list void addattail int val append node val element link list void addatindex int index int val add node val indexth node link list if index equal length link list node append end link list if index greater length node insert void deleteatindex int index delet indexth node link list index valid
675
minimum ascii delet sum two string given string return lowest ascii sum delet charact make string equal
676
subarray product less than k given array integ num integ return number contigu subarray product element subarray strictli
677
best time buy sell stock transact fee you array price price price stock ith day integ fee repres transact fee find maximum profit achiev you complet transact pay transact fee transact note you engag multipl transact simultan sell stock buy
678
maximum length repeat subarray given integ array num num return maximum length subarray appear array
679
longest word dictionari given array string word repres english dictionari return longest word word built charact time word word if answer return longest word smallest lexicograph order if answer return empti string
680
account merg given list account element account list string element account rest element email repres email account now merg account two account belong person common email account note account belong peopl peopl a person number account initi account after merg account return account format element account rest element email sort order the account return order
681
remov comment given c program remov comment the program sourc array string sourc sourc ith line sourc code thi repres result split origin sourc code string newlin charact in c type comment line comment block comment the string denot line comment repres rest charact line the string denot block comment repres charact overlap occurr here occurr happen read order line line left to clear string end block comment end overlap begin the effect comment take preced for string occur block comment similarli string occur line block comment if line code empti remov comment output line string answer list empti there control charact singl quot doubl quot charact for sourc string not comment test case also defin macro interfer comment it guarante open block comment eventu close line block comment start comment final implicit newlin charact delet block comment pleas exampl detail after remov comment sourc code return sourc code format
682
split link list part given head singli link list integ split link list consecut link list part the length part equal part size differ thi lead part null the part order occurr input list part occur earlier size greater equal part occur return array part
683
my calendar i you implement program calendar we add event ad event doubl book a doubl book event empti intersect moment common event the event repres pair integ start end repres book half open interv start end rang real number start lt lt end implement mycalendar class mycalendar initi calendar object boolean book int start int end return true event ad calendar success caus doubl book otherwis return fals add event calendar
684
my calendar ii you implement program calendar we add event ad event tripl book a tripl book event empti intersect moment common event the event repres pair integ start end repres book half open interv start end rang real number start lt lt end implement mycalendartwo class mycalendartwo initi calendar object boolean book int start int end return true event ad calendar success caus tripl book otherwis return fals add event calendar
685
asteroid collis we array asteroid integ repres asteroid row for asteroid absolut repres size sign repres direct posit mean neg mean left each asteroid move speed find state asteroid collis if asteroid meet smaller explod if size explod two asteroid move direct meet
686
monoton increas digit an integ monoton increas digit pair adjac digit satisfi lt given integ return largest number equal monoton increas digit
687
daili temperatur given array integ temperatur repres daili temperatur return array answer answer number day wait ith day warmer temperatur if futur day answer
688
delet earn you integ array num you maxim number point perform oper number time pick num delet earn num point afterward delet element equal num element equal num return maximum number point earn appli oper number time
689
network delay time you network node label you time list travel time direct edg time ui vi wi ui sourc node vi target node wi time take signal travel sourc target we send signal node return time take node receiv signal if imposs node receiv signal return
690
open lock you lock front circular wheel each wheel slot the wheel rotat freeli wrap turn each move consist turn wheel slot the lock initi start string repres state wheel you list deadend dead end mean lock display code wheel lock stop turn unabl open given target repres wheel unlock lock return minimum total number turn requir open lock imposs
691
reach number you stand posit infinit number line there destin posit target you make number move nummov on move left dure ith move start nummov step chosen direct given integ target return minimum number move requir minimum nummov reach destin
692
pyramid transit matrix we stack block form pyramid each block color letter string we allow place color block c top adjac block color a b abc allow tripl we start bottom row bottom repres singl string we start list allow tripl allow each allow tripl repres string length return true build pyramid top fals
693
partit label you string we partit string part letter appear part return list integ repres size part
694
largest plu sign you integ you binari grid grid valu initi indic array mine the ith element array mine defin mine xi yi grid xi yi return order largest axi align sign contain grid if return an axi align sign order center grid arm length left made note arm sign relev area sign check
695
reorgan string given string rearrang charact adjac charact return rearrang return
696
max chunk to make sort you integ array arr length repres permut integ rang we split arr number chunk partit individu sort chunk after concaten result equal sort array return largest number chunk make sort array
697
global local invers you integ array num length repres permut integ rang the number global invers number pair lt lt lt num gt num the number local invers number indic lt lt num gt num return true number global invers equal number local invers
698
swap adjac lr string in string compos l r x charact rxxlrxrxl move consist replac occurr xl lx replac occurr rx xr given start string start end string end return true exist sequenc move transform string
699
k symbol grammar we build tabl row index we start write st row now subsequ row previou row replac occurr occurr for st row row row given integ return kth index symbol nth row tabl row
700
rabbit forest there forest unknown number rabbit we ask rabbit how rabbit color collect answer integ array answer answer answer ith rabbit given array answer return minimum number rabbit forest
701
letter case permut given string transform letter individu lowercas uppercas creat string return list string creat you return output order
702
is graph bipartit there undirect graph node node number you d array graph graph array node node adjac more formal graph undirect edg node node the graph properti there edg graph there parallel edg graph duplic valu if graph graph graph undirect the graph connect mean node path a graph bipartit node partit independ set a b edg graph connect node set a node set b return true bipartit
703
cheapest flight within k stop there citi connect number flight you array flight flight fromi toi pricei flight citi fromi citi toi cost pricei you integ src dst return cheapest price src dst stop if rout return
704
rotat digit an integ good rotat digit individu degre valid number each digit rotat choos leav a number valid digit remain digit rotat for rotat rotat case rotat direct word mirror rotat rest number rotat number invalid given integ return number good integ rang
705
escap the ghost you play simplifi pac man game infinit d grid you start point destin point target xtarget ytarget there ghost map start posit array ghost ghost xi yi repres start posit ith ghost all input integr coordin each turn ghost independ choos move unit cardin direct north east south west stay all action happen simultan you escap reach target ghost reach if reach squar includ target time ghost count escap return true escap return fals
706
domino tromino tile you type tile domino shape tromino shape you rotat shape given integ return number way tile board sinc answer larg return modulo in tile squar cover tile two tile direct adjac cell board tile squar occupi tile
707
custom sort string you string order all word order uniqu sort custom order previous permut charact match order order sort more specif charact occur charact order occur permut string return permut satisfi properti
708
number match subsequ given string array string word return number word subsequ a subsequ string string gener origin string charact delet chang rel order remain charact for ace subsequ abcd
709
valid tic tac toe state given tic tac toe board string array board return true reach board posit valid tic tac toe game the board array consist charact x o the charact repres empti squar here rule tic tac toe player turn place charact empti squar the player place x charact player place o charact x o charact empti squar fill the game end empti charact fill row column diagon the game end squar empti no move play game
710
number subarray bound maximum given integ array num integ left return number contigu empti subarray maximum array element subarray rang left the test case gener answer fit bit integ
711
all path from sourc target given direct acycl graph dag node label find path node node return order the graph graph list node visit node direct edg node node graph
712
champagn tower we stack glass pyramid row glass row glass row each glass hold cup champagn then champagn pour glass top when topmost glass full excess liquid pour fall equal glass immedi left when glass full excess champagn fall equal left glass a glass bottom row excess champagn fall floor for cup champagn pour top glass full after cup champagn pour glass row half full after cup champagn pour cup full full glass total after cup champagn pour row middl glass half full glass quarter full pictur now pour neg integ cup champagn return full jth glass ith row index
713
find eventu safe state we start node direct graph turn walk direct edg graph if reach termin node outgo direct edg stop we defin start node safe eventu walk termin node more specif natur number stop termin node step choic walk return array safe node graph the answer sort ascend order the direct graph node label length graph the graph form graph list label direct edg graph node node
714
max increas keep citi skylin there citi compos block block singl build shape vertic squar prism you index integ matrix grid grid repres height build locat block row column a citi skylin outer contour form build view side citi distanc the skylin cardin direct north east south west we allow increas height number build amount amount build the height height build increas howev increas height build affect citi skylin cardin direct return maximum total sum height build increas chang citi skylin cardin direct
715
soup serv there type soup type a type b initi ml type soup there kind oper serv ml soup a ml soup b serv ml soup a ml soup b serv ml soup a ml soup b serv ml soup a ml soup b when serv soup give longer each turn choos oper equal probabl if remain volum soup complet oper serv we stop longer quantiti type soup note oper ml soup b return probabl soup a empti half probabl a b empti time answer actual answer accept
716
express word sometim peopl repeat letter repres extra feel for gt heeellooo gt hiiii in string heeellooo group adjac letter eee ll ooo you string array queri string word a queri word stretchi made equal number applic extens oper choos group consist charact add number charact group size group for start extens group hellooo helloo group oo size also extens ll gt lllll helllllooo if helllllooo queri word stretchi extens oper queri gt hellooo gt helllllooo return number queri string stretchi
717
subdomain visit count a websit domain discuss leetcod consist subdomain at top level level leetcod lowest level discuss leetcod when visit domain discuss leetcod visit domain leetcod implicitli a count pair domain domain format rep rep rep number visit domain domain for discuss leetcod count pair domain discuss leetcod visit time given array count pair domain cpdomain return array count pair domain subdomain input you return answer order
718
largest sum averag you integ array num integ you partit array empti adjac subarray the score partit sum averag subarray note partit integ num score necessarili integ return maximum score achiev partit answer actual answer accept
719
binari tree prune given root binari tree return tree subtre tree remov a subtre node node node node descend node
720
ambigu coordin we dimension coordin then remov comma decim point space end string for return list string repres possibl origin coordin our origin represent extran zero start number number repres fewer digit also decim point number occur digit occur start number the final answer list return order all coordin final answer space occur comma
721
link list compon you head link list uniqu integ valu integ array num subset link list valu return number connect compon num valu connect consecut link list
722
short encod word a valid encod array word refer string array indic indic word length indic length the refer string end charact for index indic substr start indic includ charact equal word given array word return length shortest refer string valid encod word
723
card flip game you card posit integ print front back card possibl you flip number card possibl after choos front back card pick card integ print back card print front card integ good you integ array front back front back integ printer front back ith card return smallest good integ flip card if good integ return note flip swap front back number front back vice versa
724
binari tree with factor given array uniqu integ arr integ arr strictli greater we make binari tree integ number number time each leaf node equal product valu children return number binari tree make the answer larg return answer modulo
725
friend of appropri age there person social media websit you integ array age age age ith person a person send friend request person condit true age lt age age gt age age gt amp amp age lt otherwis send friend request note send request necessarili send request also person send friend request themself return total number friend request made
726
most profit assign work you job worker you array difficulti profit worker difficulti profit difficulti profit ith job worker abil jth worker jth worker complet job difficulti worker everi worker assign job job complet multipl time for worker attempt job pay total profit if worker complet job profit return maximum profit achiev assign worker job
727
mask person inform you person inform string repres email address phone number return mask person inform rule email address an email address a consist uppercas lowercas english letter the symbol the domain consist uppercas lowercas english letter dot middl charact to mask email the uppercas letter domain convert lowercas letter the middl letter letter replac asterisk phone number a phone number format the phone number digit the digit make local number the remain digit begin make countri code separ charact set separ digit to mask phone number remov separ charact the mask phone number form xxxx countri code digit xxxx countri code digit xxxx countri code digit xxxx countri code digit xxxx digit local number
728
find and replac string you index string perform replac oper the replac oper index parallel array indic sourc target length to complet ith replac oper check substr sourc occur index indic origin string if occur otherwis occur replac substr target for abcd indic sourc ab target eee result replac eeecd all replac oper occur simultan mean replac oper affect index the testcas gener replac overlap for testcas abc indic sourc ab bc gener ab bc replac overlap return result string perform replac oper a substr contigu sequenc charact string
729
imag overlap you imag img img repres binari squar matric size a binari matrix valu we translat imag choos slide bit left number unit we place top imag we calcul overlap count number posit imag note translat includ kind rotat ani bit translat matrix border eras return largest overlap
730
new game alic play game loos base card game alic start point draw number point dure draw gain integ number point randomli rang maxpt maxpt integ each draw independ outcom equal probabl alic stop draw number point return probabl alic fewer point answer actual answer consid accept
731
push domino there domino line place domino vertic upright in begin simultan push domino left after domino fall left push adjac domino left similarli domino fall push adjac domino stand when vertic domino domino fall side stay due balanc forc for purpos question fall domino expend addit forc fall fallen domino you string domino repres initi state domino l ith domino push left domino r ith domino push domino ith domino push return string repres final state
732
magic squar in grid a magic squar grid fill distinct number row column diagon sum given row col grid integ magic squar subgrid each subgrid contigu
733
key room there room label room lock room your goal visit room howev enter lock room key when visit room find set distinct key each key number denot room unlock unlock room given array room room set key obtain visit room return true visit room fals
734
split array fibonacci sequenc you string digit num we split fibonacci sequenc formal fibonacci sequenc list neg integ lt lt integ fit bit sign integ type length gt lt lt length note split string piec piec extra lead zero piec number return fibonacci sequenc split num return
735
longest mountain array you recal array arr mountain array arr length gt there exist index index lt lt arr length arr lt arr lt lt arr lt arr arr gt arr gt gt arr arr length given integ array arr return length longest subarray mountain return mountain subarray
736
hand straight alic number card rearrang card group group size groupsiz consist groupsiz consecut card given integ array hand hand written ith card integ groupsiz return true rearrang card fals
737
shift letter you string lowercas english letter integ array shift length call shift letter letter alphabet wrap for shift shift shift now shift shift letter time return final string shift appli
738
maxim distanc closest person you array repres row seat seat repres person sit ith seat seat repres ith seat empti index there empti seat person sit alex sit seat distanc closest person maxim return maximum distanc closest person
739
loud rich there group peopl label person amount money level quiet you array richer richer ai bi ai money bi integ array quiet quiet quiet ith person all data richer logic correct data lead situat richer richer time return integ array answer answer quiet person person smallest quiet peopl equal money person
740
car fleet there car destin lane road the destin target mile you integ array posit speed length posit posit ith car speed speed ith car mile hour a car pass car ahead catch drive bumper bumper speed the distanc car assum posit a car fleet empti set car drive posit speed note singl car car fleet if car catch car fleet destin point consid car fleet return number car fleet arriv destin
741
exam room there exam room seat singl row label when student enter room sit seat maxim distanc closest person if multipl seat sit seat lowest number if room student sit seat number design class simul mention exam room implement examroom class examroom int initi object exam room number seat int seat return label seat student set void leav int indic student sit seat leav room it guarante student sit seat
742
score parenthes given balanc parenthes string return score string the score balanc parenthes string base rule score ab score a b a b balanc parenthes string a score a a balanc parenthes string
743
mirror reflect there special squar room mirror wall except southwest corner receptor remain corner number the squar room wall length laser ray southwest corner meet east wall distanc receptor given integ return number receptor ray meet the test case guarante ray meet receptor eventu
744
score after flip matrix you binari matrix grid a move consist choos row column toggl row column chang everi row matrix interpret binari number score matrix sum number return highest score make number move includ move
745
all node distanc k binari tree given root binari tree target node target integ return array valu node distanc target node you return answer order
746
smallest subtre deepest node given root binari tree depth node shortest distanc root return smallest subtre deepest node origin tree a node call deepest largest depth node entir tree the subtre node tree consist node set descend node note thi question http leetcod problem lowest common ancestor deepest leav
747
prime palindrom given integ return smallest prime palindrom greater equal an integ prime divisor note prime number for prime an integ palindrom read left left for palindrom the test case gener answer exist rang
748
reorder power you integ we reorder digit order includ origin order lead digit return true result number power
749
advantag shuffl you integ array num num length the advantag num respect num number indic num gt num return permut num maxim advantag respect num
750
length longest fibonacci subsequ a sequenc xn fibonacci gt xi xi xi lt given strictli increas array arr posit integ form sequenc return length longest fibonacci subsequ arr if exist return a subsequ deriv sequenc arr delet number element includ arr chang order remain element for subsequ
751
koko eat banana koko love eat banana there pile banana ith pile pile banana the guard back hour koko decid banana hour eat speed each hour choos pile banana eat banana pile if pile banana eat eat banana hour koko like eat slowli finish eat banana guard return return minimum integ eat banana hour
752
stone game alic bob play game pile stone there number pile arrang row pile posit integ number stone pile the object game end stone the total number stone pile odd tie alic bob turn alic start each turn player take entir pile stone begin end row thi continu pile left point person stone win assum alic bob play optim return true alic win game fals bob win
753
decod string index you encod string to decod string tape encod string read charact time step if charact read letter letter written tape if charact read digit entir current tape repeatedli written time total given integ return kth letter index decod string
754
boat save peopl you array peopl peopl weight ith person infinit number boat boat carri maximum weight limit each boat carri peopl time provid sum weight peopl limit return minimum number boat carri person
755
spiral matrix iii you start cell rstart cstart row col grid face east the northwest corner row column grid southeast corner row column you walk clockwis spiral shape visit posit grid whenev move grid boundari continu walk grid return grid boundari eventu reach row col space grid return array coordin repres posit grid order visit
756
possibl bipartit we split group peopl label group size each person dislik peopl group given integ array dislik dislik ai bi person label ai person label bi return true split group
757
construct binari tree preorder postord travers given integ array preorder postord preorder preorder travers binari tree distinct valu postord postord travers tree reconstruct return binari tree if exist multipl answer return
758
find replac pattern given list string word string pattern return list word match pattern you return answer order a word match pattern exist permut letter replac letter pattern desir word recal permut letter biject letter letter letter map letter letter map letter
759
group special equival string you array string length word in move swap index charact odd index charact string word two string word word special equival number move word word for word zzxi word xyzz special equival make move zzxi gt xzzi gt xyzz a group special equival string word empti subset word everi pair string group special equival the group largest size string word group word special equival string group return number group special equival string word
760
all possibl full binari tree given integ return list full binari tree node each node tree answer node val each element answer root node tree you return final list tree order a full binari tree binari tree node children
761
bitwis or subarray we array arr neg integ for contigu subarray arr arr arr lt bitwis or element obtain result arr arr arr return number result result occur count final answer
762
rle iter we run length encod rle encod sequenc integ in run length encod array length encod index encod tell number time neg integ encod repeat sequenc for sequenc arr encod encod encod encod valid rle arr given run length encod array design iter iter implement rleiter class rleiter int encod initi object encod array encod int int exhaust element return element exhaust if element left exhaust return
763
onlin stock span design algorithm collect daili price quot stock return span stock price current day the span stock price today defin maximum number consecut day start today backward stock price equal today price for price stock day stock span implement stockspann class stockspann initi object class int int price return span stock price today price price
764
fruit into basket you visit farm singl row fruit tree arrang left the tree repres integ array fruit fruit type fruit ith tree produc you collect fruit howev owner strict rule follow you basket basket hold singl type fruit there limit amount fruit basket hold start tree choic pick fruit tree includ start tree move the pick fruit fit basket onc reach tree fruit fit basket stop given integ array fruit return maximum number fruit pick
765
sum subarray minimum given array integ arr find sum min rang contigu subarray arr sinc answer larg return answer modulo
766
snake ladder you integ matrix board cell label boustrophedon style start bottom left board board altern direct row you start squar board in move start squar curr choos destin squar label rang curr min curr thi choic simul result standard side die roll destin size board if snake ladder move destin snake ladder otherwis move the game end reach squar a board squar row column snake ladder board the destin snake ladder board squar snake ladder note snake ladder move if destin snake ladder start snake ladder follow subsequ snake ladder for suppos board move destin squar you follow ladder squar follow subsequ ladder return number move requir reach squar if reach squar return
767
smallest rang ii you integ array num integ for index lt lt num length chang num num num the score num differ maximum minimum element num return minimum score num chang valu index
768
onlin elect you integ array person time in elect ith vote cast person time time for queri time find person lead elect time vote cast time count queri in case tie recent vote tie candid win implement topvotedcandid class topvotedcandid int person int time initi object person time array int int return number person lead elect time mention rule
769
sort array given array integ num sort array ascend order
770
partit array disjoint interv given integ array num partit contigu subarray left everi element left equal element left empti left smallest size return length left partit test case gener partit exist
771
word subset you string array word word a string subset string letter occur includ multipl for wrr subset warrior subset world a string word univers string word subset return array univers string word you return answer order
772
maximum sum circular subarray given circular integ array num length return maximum sum empti subarray num a circular array mean end array connect begin array formal element num num previou element num num a subarray includ element fix buffer num formal subarray num num num exist lt lt
773
complet binari tree insert a complet binari tree binari tree level possibl complet fill node left design algorithm insert node complet binari tree keep complet insert implement cbtinsert class cbtinsert treenod root initi data structur root complet binari tree int insert int insert treenod tree node val val tree remain complet return insert treenod treenod root return root node tree
774
minimum add make parenthes valid a parenthes string valid it empti string it written ab a concaten b a b valid string it written a a valid string you parenthes string in move insert parenthesi posit string for insert open parenthesi close parenthesi return minimum number move requir make valid
775
sum with multipl given integ array arr integ target return number tupl lt lt arr arr arr target as answer larg return modulo
776
flip string monoton increas a binari string monoton increas consist number possibl number possibl you binari string you flip chang return minimum number flip make monoton increas
777
binari subarray with sum given binari array num integ goal return number empti subarray sum goal a subarray contigu part array
778
minimum fall path sum given array integ matrix return minimum sum fall path matrix a fall path start element row choos element row directli diagon left specif element posit row col row col row col row col
779
beauti array an array num length beauti num permut integ rang for lt lt lt index lt lt num num num given integ return beauti array num length there valid answer
780
shortest bridg in d binari array grid island an island direct connect group connect now chang connect island form island return smallest number flip it guarante answer
781
knight dialer the chess knight uniqu movement move squar vertic squar horizont squar horizont squar vertic form shape l the movement chess knight shown diagaram a chess knight move chess diagram we chess knight phone pad shown knight stand numer cell blue cell given integ return distinct phone number length dial you allow place knight numer cell initi perform jump dial number length all jump valid knight jump as answer larg return answer modulo
782
minimum area rectangl you array point x y plane point point xi yi return minimum area rectangl form point side parallel x y axe if rectangl return
783
minimum increment make array uniqu you integ array num in move pick index lt lt num length increment num return minimum number move make num uniqu
784
valid stack sequenc given integ array push pop distinct valu return true result sequenc push pop oper initi empti stack fals
785
most stone remov same row column on d plane place stone integ coordin point each coordin point stone a stone remov share row column stone remov given array stone length stone xi yi repres locat ith stone return largest number stone remov
786
bag token you initi power power initi score bag token token ith token index your goal maxim total score potenti play token way if current power token play ith token face lose token power gain score if current score play ith token face gain token power lose score each token play order you play token return largest score achiev play number token
787
largest time given digit given array arr digit find latest hour time made digit hour time format hh mm hh mm the earliest hour time latest return latest hour time hh mm format if valid time made return empti string
788
reveal card in increas order you integ array deck there deck card card uniqu integ the integ ith card deck you order deck order initi card start face unrev deck you step repeatedli card reveal take top card deck reveal deck if card deck put top card deck bottom deck if unrev card back step otherwis stop return order deck reveal card increas order note entri answer consid top deck
789
flip equival binari tree for binari tree t defin flip oper choos node swap left child subtre a binari tree x flip equival binari tree y make x equal y number flip oper given root binari tree root root return true tree flip equivel fals
790
array doubl pair given integ array length arr return true reorder arr arr arr lt lt len arr fals
791
delet column make sort ii you array string str length we choos delet indic delet charact indic string for str abcdef uvwxyz delet indic final array delet bef vyz suppos chose set delet indic answer delet final array element lexicograph order str lt str lt str lt lt str return minimum answer length
792
prison cell after n day there prison cell row cell occupi vacant each day cell occupi vacant rule if cell adjac neighbor occupi vacant cell occupi otherwis vacant note prison row cell row adjac neighbor you integ array cell cell ith cell occupi cell ith cell vacant integ return state prison day
793
check complet binari tree given root binari tree determin complet binari tree in complet binari tree level possibl complet fill node level left it node inclus level
794
region cut by slash an grid compos squar squar consist blank space these charact divid squar contigu region given grid grid repres string array return number region note backslash charact escap repres
795
maximum width ramp a ramp integ array num pair lt num lt num the width ramp given integ array num return maximum width ramp num if ramp num return
796
minimum area rectangl ii you array point x y plane point point xi yi return minimum area rectangl form point side necessarili parallel x y axe if rectangl return answer actual answer accept
797
vowel spellcheck given wordlist implement spellcheck convert queri word correct word for queri word spell checker handl categori spell mistak capit if queri match word wordlist case insensit queri word return case case wordlist
798
number with same consecut differ return neg integ length absolut differ consecut digit note number answer lead zero for lead invalid you return answer order
799
pancak sort given array integ arr sort array perform seri pancak flip in pancak flip step choos integ lt lt arr length revers array arr index for arr perform pancak flip choos revers array arr pancak flip return array valu sequenc pancak flip sort arr ani valid answer sort array arr length flip judg correct
800
power integ given integ bound return list power integ equal bound an integ power repres xi yj integ gt gt you return answer order in answer occur
801
flip binari tree to match preorder travers you root binari tree node node uniqu assign you sequenc valu voyag desir pre order travers binari tree ani node binari tree flip swap left subtre for flip node effect flip smallest number node pre order travers tree match voyag return list valu flip node you return answer order if imposs flip node tree make pre order travers match voyag return list
802
k closest point origin given array point point xi yi repres point x y plane integ return closest point origin the distanc point x y plane euclidean distanc you return answer order the answer guarante uniqu order
803
subarray sum divis k given integ array num integ return number empti subarray sum divis a subarray contigu part array
804
longest turbul subarray given integ array arr return length maximum size turbul subarray arr a subarray turbul comparison sign flip adjac pair element subarray more formal subarray arr arr arr arr turbul for lt lt arr gt arr odd arr lt arr or lt lt arr gt arr arr lt arr odd
805
distribut coin binari tree you root binari tree node node tree node val coin there coin total tree in move choos adjac node move coin node a move child child return minimum number move requir make node coin
806
time base key valu store design time base key data structur store multipl valu key time stamp retriev key timestamp implement timemap class timemap initi object data structur void set string key string int timestamp store key key time timestamp string string key int timestamp return set call previous timestamp prev lt timestamp if multipl valu return largest timestamp prev if valu return
807
minimum cost for ticket you plan train travel year advanc the day year travel integ array day each day integ train ticket sold way day pass sold cost dollar day pass sold cost dollar day pass sold cost dollar the pass day consecut travel for day pass day travel day return minimum number dollar travel day list day
808
string without aaa bbb given integ return string length letter letter the substr aaa occur the substr bbb occur
809
sum even number after queri you integ array num array queri queri vali indexi for queri appli num indexi num indexi vali print sum valu num return integ array answer answer answer ith queri
810
interv list intersect you list close interv firstlist secondlist firstlist starti endi secondlist startj endj each list interv pairwis disjoint sort order return intersect interv list a close interv lt denot set real number lt lt the intersect close interv set real number empti repres close interv for intersect
811
smallest string start from leaf you root binari tree node rang repres letter return lexicograph smallest string start leaf tree end root as remind shorter prefix string lexicograph smaller for ab lexicograph smaller aba a leaf node node children
812
satisfi equal equat you array string equat repres relationship variabl string equat length take form xi yi xi yi here xi yi lowercas letter necessarili repres letter variabl name return true assign integ variabl name satisfi equat fals
813
broken calcul there broken calcul integ startvalu display initi in oper multipli number display subtract number display given integ startvalu target return minimum number oper need display target calcul
814
rot orang you grid cell valu repres empti cell repres fresh orang repres rotten orang everi minut fresh orang direct adjac rotten orang rotten return minimum number minut elaps cell fresh orang if imposs return
815
maximum binari tree ii a maximum tree tree node greater subtre you root maximum binari tree integ val just previou problem tree construct list root construct recurs construct routin if empti return null otherwis largest element creat root node the left child root construct the child root construct length return root note directli root node root construct suppos copi val append it guarante uniqu valu return construct
816
check if word is valid after substitut given string determin valid a string valid start empti string transform perform oper number time insert string abc posit more formal tleft abc tright tleft tright note tleft tright empti return true valid string return fals
817
max consecut one iii given binari array num integ return maximum number consecut array flip
818
clumsi factori the factori posit integ product posit integ equal for factori we make clumsi factori integ decreas order swap multipli oper fix rotat oper multipli divid add subtract order for clumsi howev oper appli usual order oper arithmet we multipl divis step addit subtract step multipl divis step process left addit divis floor divis given integ return clumsi factori
819
minimum domino rotat for equal row in row domino top bottom repres top bottom halv ith domino a domino tile number half tile we rotat ith domino top bottom swap valu return minimum number rotat valu top valu bottom if return
820
construct binari search tree preorder travers given array integ preorder repres preorder travers bst binari search tree construct tree return root it guarante find binari search tree requir test case a binari search tree binari tree node descend node left strictli node val descend node strictli greater node val a preorder travers binari tree display node travers node left travers node
821
pair song with total durat divis you list song ith song durat time second return number pair song total durat second divis formal number indic lt time time
822
capac to ship packag within d day a conveyor belt packag ship port day day the ith packag conveyor belt weight weight each day load ship packag conveyor belt order weight we load weight maximum weight capac ship return weight capac ship result packag conveyor belt ship day day
823
best sightse pair you integ array valu valu repres ith sightse spot two sightse spot distanc the score pair lt sightse spot valu valu sum valu sightse spot minu distanc return maximum score pair sightse spot
824
smallest integ divis k given posit integ find length smallest posit integ divis digit return length if return note fit bit sign integ
825
binari string with substr repres to n given binari string posit integ return true binari represent integ rang substr fals a substr contigu sequenc charact string
826
convert base given integ return binari string repres represent base note return string lead zero string
827
next greater node in link list you head link list node for node list find greater node that node find node strictli larger return integ array answer answer greater node ith node index if ith node greater node set answer
828
number enclav you binari matrix grid repres sea cell repres land cell a move consist walk land cell adjac direct land cell walk boundari grid return number land cell grid walk boundari grid number move
829
camelcas match given array string queri string pattern return boolean array answer answer true queri match pattern fals a queri word queri match pattern insert lowercas english letter pattern equal queri you insert charact posit insert charact
830
video stitch you seri video clip sport event last time second these video clip overlap vari length each video clip array clip clip starti endi ith clip start starti end endi we cut clip segment freeli for clip cut segment return minimum number clip need cut clip segment cover entir sport event time if task imposs return
831
maximum differ between node ancestor given root binari tree find maximum exist node val val ancestor a node ancestor child equal child ancestor
832
longest arithmet subsequ given array num integ return length longest arithmet subsequ num recal subsequ array num list num num num ik lt lt lt lt ik lt num length sequenc seq arithmet seq seq lt lt seq length
833
two citi schedul a compani plan interview peopl given array cost cost acosti bcosti cost fli ith person citi acosti cost fli ith person citi bcosti return minimum cost fli person citi peopl arriv citi
834
maximum sum two non overlap subarray given integ array num integ firstlen secondlen return maximum sum element overlap subarray length firstlen secondlen the array length firstlen occur array length secondlen overlap a subarray contigu part array
835
move stone until consecut there stone posit x axi you integ posit stone in move pick stone endpoint lowest highest posit stone move unoccupi posit endpoint formal stone posit lt lt you pick stone posit posit move stone integ posit lt lt the game end make move stone consecut posit return integ array answer length answer minimum number move play answer maximum number move play
836
color a border you integ matrix grid integ row col color each grid repres color grid squar locat two squar belong connect compon color direct the border connect compon squar connect compon direct adjac squar compon boundari grid row column you color border connect compon squar grid row col color return final grid
837
uncross line you integ array num num we write integ num num order separ horizont line we draw connect line straight line connect number num num num num line draw intersect connect horizont line note connect line intersect endpoint number belong connect line return maximum number connect line draw
838
binari search tree greater sum tree given root binari search tree bst convert greater tree key origin bst chang origin key sum key greater origin key bst as remind binari search tree tree satisfi constraint the left subtre node node key node key the subtre node node key greater node key both left subtre binari search tree note thi question http leetcod problem convert bst greater tree
839
minimum score triangul polygon you convex side polygon vertex integ you integ array valu valu ith vertex clockwis order you triangul polygon triangl for triangl triangl product valu vertic total score triangul sum valu triangl triangul return smallest total score achiev triangul polygon
840
move stone until consecut ii there stone posit x axi you integ array stone posit stone call stone endpoint stone smallest largest posit in move pick endpoint stone move unoccupi posit longer endpoint stone in stone stone move endpoint stone posit move posit stone endpoint stone the game end make move stone consecut posit return integ array answer length answer minimum number move play answer maximum number move play
841
robot bound in circl on infinit plane robot initi stand face north the robot receiv instruct g straight unit l turn degre left r turn degre the robot perform instruct order repeat forev return true exist circl plane robot leav circl
842
flower plant with no adjac you garden label array path path xi yi describ bidirect path garden xi garden yi in garden plant type flower all garden path come leav your task choos flower type garden garden connect path type flower return choic array answer answer type flower plant garden the flower type denot it guarante answer exist
843
partit array maximum sum given integ array arr partit array contigu subarray length after partit subarray valu chang maximum subarray return largest sum array partit test case gener answer fit bit integ
844
longest string chain you array word word consist lowercas english letter worda predecessor wordb insert letter worda chang order charact make equal wordb for abc predecessor abac cba predecessor bcad a word chain sequenc word word word wordk gt word predecessor word word predecessor word a singl word trivial word chain return length longest word chain word chosen list word
845
last stone weight ii you array integ stone stone weight ith stone we play game stone on turn choos stone smash suppos stone weight lt the result smash if stone destroy if stone weight destroy stone weight weight at end game stone left return smallest weight left stone if stone left return
846
grumpi bookstor owner there bookstor owner store open minut everi minut number custom enter store you integ array custom length custom number custom enter store start ith minut custom leav end minut on minut bookstor owner grumpi you binari array grumpi grumpi bookstor owner grumpi ith minut when bookstor owner grumpi custom minut satisfi satisfi the bookstor owner secret techniqu grumpi minut consecut minut return maximum number custom satisfi day
847
previou permut with one swap given array posit integ arr necessarili distinct return lexicograph largest permut smaller arr made swap a swap exchang posit number arr arr if return array
848
distant barcod in warehous row barcod ith barcod barcod rearrang barcod adjac barcod equal you return answer guarante answer exist
849
flip column for maximum number equal row you binari matrix matrix you choos number column matrix flip cell column chang cell vice versa return maximum number row valu equal number flip
850
ad two negabinari number given number arr arr base return result ad each number array format array signific bit signific bit for arr repres number a number arr array format guarante lead zero arr arr return result ad arr arr format array lead zero
851
letter tile possibl you tile tile letter tile print return number empti sequenc letter make letter print tile
852
insuffici node root leaf path given root binari tree integ limit delet insuffici node tree simultan return root result binari tree a node insuffici root leaf path intersect node sum strictli limit a leaf node children
853
smallest subsequ distinct charact return lexicograph smallest subsequ distinct charact note thi question http leetcod problem remov duplic letter
854
largest valu from label there set item you integ array valu label label ith element valu label you integ numwant uselimit choos subset element the size subset equal numwant there uselimit item label the score subset sum valu subset return maximum score subset
855
shortest path binari matrix given binari matrix grid return length shortest clear path matrix if clear path return a clear path binari matrix path top left cell bottom cell all visit cell path all adjac cell path direct connect share edg corner the length clear path number visit cell path
856
statist larg sampl you larg sampl integ rang sinc sampl larg repres array count count number time appear sampl calcul statist minimum the minimum element sampl maximum the maximum element sampl the averag sampl calcul total sum element divid total number element median if sampl odd number element median middl element sampl sort if sampl number element median averag middl element sampl sort mode the number appear sampl it guarante uniqu return statist sampl array float point number minimum maximum median mode answer actual answer accept
857
car pool there car capac empti seat the vehicl drive east turn drive west you integ capac array trip trip numpassengersi fromi toi ith trip numpassengersi passeng locat pick drop fromi toi the locat number kilomet due east car initi locat return true pick drop passeng trip fals
858
path in zigzag label binari tree in infinit binari tree node children node label row order in odd number row label left number row fourth sixth label left given label node tree return label path root tree node label
859
fill bookcas shelv you array book book thicknessi heighti thick height ith book you integ shelfwidth we place book order bookcas shelv total width shelfwidth we choos book place shelf sum thick equal shelfwidth build level shelf bookcas total height bookcas increas maximum height book put we repeat process book place note step process order book place order sequenc book for order list book place book shelf book shelf fourth book shelf return minimum height total bookshelf place shelv manner
860
corpor flight book there flight label you array flight book book book firsti lasti seatsi repres book flight firsti lasti inclus seatsi seat reserv flight rang return array answer length answer total number seat reserv flight
861
delet node and return forest given root binari tree node tree distinct after delet node delet left forest disjoint union tree return root tree remain forest you return result order
862
maximum nest depth two valid parenthes string a string valid parenthes string denot vp consist charact it empti string it written ab a concaten b a b vp it written a a vp we similarli defin nest depth depth s vp s depth depth a b max depth a depth b a b vp depth a depth a a vp for vp nest depth vp given vp seq split disjoint subsequ a b a b vp a length b length seq length now choos a b max depth a depth b minimum return answer array length seq length encod choic a b answer seq part a answer note multipl answer exist return
863
lowest common ancestor deepest leav given root binari tree return lowest common ancestor deepest leav recal the node binari tree leaf children the depth root tree depth node depth children the lowest common ancestor set s node node a largest depth node s subtre root a note thi question http leetcod problem smallest subtre deepest node
864
longest well perform interv we hour list number hour work day employe a day consid tire day number hour work strictli greater a perform interv interv day number tire day strictli larger number tire day return length longest perform interv
865
shortest path altern color consid direct graph node label in graph edg red blue edg parallel edg each red edg denot red direct edg node node similarli blue edg denot blue direct edg node node return array answer length answer x length shortest path node node x edg color altern path path doesn exist
866
minimum cost tree from leaf valu given array arr posit integ binari tree each node children the valu arr correspond valu leaf order travers tree the leaf node equal product largest leaf left subtre among binari tree consid return smallest sum valu leaf node it guarante sum fit bit integ a node leaf children
867
maximum absolut valu express given array integ equal length return maximum arr arr arr arr maximum lt lt arr length
868
alphabet board path on alphabet board start posit charact board here board abcd fghij klmno pqrst uvwxi shown diagram we make move u move posit row posit exist board d move posit row posit exist board l move posit left column posit exist board r move posit column posit exist board add charact board current posit answer here posit exist board posit letter return sequenc move make answer equal target minimum number move you return path
869
largest border squar given d grid return number element largest squar subgrid border subgrid doesn exist grid
870
stone game ii alic bob continu game pile stone there number pile arrang row pile posit integ number stone pile the object game end stone alic bob turn alic start initi m on player turn player stone x remain pile lt x lt m then set m max m x the game continu stone assum alic bob play optim return maximum number stone alic
871
longest common subsequ given string text text return length longest common subsequ if common subsequ return a subsequ string string gener origin string charact delet chang rel order remain charact for ace subsequ abcd a common subsequ string subsequ common string
872
decreas element to make array zigzag given array num integ move consist choos element decreas an array a zigzag array everi index element greater adjac element a gt a lt a gt a lt a gt or odd index element greater adjac element a lt a gt a lt a gt a lt return minimum number move transform array num zigzag array
873
binari tree color game two player play turn base game binari tree we root binari tree number node tree odd node distinct initi player name lt lt player name lt lt the player color node red player color node blue then player turn start player in turn player choos node color red player blue player color uncolor neighbor chosen node left child child chosen node if player choos node pass turn if player pass turn game end winner player color node you player if choos ensur win game return true if return fals
874
snapshot array implement snapshotarray support interfac snapshotarray int length initi array data structur length initi element equal void set index val set element index equal val int snap take snapshot array return snap id total number time call snap minu int index snap id return index time snapshot snap id
875
number dice roll with target sum you dice die face number return number way fd total way modulo roll dice sum face number equal target
876
swap for longest repeat charact substr given string text allow swap charact string find length longest substr repeat charact
877
maximum level sum binari tree given root binari tree level root level children return smallest level sum valu node level maxim
878
as far land possibl given grid valu repres water repres land find water cell distanc nearest land cell maxim return distanc if land water exist grid return the distanc problem manhattan distanc distanc cell
879
invalid transact a transact possibl invalid amount exce occur includ minut transact citi you array string transact transact consist comma separ valu repres time minut amount citi transact return list transact possibl invalid you return answer order
880
compar string frequenc smallest charact let function frequenc lexicograph smallest charact empti string for dcce lexicograph smallest charact frequenc you array string word array queri string queri for queri queri count number word word queri lt w w word return integ array answer answer answer ith queri
881
remov zero sum consecut node link list given head link list repeatedli delet consecut sequenc node sum sequenc after return head final link list you return answer note exampl sequenc serial listnod object
882
can make palindrom substr you string array queri queri lefti righti ki we rearrang substr lefti righti queri choos ki replac lowercas english letter if substr palindrom string oper result queri true otherwis result fals return boolean array answer answer result ith queri queri note letter count individu replac lefti righti aaa ki replac letter also note queri modifi initi string
883
maximum subarray sum one delet given array integ return maximum sum empti subarray contigu element element delet in word choos subarray option delet element element left sum remain element maximum note subarray empti delet element
884
revers substr between each pair parenthes you string consist lower case english letter bracket revers string pair match parenthes start innermost your result bracket
885
k concaten maximum sum given integ array arr integ modifi array repeat time for arr modifi array return maximum array sum modifi array note length array sum case as answer larg return answer modulo
886
ugli number iii an ugli number posit integ divis given integ return nth ugli number
887
smallest string with swap you string array pair indic string pair pair indic index string you swap charact pair indic pair number time return lexicograph smallest string chang swap
888
get equal substr within budget you string length you chang chang charact charact cost absolut differ ascii valu charact you integ maxcost return maximum length substr chang substr twith cost equal maxcost if substr chang substr return
889
remov all adjac duplic string ii you string integ duplic remov consist choos adjac equal letter remov caus left side delet substr concaten we repeatedli make duplic remov longer return final string duplic remov made it guarante answer uniqu
890
longest arithmet subsequ given differ given integ array arr integ differ return length longest subsequ arr arithmet sequenc differ adjac element subsequ equal differ a subsequ sequenc deriv arr delet element chang order remain element
891
path maximum gold in gold mine grid size cell mine integ repres amount gold cell empti return maximum amount gold collect condit everi time locat cell collect gold cell from posit walk step left you visit cell never visit cell gold you start stop collect gold posit grid gold
892
queen that can attack king on chessboard multipl black queen white king given array integ coordin queen repres posit black queen pair coordin king repres posit white king return coordin queen order attack king
893
airplan seat assign probabl passeng board airplan seat the passeng lost ticket pick seat randomli but rest passeng take seat pick seat randomli find seat occupi what probabl person seat
894
remov sub folder filesystem given list folder remov folder folder return order folder remov if folder locat folder call folder the format path concaten string form lowercas english letter for leetcod leetcod problem valid path empti string
895
replac substr balanc string you string kind charact q w e r a string balanc charact appear time length string return minimum length substr replac string length make origin string balanc return string balanc
896
find posit integ solut given equat given callabl function hidden formula revers engin formula return posit integ pair you return pair order while exact formula hidden function monoton increas lt lt the function interfac defin interfac customfunct public return posit integ posit integ base formula int int int we judg solut the judg list hidden implement customfunct gener answer key valid pair specif the judg receiv input function id determin implement test code target the judg call findsolut compar result answer key if result match answer key solut accept
897
circular permut binari represent given integ start your task return permut start differ bit binari represent differ bit binari represent
898
maximum length concaten string uniqu charact given array string arr string concaten sequenc arr uniqu charact return maximum length
899
minimum swap make string equal you string equal length consist letter your task make string equal you swap charact belong string mean swap return minimum number swap requir make equal return imposs
900
count number nice subarray given array integ num integ a continu subarray call nice odd number return number nice array
901
minimum remov make valid parenthes given string lowercas english charact your task remov minimum number parenthes posit result parenthes string valid return valid string formal parenthes string valid it empti string lowercas charact it written ab a concaten b a b valid string it written a a valid string
902
reconstruct row binari matrix given detail matrix column row the matrix binari matrix mean element matrix the sum element upper row upper the sum element st lower row lower the sum element column index colsum colsum integ array length your task reconstruct matrix upper lower colsum return d integ array if valid solut accept if valid solut exist return empti d array
903
number close island given d grid consist land water an island maxim direct connect group close island island total left top bottom surround return number close island
904
find element contamin binari tree given binari tree rule root val if treenod val treenod left null treenod left val if treenod val treenod null treenod val now binari tree contamin mean treenod val chang implement findel class findel treenod root initi object contamin binari tree recov bool find int target return true target exist recov binari tree
905
greatest sum divis three given array num integ find maximum sum element array divis
906
count server commun you map server center repres integ matrix grid mean cell server mean server two server commun row column return number server commun server
907
search suggest system given array string product string searchword we design system suggest product name product charact searchword type suggest product common prefix searchword if product common prefix return lexicograph minimum product return list list suggest product charact searchword type
908
number burger no wast ingredi given integ tomatoslic cheeseslic the ingredi burger jumbo burger tomato slice chees slice small burger tomato slice chees slice return total jumbo total small number remain tomatoslic equal number remain cheeseslic equal if make remain tomatoslic cheeseslic equal return
909
count squar submatric all one given matrix zero return squar submatric
910
group peopl given group size they belong to there peopl split unknown number group each person label uniqu id you integ array groupsiz groupsiz size group person for groupsiz person group size return list group person group size groupsiz each person group person group if multipl answer return it guarante valid solut input
911
find smallest divisor given threshold given array integ num integ threshold choos posit integ divisor divid array sum divis result find smallest divisor result mention equal threshold each result divis round nearest integ greater equal element for it guarante answer
912
iter combin design combinationiter class combinationiter string charact int combinationlength initi object string charact sort distinct lowercas english letter number combinationlength argument return combin length combinationlength lexicograph order hasnext return true exist combin
913
remov cover interv given array interv interv li ri repres interv li ri remov interv cover interv list the interv cover interv lt lt return number remain interv
914
sequenti digit an integ sequenti digit digit number previou digit return sort list integ rang low high inclus sequenti digit
915
maximum side length squar sum less equal threshold given matrix mat integ threshold return maximum side length squar sum equal threshold return squar
916
divid array set k consecut number given array integ num posit integ find divid array set consecut number return true otherwis return fals
917
maximum number occurr substr given string return maximum number ocurr substr rule the number uniqu charact substr equal maxlett the substr size minsiz maxsiz inclus
918
sum mutat array closest target given integ array arr target target return integ chang integ larger array equal sum array close absolut differ target in case tie return minimum integ notic answer neccesarilli number arr
919
deepest leav sum given root binari tree return sum valu deepest leav
920
all element two binari search tree given binari search tree root root return list integ tree sort ascend order
921
jump game iii given array neg integ arr initi posit start index array when index jump arr arr check reach index notic jump array time
922
xor queri subarray given array arr posit integ array queri queri li ri queri comput xor element li ri arr li xor arr li xor xor arr ri return array result queri
923
get watch video your friend there peopl person uniqu id given array watchedvideo friend watchedvideo friend list watch video list friend person id level video watch video friend level video watch video friend friend in gener level video watch video peopl shortest path equal given id level video return list video order frequenc increas for video frequenc order alphabet greatest
924
matrix block sum given matrix mat integ return matrix answer answer sum element mat lt lt lt lt valid posit matrix
925
sum node even valu grandpar given root binari tree return sum valu node valu grandpar if node valu grandpar return a grandpar node exist
926
minimum flip make or equal given posit number return minimum flip requir bit make or bitwis or oper flip oper consist chang singl bit chang bit binari represent
927
print word vertic given string return word vertic order word return list string complet space trail space allow each word put column column word
928
delet leav with given valu given binari tree root integ target delet leaf node target note delet leaf node target node leaf node target delet continu
929
break palindrom given palindrom string lowercas english letter palindrom replac charact lowercas english letter result string palindrom lexicograph smallest return result string if replac charact make palindrom return empti string a string lexicograph smaller string length posit differ charact strictli smaller charact for abcc lexicograph smaller abcd posit differ fourth charact smaller
930
sort matrix diagon a matrix diagon diagon line cell start cell topmost row leftmost column bottom direct reach matrix end for matrix diagon start mat mat matrix includ cell mat mat mat given matrix mat integ sort matrix diagon ascend order return result matrix
931
filter restaur vegan friendli price distanc given array restaur restaur idi ratingi veganfriendlyi pricei distancei you filter restaur filter the veganfriendli filter true mean includ restaur veganfriendlyi set true fals mean includ restaur in addit filter maxpric maxdist maximum price distanc restaur return array restaur id filter order rate highest lowest for restaur rate order id highest lowest for simplic veganfriendlyi veganfriendli true fals
932
find citi with smallest number neighbor threshold distanc there citi number given array edg edg fromi toi weighti repres bidirect weight edg citi fromi toi integ distancethreshold return citi smallest number citi reachabl path distanc distancethreshold if multipl citi return citi greatest number notic distanc path connect citi equal sum edg weight path
933
reduc array size the half you integ array arr you choos set integ remov occurr integ array return minimum size set half integ array remov
934
maximum product split binari tree given root binari tree split binari tree subtre remov edg product sum subtre maxim return maximum product sum subtre sinc answer larg return modulo note maxim answer take mod take
935
number sub array size k averag greater equal threshold given array integ arr integ threshold return number array size averag greater equal threshold
936
angl between hand clock given number hour minut return smaller angl degre form hour minut hand
937
minimum number step make two string anagram given equal size string in step choos charact replac charact return minimum number step make anagram an anagram string string charact order
938
tweet count per frequenc a social media compani monitor activ site analyz number tweet occur select period time these period partit smaller time chunk base frequenc minut hour day for period second partit time chunk frequenc everi minut chunk everi hour chunk everi day chunk notic chunk shorter frequenc chunk size end end time period design implement api compani analysi implement tweetcount class tweetcount initi tweetcount object void recordtweet string tweetnam int time store tweetnam record time second list lt integ gt gettweetcountsperfrequ string freq string tweetnam int starttim int endtim return list integ repres number tweet tweetnam time chunk period time starttim endtim second frequenc freq freq minut hour day repres frequenc minut hour day
939
product last k number design algorithm accept stream integ retriev product integ stream implement productofnumb class productofnumb initi object empti stream void add int num append integ num stream int getproduct int return product number current list you assum current list number the test case gener time product contigu sequenc number fit singl bit integ overflow
940
maximum number event that can be attend given array event event startdayi enddayi everi event start startdayi end enddayi you attend event day starttimei lt lt endtimei notic attend event time return maximum number event attend
941
appli discount everi order there supermarket frequent custom the product sold supermarket repres parallel integ array product price ith product id product price price when custom pay bill repres parallel integ array product amount jth product purchas id product amount product bought their subtot calcul sum amount price jth product the supermarket decid sale everi nth custom pay groceri percentag discount the discount amount discount discount percent subtot more formal subtot bill pay bill discount implement cashier class cashier int int discount int product int price initi object discount product price doubl getbil int product int amount return final total bill discount appli answer actual accept
942
number substr contain all three charact given string consist charact return number substr occurr charact
943
valid binari tree node you binari tree node number node children leftchild rightchild return true node form valid binari tree if node left child leftchild equal similarli child note node valu node number problem
944
closest divisor given integ num find closest integ absolut differ product equal num num return integ order
945
rank team vote in special rank system voter rank highest lowest team particip competit the order team decid receiv posit vote if team tie posit posit resolv conflict tie continu process tie resolv if team tie posit rank alphabet base team letter given array string vote vote voter rank system sort team rank system return string team sort rank system
946
link list binari tree given binari tree root link list head node return true element link list start head correspond downward path connect binari tree return fals in context downward path mean path start node
947
find longest substr contain vowel even count given string return size longest substr vowel number time that number time
948
longest zigzag path binari tree you root binari tree a zigzag path binari tree defin follow choos node binari tree direct left if current direct move child current node move left child chang direct left left repeat step move tree zigzag length defin number node visit a singl node length return longest zigzag path contain tree
949
bulb switcher iii there room bulb number arrang row left initi bulb turn at moment turn light bulb a bulb chang color blue previou bulb left turn return number moment turn bulb blue
950
time need inform all employe a compani employe uniqu id employe the head compani headid each employe direct manag manag array manag direct manag employe manag headid also guarante subordin relationship tree structur the head compani inform compani employe urgent piec news he inform direct subordin inform subordin employe urgent news the employe informtim minut inform direct subordin after informtim minut direct subordin start spread news return number minut need inform employe urgent news
951
find correspond node binari tree clone that tree given binari tree origin clone refer node target origin tree the clone tree copi origin tree return refer node clone tree note allow chang tree target node answer refer node clone tree follow solv problem repeat valu tree allow
952
design stack with increment oper design stack support oper implement customstack class customstack int maxsiz initi object maxsiz maximum number element stack stack reach maxsiz void push int add top stack stack hasn reach maxsiz int pop pop return top stack stack empti void int int val increment bottom element stack val if element stack increment element stack
953
balanc binari search tree given root binari search tree return balanc binari search tree node valu if answer return a binari search tree balanc depth subtre node differ
954
cinema seat alloc a cinema row seat number ten seat row label shown figur given array reservedseat number seat reserv reservedseat mean seat locat row label reserv return maximum number person group assign cinema seat a person group occupi adjac seat singl row seat aisl consid adjac except case aisl split person group case aisl split person group middl mean peopl side
955
sort integ the power valu the power integ defin number step need transform step odd for power step gt gt gt gt gt gt gt given integ lo the task sort integ interv lo power ascend order integ power sort ascend order return integ rang lo sort power notic integ lo lt lt guarante transform step power fit bit sign integ
956
four divisor given integ array num return sum divisor integ array divisor if integ array return
957
check there valid path grid given grid each cell grid repres street the street grid mean street connect left cell cell mean street connect upper cell lower cell mean street connect left cell lower cell mean street connect cell lower cell mean street connect left cell upper cell mean street connect cell upper cell you initi start street upper left cell a valid path grid path start upper left cell end bottom cell the path follow street notic allow chang street return true valid path grid fals
958
count number team there soldier stand line each soldier assign uniqu rate you form team soldier rule choos soldier index rate rate rate rate a team valid rate lt rate lt rate rate gt rate gt rate lt lt lt lt return number team form condit soldier part multipl team
959
design underground system an underground railway system keep track custom travel time station they data calcul averag time take travel station implement undergroundsystem class void checkin int id string stationnam int a custom card id equal id check station stationnam time a custom check place time void checkout int id string stationnam int a custom card id equal id check station stationnam time doubl getaveragetim string startstat string endstat return averag time take travel startstat endstat the averag time comput previou travel time startstat endstat happen directli mean check startstat check endstat the time take travel startstat endstat time take travel endstat startstat there custom travel startstat endstat getaveragetim call you assum call checkin checkout method consist if custom check time check time lt all event happen chronolog order
960
construct k palindrom string given string integ you construct empti palindrom string charact return true charact construct palindrom string fals
961
circl rectangl overlap given circl repres radiu center center axi align rectangl repres coordin bottom left corner coordin top corner rectangl return true circl rectangl overlap return fals in word check point xi yi belong circl rectangl time
962
number step reduc number binari represent one given binari represent integ string return number step reduc rule if current number divid if current number odd add it guarante reach test case
963
longest happi string a string call happi string aaa bbb ccc substr given integ return string satisfi condit happi longest occurr letter occurr letter occurr letter letter if string return empti string
964
queri permut with key given array queri posit integ process queri queri length rule in begin permut p for current find posit queri permut p index move begin permut p notic posit queri p result queri return array result queri
965
html entiti parser html entiti parser parser take html code input replac entiti special charact charact the special charact entiti html quotat mark entiti amp quot symbol charact singl quot mark entiti amp apo symbol charact ampersand entiti amp amp symbol charact amp greater than sign entiti amp gt symbol charact gt less than sign entiti amp lt symbol charact lt slash entiti amp frasl symbol charact given input text string html parser implement entiti parser return text replac entiti special charact
966
find minimum number fibonacci number whose sum is k given integ return minimum number fibonacci number sum equal the fibonacci number multipl time the fibonacci number defin f f fn fn fn gt it guarante constraint find fibonacci number sum
967
the lexicograph string all happi string length a happi string string consist letter set valu length string index for string abc ac abcbabcbcb happi string string aa baa ababbc happi string given integ list happi string length sort lexicograph order return kth string list return empti string happi string length
968
display tabl food order restaur given array order repres order custom restaur more specif order customernamei tablenumberi fooditemi customernamei custom tablenumberi tabl custom sit fooditemi item custom order return restaur display tabl the display tabl tabl row entri denot food item tabl order the column tabl number remain column correspond food item alphabet order the row header column tabl name food item note custom name part tabl addit row sort numer increas order
969
minimum number frog croak given string croakoffrog repres combin string croak frog multipl frog croak time multipl croak mix return minimum number frog finish croak string a valid croak mean frog print letter sequenti the frog print letter finish croak if string combin valid croak return
970
maximum point you can obtain card there card arrang row card number point the point integ array cardpoint in step card begin end row you card your score sum point card given integ array cardpoint integ return maximum score obtain
971
diagon travers ii given list list integ num return element num diagon order shown imag
972
max differ you can get from chang integ you integ num you appli step time pick digit lt lt pick digit lt lt the digit equal replac occurr decim represent num the integ lead zero integ let result appli oper num time return max differ
973
check if string can break anoth string given string size check permut string break permut string vice versa in word break vice versa a string break string size gt alphabet order
974
longest continu subarray with absolut diff less than equal limit given array integ num integ limit return size longest empti subarray absolut differ element subarray equal limit
975
count triplet that can form two array equal xor given array integ arr we select indic lt lt lt lt arr length let defin arr arr arr arr arr arr note denot bitwis xor oper return number triplet where
976
minimum time collect all appl tree given undirect tree consist vertic number appl vertic you spend walk edg tree return minimum time second spend collect appl tree start vertex come back vertex the edg undirect tree array edg edg ai bi mean exist edg connect vertic ai bi addit boolean array hasappl hasappl true mean vertex appl appl
977
simplifi fraction given integ return list simplifi fraction exclus denomin equal the fraction order
978
count good node binari tree given binari tree root node x tree name good path root x node greater x return number good node binari tree
979
count good node binari tree given binari tree root node x tree name good path root x node greater x return number good node binari tree
980
rearrang word sentenc given sentenc text a sentenc string space separ word format first letter upper case each word text separ singl space your task rearrang word text word rearrang increas order length if word length arrang origin order return text format shown
981
peopl whose list favorit compani is not subset anoth list given array favoritecompani favoritecompani list favorit compani ith person index return indic peopl list favorit compani subset list favorit compani you return indic increas order
982
maximum number vowel substr given length given string integ return maximum number vowel letter substr length vowel letter english
983
pseudo palindrom path binari tree given binari tree node valu digit a path binari tree pseudo palindrom permut node valu path palindrom return number pseudo palindrom path root node leaf node
984
check if string contain all binari code size k given binari string integ return true binari code length substr otherwis return fals
985
cours schedul iv there total numcours cours label numcours you array prerequisit prerequisit ai bi ai bi for pair prerequisit indirect if prerequisit prerequisit prerequisit you array queri queri uj vj for jth queri answer uj prerequisit vj return boolean array answer answer answer jth queri
986
maximum area piec cake after horizont vertic cut you rectangular cake size array integ horizontalcut verticalcut horizontalcut distanc top rectangular cake ith horizont cut similarli verticalcut distanc left rectangular cake jth vertic cut return maximum area piec cake cut horizont vertic posit provid array horizontalcut verticalcut sinc answer larg number return modulo
987
reorder rout make all path lead citi zero there citi number road travel citi network form tree last year the ministri transport decid orient road direct narrow road repres connect connect ai bi repres road citi ai citi bi thi year big event capit citi peopl travel citi your task consist reorient road citi visit citi return minimum number edg chang it guarante citi reach citi reorder
988
the strongest valu array given array integ arr integ a arr stronger arr arr gt arr median array if arr arr arr stronger arr arr gt arr return list strongest valu array return answer arbitrari order median middl order integ list more formal length list median element posit sort list index for arr median obtain sort array arr median arr the median for arr median obtain sort array arr median arr the median
989
design browser histori you browser tab start homepag visit url back histori number step move forward histori number step implement browserhistori class browserhistori string homepag initi object homepag browser void visit string url visit url current page it clear forward histori string back int step move step back histori if return step histori step gt return step return current url move back histori step string forward int step move step forward histori if forward step histori step gt forward step return current url forward histori step
990
subrectangl queri implement class subrectanglequeri receiv row col rectangl matrix integ constructor support method updatesubrectangl int row int col int row int col int newvalu updat valu newvalu subrectangl upper left coordin row col bottom coordin row col getvalu int row int col return current coordin row col rectangl
991
find two non overlap sub array each with target sum given array integ arr integ target you find overlap array arr sum equal target there multipl answer find answer sum length array minimum return minimum sum length requir array return find array
992
least number uniqu integ k remov given array integ arr integ find number uniqu integ remov element
993
minimum number day make bouquet given integ array bloomday integ integ we make bouquet to make bouquet adjac flower garden the garden consist flower ith flower bloom bloomday bouquet return minimum number day wait make bouquet garden if imposs make bouquet return
994
make file name uniqu given array string name size you creat folder file system ith minut creat folder name sinc file enter folder previous system suffix addit form smallest posit integ obtain remain uniqu return array string length an actual system assign ith folder creat
995
avoid flood the citi your countri infinit number lake initi lake empti rain nth lake nth lake full water if rain lake full water flood your goal avoid flood lake given integ array rain rain gt mean rain rain lake rain mean rain day choos lake day dri return array an an length rain length an rain gt an lake choos dri ith day rain if multipl valid answer return if imposs avoid flood return empti array notic chose dri full lake empti chose dri empti lake
996
the kth factor given posit integ a factor integ defin integ consid list factor sort ascend order return kth factor list return factor
997
longest subarray after delet one element given binari array num delet element return size longest empti subarray result array return subarray
998
check if array pair are divis given array integ arr length integ we divid array pair sum pair divis return true if find fals
999
number subsequ that satisfi given sum condit given array integ num integ target return number empti subsequ num sum minimum maximum element equal target sinc answer larg return modulo
1000
last moment befor all ant fall out plank we wooden plank length unit some ant walk plank ant move speed unit some ant move left move when ant move direct meet point chang direct continu move assum chang direct doesn addit time when ant reach end plank time fall plank imedi given integ integ array left posit ant move left return moment ant fall plank
1001
count submatric with all one given row column matrix mat zero return submatric
1002
rang sum sort subarray sum you array num consist posit integ you comput sum empti continu subarray array sort decreas order creat array number return sum number index left index index inclus array sinc answer huge number return modulo
1003
minimum differ between largest smallest valu three move given array num allow choos element num chang move return minimum differ largest smallest num perfom move
1004
number substr with onli given binari string string consist return number substr charact sinc answer larg return modulo
1005
path maximum probabl you undirect weight graph node index repres edg list edg undirect edg connect node probabl success travers edg succprob given node start end find path maximum probabl success start end return success probabl if path start end return your answer accept differ correct answer
1006
number node sub tree with same label given tree connect undirect graph cycl consist node number edg the root tree node node tree label lower case charact string label the node number label label the edg array form edg ai bi mean edg node ai bi tree return array size an number node subtre ith node label node a subtre tree t tree consist node t descend node
1007
number sub array with odd sum given array integ arr return number subarray odd sum sinc answer larg return modulo
1008
number good way split string you string split call good split empti string concaten equal number distinct letter return number good split make
1009
bulb switcher iv there room bulb number arrang row left initi bulb turn your task obtain configur repres target target ith bulb turn turn you switch flip state bulb flip oper defin choos bulb index current configur flip bulb index index when bulb flip mean return minimum number flip requir form target
1010
number good leaf node pair given root binari tree integ distanc a pair leaf node binari tree good length shortest path equal distanc return number good leaf node pair tree
1011
find winner array game given integ array arr distinct integ integ a game play element array arr arr in round game compar arr arr larger integ win remain posit smaller integ move end array the game end integ win consecut round return integ win game it guarante winner game
1012
minimum swap arrang binari grid given binari grid step choos adjac row grid swap a grid valid cell main diagon zero return minimum number step need make grid valid grid valid the main diagon grid diagon start cell end cell
1013
can convert string k move given string goal convert move dure ith lt lt move choos index index lt lt length chosen previou move shift charact index time do shift charact mean replac letter alphabet wrap shift charact mean appli shift oper time rememb index pick return true convert move return fals
1014
minimum insert balanc parenthes string given parenthes string charact a parenthes string balanc ani left parenthesi consecut parenthesi left parenthesi consecut parenthesi in word treat open parenthesi close parenthesi for balanc balanc you insert charact posit string balanc need return minimum number insert need make balanc
1015
find kth bit nth binari string given posit integ binari string sn form s si si revers invert si gt where denot concaten oper revers return revers string invert invert bit for string sequenc s s s s return kth bit sn it guarante valid
1016
maximum number non overlap subarray with sum equal target given array num integ target return maximum number empti overlap subarray sum valu subarray equal target
1017
minimum oper make array equal you array arr length arr valid valu lt lt in oper select indic lt lt subtract arr add arr perform arr arr the goal make element array equal it guarante element array made equal oper given integ length array return minimum number oper need make element arr equal
1018
magnet forc between two ball in univers earth c rick discov special form magnet forc ball put invent basket rick empti basket ith basket posit morti ball distribut ball basket minimum magnet forc ball maximum rick state magnet forc ball posit given integ array posit integ return requir forc
1019
minimum number vertic reach all node given direct acycl graph vertic number array edg edg fromi toi repres direct edg node fromi node toi find smallest set vertic node graph reachabl it guarante uniqu solut exist notic return vertic order
1020
minimum number function call make target array your task form integ array num initi array zero arr size num return minimum number function call make num arr the answer guarante fit bit sign integ
1021
maximum number coin you can get there pile coin vari size friend pile coin in step choos pile coin necessarili consecut of choic alic pick pile maximum number coin you pick pile maximum number coin your friend bob pick pile repeat pile coin given array integ pile pile number coin ith pile return maximum number coin
1022
find latest group size m given array arr repres permut number you binari string size initi bit set at step assum binari string arr index bit posit arr set you integ find latest step exist group length a group contigu substr extend direct return latest step exist group length if group exist return
1023
maximum length subarray with posit product given array integ num find maximum length subarray product element posit a subarray array consecut sequenc valu array return maximum length subarray posit product
1024
number way split string given binari string string consist split empti string return number way split number charact sinc answer larg return modulo
1025
shortest subarray remov make array sort given integ array arr remov subarray empti arr remain element arr decreas a subarray contigu subsequ array return length shortest subarray remov
1026
number way where squar number is equal product two number given array integ num num return number triplet form type type rule type triplet num num num lt lt num length lt lt lt num length type triplet num num num lt lt num length lt lt lt num length
1027
minimum delet cost avoid repeat letter given string array integ cost cost cost delet ith charact return minimum cost delet ident letter notic delet chosen charact time word delet charact cost delet charact chang
1028
count unhappi friend you list prefer friend for person prefer list friend sort order prefer in word friend earlier list prefer friend list friend list denot integ all friend divid pair the pair list pair pair xi yi denot xi pair yi yi pair xi howev pair friend unhappi a friend unhappi pair exist friend pair prefer prefer return number unhappi friend
1029
min cost connect all point you array point repres integ coordin point d plane point xi yi the cost connect point xi yi xj yj manhattan distanc xi xj yi yj val denot absolut val return minimum cost make point connect all point connect simpl path point
1030
maximum sum obtain ani permut we array integ num array request request starti endi the ith request ask sum num starti num starti num endi num endi both starti endi index return maximum total sum request permut num sinc answer larg return modulo
1031
make sum divis p given array posit integ num remov smallest subarray possibl empti sum remain element divis it allow remov array return length smallest subarray remov imposs a subarray defin contigu block element array
1032
split string into max number uniqu substr given string return maximum number uniqu substr string split you split string list empti substr concaten substr form origin string howev split substr uniqu a substr contigu sequenc charact string
1033
maximum non neg product matrix you row col matrix grid initi locat top left corner step move matrix among path start top left corner end bottom corner row col find path maximum neg product the product path product integ grid cell visit path return maximum neg product modulo if maximum product neg return notic modulo perform maximum product
1034
maximum profit oper centenni wheel you oper centenni wheel gondola gondola room peopl you abil rotat gondola counterclockwis cost runningcost dollar you array custom length custom number custom arriv ith rotat index thi mean rotat wheel time custom custom arriv you make custom wait room gondola each custom pay boardingcost dollar board gondola closest ground exit gondola reach ground you stop wheel time includ serv custom if decid stop serv custom subsequ rotat free order custom safe note custom wait wheel board gondola rest wait rotat return minimum number rotat perform maxim profit if scenario profit posit return
1035
throne inherit a kingdom consist king children grandchildren everi famili die child born the kingdom defin order inherit consist king member let defin recurs function successor curord person inherit order return person order inherit successor curord children children curord king return null return successor curord return oldest child curord for assum kingdom consist king children alic bob alic older bob final alic son jack in begin curord king call successor king curord return alic append curord king alic call successor alic curord return jack append curord king alic jack call successor jack curord return bob append curord king alic jack bob call successor bob curord return null thu order inherit king alic jack bob use function obtain uniqu order inherit implement throneinherit class throneinherit string kingnam initi object throneinherit class the king part constructor void birth string parentnam string childnam indic parentnam gave birth childnam void death string indic death the death person doesn affect successor function current inherit order you treat mark person dead string getinheritanceord return list repres current order inherit exclud dead peopl
1036
alert use same key card three more time one hour period leetcod compani worker key card unlock offic door each time worker key card secur system save worker time the system emit alert worker key card time hour period you list string keynam keytim keynam keytim correspond person time key card singl day access time hour time format hh mm return list uniqu worker name receiv alert frequent keycard sort name ascend order alphabet notic consid hour period consid hour period
1037
find valid matrix given row column sum you array rowsum colsum neg integ rowsum sum element ith row colsum sum element jth column d matrix in word element matrix sum row column find matrix neg integ size rowsum length colsum length satisfi rowsum colsum requir return d array repres matrix fulfil requir it guarante matrix fulfil requir exist
1038
even odd tree a binari tree name even odd meet condit the root binari tree level index children level index children level index for index level node level odd integ valu strictli increas order left for odd index level node level integ valu strictli decreas order left given root binari tree return true binari tree even odd return fals
1039
maxim network rank there infrastructur citi number road connect citi each road ai bi bidirect road citi ai bi the network rank citi defin total number directli connect road citi if road directli connect citi count the maxim network rank infrastructur maximum network rank pair citi given integ array road return maxim network rank entir infrastructur
1040
split two string make palindrom you string length choos index split string index split string aprefix asuffix aprefix asuffix split string bprefix bsuffix bprefix bsuffix check aprefix bsuffix bprefix asuffix form palindrom when split string sprefix ssuffix ssuffix sprefix allow empti for abc abc bc ab abc valid split return true form palindrom string return fals notic denot concaten string
1041
coordin with maximum network qualiti you array network tower tower integ radiu tower xi yi qi denot ith network tower locat xi yi qualiti factor qi all coordin integr coordin x y plane distanc coordin euclidean distanc the integ radiu denot maximum distanc tower reachabl the tower reachabl distanc equal radiu outsid distanc signal garbl tower reachabl the signal qualiti ith tower coordin calcul formula qi distanc tower coordin the network qualiti coordin sum signal qualiti reachabl tower return integr coordin network qualiti maximum if multipl coordin network qualiti return lexicograph minimum coordin note a coordin lexicograph smaller lt lt val greatest integ equal val floor function
1042
number set k non overlap line segment given point d plane ith point find number way draw overlap line segment segment cover point the endpoint segment integr coordin the line segment cover point allow share endpoint return number way draw overlap line segment sinc number huge return modulo
1043
lexicograph smallest string after appli oper you string length consist digit integ you appli oper number time order add odd indic index digit post cycl back for rotat posit for return lexicograph smallest string obtain appli oper number time a string lexicograph smaller string length posit differ string letter appear earlier alphabet letter for lexicograph smaller posit differ letter
1044
best team with no conflict you manag basketbal team for upcom tournament choos team highest score the score team sum score player team howev basketbal team allow conflict a conflict exist younger player strictli higher score older player a conflict occur player age given list score age score age repres score age ith player return highest score basketbal team
1045
arithmet subarray a sequenc number call arithmet consist element differ consecut element more formal sequenc arithmet valid for arithmet sequenc the sequenc arithmet you array integ num array integ repres rang queri ith queri rang all array index return list boolean element answer answer true subarray num num num rearrang form arithmet sequenc fals
1046
path with minimum effort you hiker prepar upcom hike you height d array size row column height row col repres height cell row col you situat top left cell hope travel bottom cell row column index you move left find rout requir minimum effort a rout effort maximum absolut differ height consecut cell rout return minimum effort requir travel top left cell bottom cell
1047
widest vertic area between two point contain no point given point d plane point xi yi return widest vertic area point point insid area a vertic area area fix width extend infinit axi infinit height the widest vertic area maximum width note point edg vertic area consid includ area
1048
count substr that differ one charact given string find number way choos empti substr replac singl charact charact result substr substr in word find number substr differ substr charact for underlin substr comput comput differ valid return number substr satisfi condit a substr contigu sequenc charact string
1049
count sort vowel string given integ return number string length consist vowel lexicograph sort a string lexicograph sort valid alphabet
1050
furthest build you can reach you integ array height repres height build brick ladder you start journey build move build possibl brick ladder while move build build index if current build height greater equal build height ladder brick if current build height build height ladder brick return furthest build index index reach ladder brick optim
1051
minimum delet make charact frequenc uniqu a string call good charact frequenc given string return minimum number charact delet make good the frequenc charact string number time appear string for string aab frequenc frequenc
1052
sell diminish valu color ball you inventori color ball custom order ball color the custom weirdli valu color ball each color ball number ball color inventori for yellow ball custom pay yellow ball after transact yellow ball left yellow ball valu ball decreas sell custom you integ array inventori inventori repres number ball ith color initi you integ order repres total number ball custom you sell ball order return maximum total attain sell order color ball as answer larg return modulo
1053
minimum delet make string balanc you string consist charact you delet number charact make balanc balanc pair indic lt return minimum number delet need make balanc
1054
minimum jump reach home a bug home axi posit help posit the bug jump rule it jump posit forward it jump posit backward left it jump backward row it jump forbidden posit the bug jump forward home jump posit number neg integ given array integ forbidden forbidden mean bug jump posit forbidden integ return minimum number jump need bug reach home if sequenc jump land bug posit return
1055
determin two string are close two string consid close attain oper oper swap exist charact for abcd gt aecdb oper transform occurr exist charact exist charact charact for aacabb gt bbcbaa turn turn you oper string time given string word word return true word word close fals
1056
minimum oper reduc x zero you integ array num integ in oper remov leftmost rightmost element array num subtract note modifi array futur oper return minimum number oper reduc return
1057
smallest string with a given numer valu the numer lowercas charact defin posit index alphabet numer numer numer the numer string consist lowercas charact defin sum charact numer valu for numer string abe equal you integ return lexicograph smallest string length equal numer equal note string lexicograph smaller string dictionari order prefix posit alphabet order
1058
way make fair array you integ array num you choos index index remov element notic index element chang remov for num choos remov index result num choos remov index result num choos remov index result num an array fair sum odd index valu equal sum index valu return number indic choos remov num fair
1059
merg in between link list you link list list list size remov list node ath node bth node put list place the blue edg node figur incid result build result list return head
1060
design front middl back queue design queue support push pop oper front middl back implement frontmiddleback class frontmiddleback initi queue void pushfront int val add val front queue void pushmiddl int val add val middl queue void pushback int val add val back queue int popfront remov front element queue return if queue empti return int popmiddl remov middl element queue return if queue empti return int popback remov back element queue return if queue empti return notic middl posit choic oper perform frontmost middl posit choic for push middl result pop middl return result
1061
find most competit subsequ given integ array num posit integ return competit subsequ num size an array subsequ result sequenc obtain eras possibl element array we defin subsequ competit subsequ length posit differ subsequ number number for competit posit differ final number
1062
minimum move make array complementari you integ array num length integ limit in move replac integ num integ limit inclus the array num complementari indic index num num equal number for array complementari indic num num return minimum number move requir make num complementari
1063
max number k sum pair you integ array num integ in oper pick number array sum equal remov array return maximum number oper perform array
1064
concaten consecut binari number given integ return decim binari string form concaten binari represent order modulo
1065
sum absolut differ sort array you integ array num sort decreas order build return integ array result length num result equal summat absolut differ num element array in word result equal sum num num lt lt num length index
1066
stone game vi alic bob turn play game alic start there stone pile on player turn remov stone pile receiv point base stone alic bob stone differ you integ array length alicevalu bobvalu each alicevalu bobvalu repres alic bob ith stone the winner person point stone chosen if player amount point game result draw both player play optim both player valu determin result game if alic win return if bob win return if game result draw return
1067
partit into minimum number of deci binari number a decim number call deci binari digit lead zero for deci binari given string repres posit decim integ return minimum number posit deci binari number need sum
1068
stone game vii alic bob turn play game alic start there stone arrang row on player turn remov leftmost stone rightmost stone row receiv point equal sum remain stone valu row the winner higher score stone left remov bob found lose game poor bob lose decid minim score differ alic goal maxim differ score given array integ stone stone repres ith stone left return differ alic bob score play optim
1069
maximum erasur valu you array posit integ num eras subarray uniqu element the score eras subarray equal sum element return maximum score eras subarray an array call subarray form contigu subsequ equal
1070
jump game vi you index integ array num integ you initi stand index in move jump step forward boundari array that jump index index rang min inclus you reach index array index your score sum num index visit array return maximum score
1071
averag wait time there restaur singl chef you array custom custom arrivali timei arrivali arriv time ith custom the arriv time sort decreas order timei time need prepar order ith custom when custom arriv chef order chef start prepar idl the custom wait till chef finish prepar order the chef prepar food custom time the chef prepar food custom order input return averag wait time custom solut actual answer consid accept
1072
maximum binari string after chang you binari string binari consist you appli oper number time oper if number substr replac for gt oper if number substr replac for gt return maximum binari string obtain number oper binari string greater binari string decim represent greater decim represent
1073
maximum number eaten appl there special kind appl tree grow appl day day on ith day tree grow appl appl rot day day day day appl rotten eaten on day appl tree grow appl denot appl day you decid eat appl day doctor note eat day given integ array day appl length return maximum number appl eat
1074
where will ball fall you d grid size repres box ball the box open top bottom side each cell box diagon board span corner cell redirect ball left a board redirect ball span top left corner bottom corner repres grid a board redirect ball left span top corner bottom left corner repres grid we drop ball top column box each ball stuck box fall bottom a ball stuck hit v shape pattern board board redirect ball wall box return array answer size answer column ball fall bottom drop ball ith column top ball stuck box
1075
count good meal a good meal meal food item sum delici equal power you pick food make good meal given array integ delici delici delici item food return number good meal make list modulo note item indic consid delici
1076
way split array into three subarray a split integ array good the array split empti contigu subarray name left mid left the sum element left equal sum element mid sum element mid equal sum element given num array neg integ return number good way split num as number larg return modulo
1077
maximum score from remov substr you string integ you perform type oper number time remov substr ab gain point for remov ab cabxba cxbae remov substr ba gain point for remov ba cabxba cabx return maximum point gain appli oper
1078
construct lexicograph largest valid sequenc given integ find sequenc satisfi the integ occur sequenc each integ occur sequenc for integ distanc occurr the distanc number sequenc absolut differ indic return lexicograph largest sequenc it guarante constraint solut a sequenc lexicograph larger sequenc length posit differ sequenc number greater number for lexicograph larger posit differ number greater
1079
swap node link list you head link list integ return head link list swap valu kth node begin kth node end list index
1080
minim ham distanc after swap oper you integ array sourc target length you array allowedswap allowedswap ai bi allow swap element index ai index bi index array sourc note swap element specif pair indic multipl time order the ham distanc array length sourc target number posit element formal number indic lt lt sourc target index return minimum ham distanc sourc target perform amount swap oper array sourc
1081
tupl same product given array num distinct posit integ return number tupl element num
1082
largest submatrix with rearrang you binari matrix matrix size allow rearrang column matrix order return area largest submatrix matrix element submatrix reorder column optim
1083
minimum number peopl teach on social network consist user friendship user user commun common languag you integ array languag array friendship there languag number languag set languag user friendship denot friendship user vi you choos languag teach user friend commun return minimum number user teach note friendship transit mean friend friend doesn guarante friend
1084
decod xore permut there integ array perm permut posit integ odd it encod integ array encod length encod perm xor perm for perm encod given encod array return origin array perm it guarante answer exist uniqu
1085
chang minimum charact satisfi one three condit you string consist lowercas letter in oper chang charact lowercas letter your goal satisfi condit everi letter strictli letter alphabet everi letter strictli letter alphabet both consist distinct letter return minimum number oper need achiev goal
1086
find kth largest xor coordin valu you d matrix size consist neg integ you integ the coordin matrix xor matrix lt lt lt lt lt lt index find kth largest index coordin matrix
1087
restor array from adjac pair there integ array num consist uniqu element forgotten howev rememb pair adjac element num you d integ array adjacentpair size adjacentpair ui vi element ui vi adjac num it guarante adjac pair element num num exist adjacentpair num num num num the pair order return origin array num if multipl solut return
1088
can you eat your favorit candi your favorit day you index array posit integ candiescount candiescount repres number candi ith type you d array queri queri favoritetypei favoritedayi dailycapi you play game rule you start eat candi day you eat candi type eaten candi type you eat candi day eaten candi construct boolean array answer answer length queri length answer true eat candi type favoritetypei day favoritedayi eat dailycapi candi day fals note eat type candi day provid follow rule return construct array answer
1089
maximum absolut sum ani subarray you integ array num the absolut sum subarray numsl numsl numsr numsr ab numsl numsl numsr numsr return maximum absolut sum possibl empti subarray num note ab defin if neg integ ab if neg integ ab
1090
minimum length string after delet similar end given string consist charact you ask appli algorithm string number time pick empti prefix string charact prefix equal pick empti suffix string charact suffix equal the prefix suffix intersect index the charact prefix suffix delet prefix suffix return minimum length perform oper number time possibl time
1091
maximum score from remov stone you play solitair game pile stone size each turn choos empti pile stone add point score the game stop fewer empti pile mean move given integ return maximum score
1092
largest merg of two string you string word word you construct string merg word word empti choos option if word empti append charact word merg delet word for word abc merg dv choos oper word bc merg dva if word empti append charact word merg delet word for word abc merg choos oper word bc merg return lexicograph largest merg construct a string lexicograph larger string length posit differ charact strictli larger charact for abcd lexicograph larger abcc posit differ fourth charact greater
1093
count number homogen substr given string return number homogen substr sinc answer larg return modulo a string homogen charact string a substr contigu sequenc charact string
1094
minimum limit ball bag you integ array num ith bag num ball you integ maxoper you perform oper maxoper time take bag ball divid bag posit number ball for bag ball bag ball bag ball your penalti maximum number ball bag you minim penalti oper return minimum penalti perform oper
1095
form array concaten subarray anoth array you d integ array group length you integ array num you ask choos disjoint subarray array num ith subarray equal group index gt subarray appear ith subarray num subarray order group return true task fals note subarray disjoint index num belong subarray a subarray contigu sequenc element array
1096
map highest peak you integ matrix iswat size repres map land water cell if iswat cell land cell if iswat cell water cell you assign cell height rule the height cell neg if cell water cell height ani adjac cell absolut height differ a cell adjac cell directli north east south west side touch find assign height maximum height matrix maxim return integ matrix height size height cell height if multipl solut return
1097
minimum number oper move all ball each box you box you binari string box length box ith box empti ball in oper move ball box adjac box box adjac box ab note ball box return array answer size answer minimum number oper need move ball ith box each answer calcul initi state box
1098
maximum score perform multipl oper you integ array num multipli size gt the array index you begin score you perform oper on ith oper index choos integ start end array num add multipli score remov array num return maximum score perform oper
1099
closest dessert cost you make dessert prepar buy ingredi you ice cream base flavor type top choos you follow rule make dessert there ice cream base you add type top top there type top you input basecost integ array length basecost repres price ith ice cream base flavor toppingcost integ array length toppingcost price ith top target integ repres target price dessert you make dessert total cost close target return closest cost dessert target if multipl return lower
1100
equal sum array with minimum number oper you array integ num num possibl length the valu array inclus in oper chang integ array inclus return minimum number oper requir make sum valu num equal sum valu num return make sum array equal
1101
check number sum power three given integ return true repres sum distinct power otherwis return fals an integ power exist integ
1102
sum beauti all substr the beauti string differ frequenc frequent frequent charact for beauti abaacc given string return sum beauti substr
1103
minimum element add form given sum you integ array num integ limit goal the array num interest properti ab num lt limit return minimum number element add make sum array equal goal the array maintain properti ab num lt limit note ab equal gt
1104
number restrict path from first last node there undirect weight connect graph you posit integ denot graph node label array edg edg ui vi weighti denot edg node ui vi weight equal weighti a path node start node end sequenc node zk start zk end edg zi zi lt lt the distanc path sum weight edg path let distancetolastnod denot shortest distanc path node node a restrict path path satisfi distancetolastnod zi gt distancetolastnod zi lt lt return number restrict path node node sinc number larg return modulo
1105
maximum averag pass ratio there school class student class final exam you d integ array class class passi totali you ith class totali total student passi number student pass exam you integ extrastud there extrastud brilliant student guarante pass exam class assign you assign extrastud student class maxim averag pass ratio class the pass ratio class equal number student class pass exam divid total number student class the averag pass ratio sum pass ratio class divid number class return maximum averag pass ratio assign extrastud student answer actual answer accept
1106
design authent manag there authent system work authent token for session user receiv authent token expir timetol second currenttim if token renew expiri time extend expir timetol second potenti currenttim implement authenticationmanag class authenticationmanag int timetol construct authenticationmanag set timetol gener string tokenid int currenttim gener token tokenid currenttim second renew string tokenid int currenttim renew unexpir token tokenid currenttim second if unexpir token tokenid request countunexpiredtoken int currenttim return number unexpir token currenttim note token expir time action time renew countunexpiredtoken expir take place action
1107
maximum number consecut valu you can make you integ array coin length repres coin the ith coin coin you make choos coin valu sum return maximum number consecut integ valu make coin start includ note multipl coin
1108
number order backlog you d integ array order order pricei amounti ordertypei denot amounti order type ordertypei price pricei the ordertypei batch buy order batch sell order note order repres batch amounti independ order price order type all order repres order order repres order valid there backlog consist order execut the backlog initi empti when order if order buy order sell order smallest price backlog if sell order price smaller equal current buy order price match execut sell order remov backlog els buy order ad backlog vice versa order sell order buy order largest price backlog if buy order price larger equal current sell order price match execut buy order remov backlog els sell order ad backlog return total amount order backlog place order input sinc number larg return modulo
1109
maximum valu given index bound array you posit integ index maxsum you construct array num index satisfi condit num length num posit integ lt lt ab num num lt lt lt the sum element num exceed maxsum num index maxim return num index construct array note ab equal gt
1110
minimum number oper reiniti permut you integ you initi permut perm size perm index in oper creat array arr if arr perm if arr perm you assign arr perm return minimum number oper perform perm return permut initi
1111
evalu bracket pair string you string bracket pair pair empti key for string age yearsold bracket pair key age you valu wide rang key thi repres d string array knowledg knowledg keyi valuei key keyi valuei you task evalu bracket pair when evalu bracket pair key keyi replac keyi bracket pair key valuei if key replac keyi bracket pair question mark quotat mark each key knowledg there nest bracket return result string evalu bracket pair
1112
sentenc similar iii a sentenc list word separ singl space lead trail space for hello world hello world world sentenc word consist uppercas lowercas english letter two sentenc sentenc sentenc similar insert arbitrari sentenc possibl empti insid sentenc sentenc equal for sentenc hello jane sentenc hello jane made equal insert hello jane sentenc given sentenc sentenc sentenc return true sentenc sentenc similar otherwis return fals
1113
count nice pair array you array num consist neg integ let defin rev revers neg integ for rev rev a pair indic nice satisfi condit lt lt lt num length num rev num num rev num return number nice pair indic sinc number larg return modulo
1114
find user activ minut you log user action leetcod integ the log repres d integ array log log idi timei user idi perform action minut timei multipl user perform action simultan singl user perform multipl action minut the user activ minut uam user defin number uniqu minut user perform action leetcod a minut count multipl action occur you calcul index array answer size lt lt answer number user uam equal return array answer
1115
minimum absolut sum differ you posit integ array num num length the absolut sum differ array num num defin sum num num lt lt index you replac element num element num minim absolut sum differ return minimum absolut sum differ replac element array num sinc answer larg return modulo defin gt lt
1116
find winner circular game there friend play game the friend sit circl number clockwis order more formal move clockwis ith friend bring friend lt lt move clockwis nth friend bring st friend the rule game start st friend count friend clockwis direct includ friend start the count wrap circl count friend the friend count leav circl lose game if friend circl back step start friend immedi clockwis friend lost repeat els friend circl win game given number friend integ return winner game
1117
minimum sideway jump there lane road length consist point label a frog start point lane jump point howev obstacl you array obstacl length obstacl rang describ obstacl lane obstacl point if obstacl obstacl point there obstacl lane point for obstacl obstacl lane point the frog travel point point lane obstacl lane point to avoid obstacl frog perform side jump jump lane adjac point obstacl lane for frog jump lane point lane point return minimum number side jump frog reach lane point start lane point note there obstacl point
1118
queri number point insid circl you array point point xi yi coordin ith point d plane multipl point coordin you array queri queri xj yj rj describ circl center xj yj radiu rj for queri queri comput number point insid jth circl point border circl consid insid return array answer answer answer jth queri
1119
maximum xor each queri you sort array num neg integ integ maximumbit you perform queri time find neg integ lt maximumbit num xor num xor xor num num length xor maxim answer ith queri remov element current array num return array answer answer answer ith queri
1120
maximum ice cream bar it swelter summer day boy buy ice cream bar at store ice cream bar you array cost length cost price ith ice cream bar coin the boy initi coin coin spend buy ice cream bar return maximum number ice cream bar boy buy coin coin note the boy buy ice cream bar order
1121
singl thread cpu you task label repres d integ array task task enqueuetimei processingtimei mean task process enqueuetimei processingtimei finish process you singl thread cpu process task time act if cpu idl task process cpu remain idl if cpu idl task cpu choos shortest process time if multipl task shortest process time choos task smallest index onc task start cpu process entir task stop the cpu finish task start instantli return order cpu process task
1122
frequenc most frequent element the frequenc element number time occur array you integ array num integ in oper choos index num increment element index return maximum frequenc element perform oper
1123
longest substr of all vowel order a string consid beauti satisfi condit each english vowel the letter sort alphabet order for string aeiou aaaaaaeiiiioou consid beauti uaeio aeoiu aaaeeeooo beauti given string word consist english vowel return length longest beauti substr word if substr exist return a substr contigu sequenc charact string
1124
seat reserv manag design system manag reserv state seat number implement seatmanag class seatmanag int initi seatmanag object manag seat number all seat initi int reserv fetch smallest number unreserv seat reserv return number void unreserv int seatnumb unreserv seat seatnumb
1125
maximum element after decreas rearrang you array posit integ arr perform oper possibl arr satisfi condit the element arr the absolut differ adjac element equal in word ab arr arr lt lt lt arr length index ab absolut there type oper perform number time decreas element arr smaller posit integ rearrang element arr order return maximum element arr perform oper satisfi condit
1126
split string into descend consecut valu you string consist digit check split empti substr numer valu substr descend order differ numer valu adjac substr equal for string split numer valu the valu descend order adjac valu differ valid anoth string split howev way invalid numer valu descend order return true split fals a substr contigu sequenc charact string
1127
minimum adjac swap reach kth smallest number you string num repres larg integ integ we call integ wonder permut digit num greater num there wonder integ howev care smallest valu for num the st smallest wonder integ the smallest wonder integ the smallest wonder integ the smallest wonder integ return minimum number adjac digit swap appli num reach kth smallest wonder integ the test gener kth smallest wonder integ exist
1128
maximum distanc between pair valu you increas index integ array num num a pair indic lt lt num length lt lt num length valid lt num lt num the distanc pair return maximum distanc valid pair if valid pair return an array arr increas arr gt arr lt lt arr length
1129
maximum subarray min product the min product array equal minimum array multipli array sum for array minimum min product given array integ num return maximum min product empti subarray num sinc answer larg return modulo note min product maxim perform modulo oper testcas gener maximum min product modulo fit bit sign integ a subarray contigu part array
1130
increment memori leak you integ memori memori repres memori bit memori stick there faulti program run consum increas amount memori at ith start bit memori alloc stick memori memori stick memori if stick bit memori program crash return array crashtim memori crash memori crash crashtim time second program crash memori crash memori crash bit memori stick
1131
rotat box you matrix charact box repres side view box each cell box a stone a stationari obstacl empti the box rotat degre clockwis caus stone fall due graviti each stone fall land obstacl stone bottom box graviti affect obstacl posit inertia box rotat affect stone horizont posit it guarante stone box rest obstacl stone bottom box return matrix repres box rotat
1132
minimum number swap make binari string altern given binari string return minimum number charact swap make altern imposs the string call altern adjac charact equal for string altern string ani charact swap adjac
1133
find pair with certain sum you integ array num num you task implement data structur support queri type add posit integ element index array num count number pair num num equal lt lt num length lt lt num length implement findsumpair class findsumpair int num int num initi findsumpair object integ array num num void add int index int val add val num index appli num index val int count int tot return number pair num num tot
1134
minimum speed arriv time you float point number hour repres amount time reach offic to commut offic train sequenti order you integ array dist length dist describ distanc kilomet ith train ride each train depart integ hour wait train ride for st train ride take hour wait addit hour depart train ride hour mark return minimum posit integ speed kilomet hour train travel reach offic time imposs time test gener answer exceed hour digit decim point
1135
jump game vii you index binari string integ minjump maxjump in begin stand index equal you move index index condit fulfil minjump lt lt min maxjump length return true reach index length fals
1136
minim maximum pair sum array the pair sum pair equal the maximum pair sum largest pair sum list pair for pair maximum pair sum max max given array num length pair element num pair each element num pair the maximum pair sum minim return minim maximum pair sum optim pair element
1137
get biggest three rhombu sum grid you integ matrix grid a rhombu sum sum element form border regular rhombu shape grid the rhombu shape squar rotat degre corner center grid cell below imag valid rhombu shape color cell includ rhombu sum note rhombu area depict purpl rhombu bottom corner return biggest distinct rhombu sum grid descend order if distinct valu return
1138
maximum valu insert you larg integ repres string integ digit the digit digit inclus rang repres neg number you maxim numer insert decim represent you insert left neg sign for insert make if insert make return string repres maximum insert
1139
process task use server you index integ array server task length server weight server task time need process task second task assign server task queue initi server free queue empti at jth task insert queue start task insert as long free server queue empti task front queue assign free server smallest weight case tie assign free server smallest index if free server queue empti wait server free immedi assign task if multipl server free time multipl task queue assign order insert weight index prioriti a server assign task free task build array an length an index server task assign return array an
1140
egg drop with egg n floor you ident egg access build floor label you exist floor lt lt egg drop floor higher break egg drop floor break in move unbroken egg drop floor lt lt if egg break longer howev egg break reus futur move return minimum number move determin certainti
1141
reduct oper make array element equal given integ array num goal make element num equal to complet oper follow step find largest num let index index largest if multipl element largest pick smallest find largest num strictli smaller largest let nextlargest reduc num nextlargest return number oper make element num equal
1142
minimum number flip make binari string altern you binari string you allow perform type oper string sequenc type remov charact start string append end string type pick charact flip vice versa return minimum number type oper perform altern the string call altern adjac charact equal for string altern string
1143
find student will replac chalk there student class number the teacher give student problem start student number student number teacher reach student number after teacher restart process start student number you index integ array chalk integ there initi piec chalk when student number problem solv chalk piec chalk solv problem howev current number chalk piec strictli chalk student number ask replac chalk return index student replac chalk
1144
largest magic squar a magic squar grid fill integ row sum column sum diagon sum equal the integ magic squar distinct everi grid trivial magic squar given integ grid return size side length largest magic squar found grid
1145
maximum number remov charact you string subsequ you distinct index integ array remov subset indic index you choos integ lt lt remov length remov charact indic remov subsequ more formal mark charact remov lt lt remov mark charact check subsequ return maximum choos subsequ remov a subsequ string string gener origin string charact delet chang rel order remain charact
1146
merg triplet form target triplet a triplet array integ you d integ array triplet triplet ai bi ci describ ith triplet you integ array target describ triplet obtain to obtain target appli oper triplet number time possibl choos indic index updat triplet max ai aj max bi bj max ci cj for triplet triplet triplet updat max max max return true obtain target triplet element triplet fals
1147
find peak element ii a peak element d grid element strictli greater adjac neighbor left top bottom given index matrix mat adjac cell equal find peak element mat return length array you assum entir matrix surround outer perimet cell you write algorithm run o log o log time
1148
the number full round you have play a onlin video game releas video game minut round schedul quarter hour period thi mean hh hh hh hh round start hh repres integ number a hour clock earliest time day latest given string starttim finishtim format hh mm repres exact time start finish play game calcul number full round play game session for starttim finishtim mean play full round you play full round start round began play full round stop round end if finishtim earlier starttim mean play overnight starttim midnight midnight finishtim return number full round play start play starttim finish finishtim
1149
count sub island you binari matric grid grid repres water repres land an island group connect direct horizont vertic ani cell grid consid water cell an island grid consid island island grid cell make island grid return number island grid consid island
1150
minimum absolut differ queri the minimum absolut differ array defin minimum lt lt lt length if element minimum absolut differ for minimum absolut differ array note you integ array num array queri queri li ri for queri comput minimum absolut differ subarray num li ri element num base indic li ri inclus return array an an answer ith queri a subarray contigu sequenc element array the defin gt lt
1151
remov all occurr substr given string part perform oper occurr substr part remov find leftmost occurr substr part remov return remov occurr part a substr contigu sequenc charact string
1152
maximum altern subsequ sum the altern sum index array defin sum element indic minu sum element odd indic for altern sum given array num return maximum altern sum subsequ num reindex element subsequ a subsequ array array gener origin array delet element possibl chang remain element rel order for subsequ underlin element
1153
cyclic rotat grid you integ matrix grid integ integ the matrix compos layer shown imag color layer a cyclic rotat matrix cyclic rotat layer matrix to cyclic rotat layer element layer place adjac element counter clockwis direct an rotat shown return matrix appli cyclic rotat
1154
number wonder substr a wonder string string letter appear odd number time for ccjjc abab wonder ab given string word consist ten lowercas english letter return number wonder empti substr word if substr appear multipl time word count occurr separ a substr contigu sequenc charact string
1155
elimin maximum number monster you play video game defend citi group monster you index integ array dist size dist initi distanc kilomet ith monster citi the monster walk citi constant speed the speed monster integ array speed size speed speed ith monster kilomet minut you weapon fulli charg elimin singl monster howev weapon take minut charg the weapon fulli charg start you lose monster reach citi if monster reach citi exact moment weapon fulli charg count loss game end weapon return maximum number monster elimin lose elimin monster reach citi
1156
count good number a digit string good digit index indic digit odd indic prime for good digit posit digit odd posit prime howev good index given integ return total number good digit string length sinc answer larg return modulo a digit string string consist digit lead zero
1157
nearest exit entranc maze you matrix maze index empti cell repres wall repres you entranc maze entranc entrancerow entrancecol denot row column cell initi stand in step move cell left you step cell wall step maze your goal find nearest exit entranc an exit defin empti cell border maze the entranc count exit return number step shortest path entranc nearest exit path exist
1158
sum game alic bob turn play game alic start you string num length consist digit charact on turn player num choos index num replac num digit the game end charact num for bob win sum digit half num equal sum digit half for alic win sum equal for game end num bob win if game end num alic win assum alic bob play optim return true alic win fals bob win
1159
uniqu length palindrom subsequ given string return number uniqu palindrom length subsequ note multipl way obtain subsequ count a palindrom string read forward backward a subsequ string string gener origin string charact delet chang rel order remain charact for ace subsequ abcd
1160
add minimum number rung you strictli increas integ array rung repres height rung ladder you floor height reach rung you integ dist you climb highest rung distanc floor rung rung dist you insert rung posit integ height rung return minimum number rung ad ladder order climb rung
1161
maximum number point cost you integ matrix point index start point maxim number point matrix to gain point pick cell row pick cell coordin add point score howev lose point pick cell cell pick previou row for adjac row lt lt pick cell coordin subtract ab score return maximum number point achiev ab defin gt lt
1162
the number smallest unoccupi chair there parti friend number attend there infinit number chair parti number infin when friend arriv parti sit unoccupi chair smallest number for chair occupi friend sit chair number when friend leav parti chair unoccupi moment leav if friend arriv moment sit chair you index d integ array time time arrivali leavingi indic arriv leav time ith friend integ targetfriend all arriv time distinct return chair number friend number targetfriend sit
1163
describ paint there long thin paint repres number line the paint paint multipl overlap segment segment paint uniqu color you d integ array segment segment starti endi colori repres half close segment starti endi colori color the color overlap segment paint mix paint when color mix form color repres set mix color for color mix result mix color for sake simplic output sum element set full set you describ paint minimum number overlap half close segment mix color these segment repres d array paint paint leftj rightj mixj describ half close segment leftj rightj mix color sum mixj for paint creat segment paint color sum segment color segment return d array paint describ finish paint exclud part paint you return segment order a half close segment section number line point includ point includ point
1164
largest number after mutat substr you string num repres larg integ you index integ array chang length map digit digit more formal digit map digit chang you choos mutat singl substr num to mutat substr replac digit num digit map chang replac num chang num return string repres largest integ mutat choos singl substr num a substr contigu sequenc charact string
1165
maximum compat score sum there survey consist question question answer the survey student number mentor number the answer student repres d integ array student student integ array answer ith student index the answer mentor repres d integ array mentor mentor integ array answer jth mentor index each student assign mentor mentor student assign the compat score student mentor pair number answer student mentor for student answer mentor answer compat score answer you task find optim student mentor pair maxim sum compat score given student mentor return maximum compat score sum achiev
1166
maximum number week which you can work there project number you integ array mileston mileston denot number mileston ith project you work project rule everi week finish mileston project you work week you work mileston project consecut week onc mileston project finish mileston work violat rule stop work note finish project mileston due constraint return maximum number week work project violat rule mention
1167
minimum garden perimet collect enough appl in garden repres infinit d grid appl tree plant integ coordin the appl tree plant integ coordin appl grow you buy axi align squar plot land center given integ neededappl return minimum perimet plot neededappl appl insid perimet plot the defin gt lt
1168
check move legal you index grid board board repres cell game board on board free cell repres white cell repres w black cell repres b each move game consist choos free cell chang color play white black howev move legal chang cell endpoint good line horizont vertic diagon a good line line cell includ endpoint endpoint line color remain cell middl opposit color cell line free you find exampl good line figur given integ rmove cmove charact color repres color play white black return true chang cell rmove cmove color color legal move fals legal
1169
minimum total space wast with k resiz oper you design dynam array you index integ array num num number element array time in addit integ maximum number time resiz array size the size array time sizet num space array hold element the space wast time defin sizet num total space wast sum space wast time lt lt num length return minimum total space wast resiz array time note the array size start count number resiz oper
1170
remov stone minim total you index integ array pile pile repres number stone ith pile integ you appli oper time choos pile remov floor pile stone notic appli oper pile return minimum total number stone remain appli oper floor greatest integ smaller equal round
1171
minimum number swap make string balanc you index string length the string consist open bracket close bracket a string call balanc it empti string it written ab a b balanc string it written c c balanc string you swap bracket indic number time return minimum number swap make balanc
1172
array with element not equal averag neighbor you index array num distinct integ you rearrang element array element rearrang array equal averag neighbor more formal rearrang array properti rang lt lt num length num num equal num return rearrang num meet requir
1173
minimum non zero product array element you posit integ consid array num index consist integ inclus rang binari represent you allow oper number time choos element num choos bit swap bit correspond bit refer bit posit integ for swap bit find minimum product num perform oper number time return product modulo note the answer minimum product modulo oper
1174
maximum matrix sum you integ matrix you oper number time choos adjac element matrix multipli two element consid adjac share border your goal maxim summat matrix element return maximum sum matrix element oper mention
1175
number way arriv destin you citi consist intersect number bi direct road intersect the input gener reach intersect intersect road intersect you integ d integ array road road ui vi timei mean road intersect ui vi take timei minut travel you way travel intersect intersect shortest amount time return number way arriv destin shortest amount time sinc answer larg return modulo
1176
find uniqu binari string given array string num uniqu binari string length return binari string length num if multipl answer return
1177
minim differ between target chosen element you integ matrix mat integ target choos integ row matrix absolut differ target sum chosen element minim return minimum absolut differ the absolut differ number absolut
1178
find kth largest integ array you array string num integ each string num repres integ lead zero return string repres kth largest integ num note duplic number count distinctli for num largest integ largest integ largest integ
1179
minimum number work session finish task there task assign the task time repres integ array task length ith task take task hour finish a work session work sessiontim consecut hour break you finish task satisfi condit if start task work session complet work session you start task immedi finish previou you complet task order given task sessiontim return minimum number work session need finish task condit the test gener sessiontim greater equal maximum element task
1180
median two sort array given sort array num num size return median sort array the run time complex o log
1181
regular express match given input string pattern implement regular express match support match singl charact match preced element the match cover entir input string partial
1182
merg sort list you array link list list link list sort ascend order merg link list sort link list return
1183
revers node group given link list revers node link list time return modifi list posit integ equal length link list if number node multipl left node end remain you alter valu list node node chang
1184
substr concaten all word you string array string word length return start indic substr concaten word word order interven charact you return answer order
1185
longest valid parenthes given string charact find length longest valid form parenthes substr
1186
sudoku solver write program solv sudoku puzzl fill empti cell a sudoku solut satisfi rule each digit occur row each digit occur column each digit occur box grid the charact empti cell
1187
first miss posit given unsort integ array num return smallest miss posit integ you implement algorithm run o time constant extra space
1188
trap rain water given neg integ repres elev map width bar comput water trap rain
1189
wildcard match given input string pattern implement wildcard pattern match support match singl charact match sequenc charact includ empti sequenc the match cover entir input string partial
1190
n queen the queen puzzl problem place queen chessboard queen attack given integ return distinct solut queen puzzl you return answer order each solut distinct board configur queen placement q queen empti space
1191
n queen ii the queen puzzl problem place queen chessboard queen attack given integ return number distinct solut queen puzzl
1192
permut sequenc the set total uniqu permut by list label permut order sequenc given return kth permut sequenc
1193
valid number a valid number split compon order a decim number integ option an e integ a decim number split compon order option a sign charact one format one digit dot one digit dot digit a dot digit an integ split compon order option a sign charact one digit for valid number e valid number abc given string return true valid number
1194
text justif given array string word width maxwidth format text line maxwidth charact fulli left justifi you pack word greedi approach pack word line pad extra space line maxwidth charact extra space word distribut evenli if number space line divid evenli word empti slot left assign space slot for line text left justifi extra space insert word note a word defin charact sequenc consist space charact each word length guarante greater exceed maxwidth the input array word word
1195
edit distanc given string word word return minimum number oper requir convert word word you oper permit word insert charact delet charact replac charact
1196
minimum window substr given string length return minimum window substr charact includ duplic includ window if substr return empti string the testcas gener answer uniqu a substr contigu sequenc charact string
1197
largest rectangl histogram given array integ height repres histogram bar height width bar return area largest rectangl histogram
1198
maxim rectangl given row col binari matrix fill find largest rectangl return area
1199
scrambl string we scrambl string string algorithm if length string stop if length string gt split string empti substr random index string divid randomli decid swap substr order step appli step recurs substr given string length return true scrambl string return fals
1200
distinct subsequ given string return number distinct subsequ equal a string subsequ string form origin string delet charact disturb remain charact rel posit ace subsequ abcd aec it guarante answer fit bit sign integ
1201
best time buy sell stock iii you array price price price stock ith day find maximum profit achiev you complet transact note you engag multipl transact simultan sell stock buy
1202
binari tree maximum path sum a path binari tree sequenc node pair adjac node sequenc edg connect a node sequenc note path pass root the path sum path sum node valu path given root binari tree return maximum path sum path
1203
word ladder ii a transform sequenc word beginword word endword dictionari wordlist sequenc word beginword gt gt gt gt sk everi adjac pair word differ singl letter everi si lt lt wordlist note beginword wordlist sk endword given word beginword endword dictionari wordlist return shortest transform sequenc beginword endword empti list sequenc exist each sequenc return list word beginword sk
1204
word ladder a transform sequenc word beginword word endword dictionari wordlist sequenc word beginword gt gt gt gt sk everi adjac pair word differ singl letter everi si lt lt wordlist note beginword wordlist sk endword given word beginword endword dictionari wordlist return number word shortest transform sequenc beginword endword sequenc exist
1205
palindrom partit ii given string partit substr partit palindrom return minimum cut need palindrom partit
1206
candi there children stand line each child assign rate integ array rate you give candi children subject requir each child candi children higher rate candi neighbor return minimum number candi distribut candi children
1207
word break ii given string dictionari string worddict add space construct sentenc word valid dictionari word return sentenc order note word dictionari reus multipl time segment
1208
max point line given array point point xi yi repres point x y plane return maximum number point lie straight line
1209
find minimum rotat sort array ii suppos array length sort ascend order rotat time for array num rotat time rotat time notic rotat array time result array given sort rotat array num duplic return minimum element array you decreas oper step
1210
maximum gap given integ array num return maximum differ success element sort form if array element return you write algorithm run linear time linear extra space
1211
dungeon game the demon captur princess imprison bottom corner dungeon the dungeon consist room laid d grid our valiant knight initi posit top left room fight dungeon rescu princess the knight initi health point repres posit integ if point health point drop die immedi some room guard demon repres neg integ knight lose health enter room room empti repres magic orb increas knight health repres posit integ to reach princess quickli knight decid move rightward downward step return knight minimum initi health rescu princess note room threat power up room knight enter bottom room princess imprison
1212
best time buy sell stock iv you integ array price price price stock ith day integ find maximum profit achiev you complet transact note you engag multipl transact simultan sell stock buy
1213
word search ii given board charact list string word return word board each word construct letter sequenti adjac cell adjac cell horizont vertic neighbor the letter cell word
1214
shortest palindrom you string you convert palindrom ad charact front return shortest palindrom find perform transform
1215
the skylin problem a citi skylin outer contour silhouett form build citi view distanc given locat height build return skylin form build collect the geometr inform build array build build lefti righti heighti lefti coordin left edg ith build righti coordin edg ith build heighti height ith build you assum build perfect rectangl ground absolut flat surfac height the skylin repres list key point sort coordin form each key point left endpoint horizont segment skylin point list coordin mark skylin termin rightmost build end ani ground leftmost rightmost build part skylin contour note there consecut horizont line equal height output skylin for instanc accept line height merg final output
1216
basic calcul given string repres valid express implement basic calcul evalu return result evalu note you allow built function evalu string mathemat express eval
1217
number digit one given integ count total number digit appear neg integ equal
1218
slide window maximum you array integ num slide window size move left array you number window each time slide window move posit return max slide window
1219
integ english word convert neg integ num english word represent
1220
express add oper given string num digit integ target return possibl add binari oper digit num result express evalu target
1221
find median data stream the median middl order integ list if size list middl median middl valu for arr median for arr median implement medianfind class medianfind initi medianfind object void addnum int num add integ num data stream data structur doubl findmedian return median element answer actual answer accept
1222
serial deseri binari tree serial process convert data structur object sequenc bit store file memori buffer transmit network connect link reconstruct comput environ design algorithm serial deseri binari tree there restrict serial deseri algorithm work you ensur binari tree serial string string deseri origin tree structur clarif the input output format leetcod serial binari tree you necessarili follow format creativ approach
1223
remov invalid parenthes given string parenthes letter remov minimum number invalid parenthes make input string valid return result you return answer order
1224
burst balloon you balloon index each balloon paint number repres array num you ask burst balloon if burst ith balloon num num num coin if bound array treat balloon paint return maximum coin collect burst balloon wise
1225
count smaller number after self you integ array num return count array the count array properti count number smaller element num
1226
creat maximum number you integ array num num length num num repres digit number you integ creat maximum number length lt digit number the rel order digit array preserv return array digit repres answer
1227
count rang sum given integ array num integ lower upper return number rang sum lie lower upper inclus rang sum s defin sum element num indic inclus lt
1228
longest increas path matrix given integ matrix return length longest increas path matrix from cell move direct left you move diagon move boundari wrap allow
1229
patch array given sort integ array num integ add patch element array number rang inclus form sum element array return minimum number patch requir
1230
self cross you array integ distanc you start point x y plane move distanc meter north distanc meter west distanc meter south distanc meter east in word move direct counter clockwis return true path cross fals
1231
palindrom pair given list uniqu word return pair distinct indic list concaten word word word palindrom
1232
data stream disjoint interv given data stream input neg integ summar number list disjoint interv implement summaryrang class summaryrang initi object empti stream void addnum int val add integ val stream int getinterv return summari integ stream list disjoint interv starti endi
1233
russian doll envelop you d array integ envelop envelop wi repres width height envelop one envelop fit width height envelop greater envelop width height return maximum number envelop russian doll put insid note you rotat envelop
1234
max sum rectangl no larger than k given matrix matrix integ return max sum rectangl matrix sum larger it guarante rectangl sum larger
1235
insert delet getrandom o duplic allow implement randomizedcollect class randomizedcollect initi randomizedcollect object bool insert int val insert item val multiset present return true item present fals bool remov int val remov item val multiset present return true item present fals note val multipl occurr multiset remov int getrandom return random element current multiset element guarante element exist method call the probabl element return linearli relat number valu multiset you implement function class function work averag o time complex
1236
perfect rectangl given array rectangl rectangl xi yi ai bi repres axi align rectangl the bottom left point rectangl xi yi top point ai bi return true rectangl form exact cover rectangular region
1237
frog jump a frog cross river the river divid number unit unit exist stone the frog jump stone jump water given list stone posit unit sort ascend order determin frog cross river land stone initi frog stone assum jump unit if frog jump unit jump unit the frog jump forward direct
1238
trap rain water ii given integ matrix heightmap repres height unit cell d elev map return volum water trap rain
1239
split array largest sum given array num consist neg integ integ split array empti continu subarray write algorithm minim largest sum subarray
1240
strong password checker a password consid strong condit met it charact charact it lowercas letter uppercas letter digit it repeat charact row aaa weak aa strong assum condit met given string password return minimum number step requir make password strong password strong return in step insert charact password delet charact password replac charact password charact
1241
all o data structur design data structur store string count abil return string minimum maximum count implement allon class allon initi object data structur string key increment count string key if key exist data structur insert count dec string key decrement count string key if count key decrement remov data structur it guarante key exist data structur decrement getmaxkey return key maxim count if element exist return empti string getminkey return key minimum count if element exist return empti string
1242
k smallest lexicograph order given integ return kth lexicograph smallest integ rang
1243
arithmet slice ii subsequ given integ array num return number arithmet subsequ num a sequenc number call arithmet consist element differ consecut element for arithmet sequenc for arithmet sequenc a subsequ array sequenc form remov element possibl array for subsequ the test case gener answer fit bit integ
1244
poor pig there bucket bucket liquid bucket poison to figur poison feed number poor pig liquid die unfortun minutestotest minut determin bucket poison you feed pig step choos live pig feed for pig choos bucket feed the pig consum chosen bucket simultan time wait minutestodi minut you feed pig time after minutestodi minut pass pig fed poison bucket die surviv repeat process run time given bucket minutestodi minutestotest return minimum number pig need figur bucket poison allot time
1245
lfu cach design implement data structur least frequent use lfu cach implement lfucach class lfucach int capac initi object capac data structur int int key get key key exist cach otherwis return void put int key int updat key present insert key present when cach reach capac invalid remov frequent key insert item for problem tie key frequenc recent key invalid to determin frequent key counter maintain key cach the key smallest counter frequent key when key insert cach counter set due put oper the counter key cach increment put oper call the function put run o averag time complex
1246
count the repetit we defin str string str consist string concaten time for str abc abcabcabc we defin string obtain string remov charact for abc obtain abdbec base definit remov bold underlin charact you string integ you string str str return maximum integ str str obtain str
1247
concaten word given array string word duplic return concaten word list word a concaten word defin string compris shorter word array
1248
largest palindrom product given integ return largest palindrom integ repres product digit integ sinc answer larg return modulo
1249
slide window median the median middl order integ list if size list middl so median middl valu for exampl arr median for exampl arr median you integ array num integ there slide window size move left array you number window each time slide window move posit return median array window origin array answer actual accept
1250
smallest good base given integ repres string return smallest good base we call gt good base digit base
1251
zuma game you play variat game zuma in variat zuma singl row color ball board ball color red r yellow y blue b green g white w you color ball hand your goal clear ball board on turn pick ball hand insert ball row end row if group consecut ball color remov group ball board if remov group color form continu remov group left if ball board win game repeat process win ball hand given string board repres row ball board string hand repres ball hand return minimum number ball insert clear ball board if clear ball board ball hand return
1252
revers pair given integ array num return number revers pair array a revers pair pair lt lt lt num length num gt num
1253
ipo suppos leetcod start ipo in order sell good price share ventur capit leetcod work project increas capit ipo sinc limit resourc finish distinct project ipo help leetcod design maxim total capit finish distinct project you project ith project pure profit profit minimum capit capit need start initi capit when finish project obtain pure profit profit ad total capit pick list distinct project project maxim final capit return final maxim capit the answer guarante fit bit sign integ
1254
freedom trail in video game fallout quest road freedom requir player reach metal dial call freedom trail ring dial spell specif keyword open door given string ring repres code engrav outer ring string key repres keyword spell return minimum number step spell charact keyword initi charact ring align direct you spell charact key rotat ring clockwis anticlockwis make charact string key align direct press center button at stage rotat ring spell key charact key you rotat ring clockwis anticlockwis place count step the final purpos rotat align ring charact direct charact equal key if charact key align direct press center button spell count step after press begin spell charact key stage otherwis finish spell
1255
super wash machin you super wash machin line initi wash machin dress empti for move choos lt lt wash machin pass dress wash machin adjac wash machin time given integ array machin repres number dress wash machin left line return minimum number move make wash machin number dress if return
1256
remov box you box color repres posit number you experi round remov box box left each time choos continu box color compos box gt remov point return maximum point
1257
student attend record ii an attend record student repres string charact signifi student absent late present day the record charact a absent l late p present ani student elig attend award meet criteria the student absent a strictli fewer day total the student late l consecut day given integ return number attend record length make student elig attend award the answer larg return modulo
1258
find closest palindrom given string repres integ return closest integ includ palindrom if tie return smaller the closest defin absolut differ minim integ
1259
erect fenc you array tree tree xi yi repres locat tree garden you ask fenc entir garden minimum length rope expens the garden fenc tree enclos return coordin tree locat fenc perimet
1260
tag valid given string repres code snippet implement tag valid pars code return valid a code snippet valid rule hold the code wrap valid close tag otherwis code invalid a close tag necessarili valid format lt tag name gt tag content lt tag name gt among lt tag name gt start tag lt tag name gt end tag the tag name start end tag a close tag valid tag name tag content valid a valid tag name upper case letter length rang otherwis tag name invalid a valid tag content valid close tag cdata charact note except unmatch lt unmatch start end tag unmatch close tag invalid tag name otherwis tag content invalid a start tag unmatch end tag exist tag name vice versa howev issu unbalanc tag nest a lt unmatch find subsequ gt and find lt lt subsequ charact gt pars tag name necessarili valid the cdata format lt cdata cdata content gt the rang cdata content defin charact lt cdata subsequ gt cdata content charact the function cdata forbid valid pars cdata content charact pars tag matter valid invalid treat regular charact
1261
non neg integ consecut one given posit integ return number integ rang binari represent consecut
1262
k invers pair array for integ array num invers pair pair integ lt lt lt num length num gt num given integ return number array consist number invers pair sinc answer huge return modulo
1263
cours schedul iii there onlin cours number you array cours cours durationi lastdayi ith continu durationi day finish lastdayi you start st day cours simultan return maximum number cours
1264
smallest rang cover element k list you list sort integ decreas order find smallest rang includ number list we defin rang smaller rang lt lt
1265
decod way ii a messag letter a z encod number map a gt b gt z gt to decod encod messag digit group map back letter revers map multipl way for map aajf group kjf group note group invalid map f in addit map encod messag charact repres digit exclud for encod messag repres encod messag decod equival decod encod messag repres given string consist digit charact return number way decod sinc answer larg return modulo
1266
strang printer there strang printer special properti the printer print sequenc charact time at turn printer print charact start end place cover origin exist charact given string return minimum number turn printer need print
1267
kth smallest number multipl tabl nearli multipl tabl the multipl tabl size integ matrix mat mat index given integ return kth smallest element multipl tabl
1268
cut off tree golf event you ask cut tree forest golf event the forest repres matrix in matrix mean cell walk repres empti cell walk a number greater repres tree cell walk number tree height in step walk direct north east south west if stand cell tree choos cut you cut tree order shortest tallest when cut tree cell empti cell start point return minimum step walk cut tree if cut tree return you guarante tree height tree cut
1269
game you integ array card length you card number rang you arrang number card mathemat express oper parenthes you restrict rule the divis oper repres real divis integ divis for everi oper number in unari oper for card express allow you concaten number for card express valid return true express evalu fals
1270
redund connect ii in problem root tree direct graph node root node descend node node root node parent the input direct graph start root tree node distinct valu addit direct edg ad the ad edg vertic chosen edg exist the result graph d array edg each element edg pair ui vi repres direct edg connect node ui vi ui child vi return edg remov result graph root tree node if multipl answer return answer occur d array
1271
maximum sum non overlap subarray given integ array num integ find overlap subarray length maximum sum return return result list indic repres start posit interv index if multipl answer return lexicograph smallest
1272
sticker spell word we type sticker each sticker lowercas english word you spell string target cut individu letter collect sticker rearrang you sticker infinit quantiti sticker return minimum number sticker spell target if task imposs return note in test case word chosen randomli common us english word target chosen concaten random word
1273
fall squar there squar drop x axi d plane you d integ array posit posit lefti sidelengthi repres ith squar side length sidelengthi drop left edg align x coordin lefti each squar drop time height land squar it fall downward neg y direct land top side squar x axi a squar brush left side squar count land onc land freez place move after squar drop record height current tallest stack squar return integ array an an repres height drop ith squar
1274
random pick blacklist you integ array uniqu integ blacklist design algorithm pick random integ rang blacklist ani integ mention rang blacklist equal return optim algorithm minim call built random function languag implement solut class solut int int blacklist initi object integ blacklist integ blacklist int pick return random integ rang blacklist all integ equal return
1275
rang modul a rang modul modul track rang number design data structur track rang repres half open interv queri a half open interv left denot real number left lt lt implement rangemodul class rangemodul initi object data structur void addrang int left int add half open interv left track real number interv ad interv partial overlap track number add number interv left track boolean queryrang int left int return true real number interv left track fals void removerang int left int stop track real number track half open interv left
1276
find k smallest pair distanc the distanc pair integ defin absolut differ given integ array num integ return kth smallest distanc pair num num lt lt lt num length
1277
number atom given string formula repres chemic formula return count atom the atom element start uppercas charact lowercas letter repres one digit repres element count follow count greater if count digit follow for h o h o h o imposs two formula concaten produc formula for h o he mg formula a formula parenthes count option ad formula for h o h o formula return count element string form sort order count count sort order count count
1278
count differ palindrom subsequ given string return number empti palindrom subsequ sinc answer larg return modulo a subsequ string obtain delet charact string a sequenc palindrom equal sequenc revers two sequenc ai bi
1279
my calendar iii a book event empti intersect time common event you event start end event return integ repres maximum book previou event implement mycalendarthre class mycalendarthre initi object int book int start int end return integ repres largest integ exist book calendar
1280
pars lisp express you string express repres lisp express return integ the syntax express an express integ express add express mult express assign variabl express evalu singl integ an integ posit neg a express take form vn en expr string pair altern variabl express mean variabl assign express variabl assign express sequenti express express expr an add express take form add add string add express result addit evalu evalu a mult express take form mult mult string mult express result multipl evalu evalu for question smaller subset variabl name a variabl start lowercas letter lowercas letter digit addit conveni name add mult protect variabl name final concept scope when express variabl evalu context evalu innermost scope term parenthes check variabl outer scope check sequenti it guarante express legal pleas exampl detail scope
1281
cherri pickup you grid repres field cherri cell integ mean cell empti pass mean cell cherri pick pass mean cell thorn block return maximum number cherri collect rule start posit reach move valid path cell cell after reach return move left valid path cell when pass path cell cherri pick cell empti cell if valid path cherri collect
1282
prefix suffix search design special dictionari word search word prefix suffix implement wordfilt class wordfilt string word initi object word dictionari string prefix string suffix return index word dictionari prefix prefix suffix suffix if valid index return largest if word dictionari return
1283
contain viru a viru spread rapidli task quarantin infect area instal wall the world model binari grid isinfect isinfect repres uninfect cell isinfect repres cell contamin viru a wall wall instal direct adjac cell share boundari everi night viru spread neighbor cell direct block wall resourc limit each day instal wall region affect area continu block infect cell threaten uninfect cell night there tie return number wall quarantin infect region if world fulli infect return number wall
1284
crack safe there safe protect password the password sequenc digit digit rang the safe peculiar check password when enter sequenc check recent digit enter time type digit for correct password enter after type recent digit incorrect after type recent digit incorrect after type recent digit incorrect after type recent digit incorrect after type recent digit incorrect after type recent digit correct safe unlock return string minimum length unlock safe point enter
1285
set intersect size at least two an integ interv integ lt set consecut integ includ find minimum size set s integ interv a interv intersect s a size
1286
special binari string special binari string binari string properti the number equal number everi prefix binari string you special binari string a move consist choos consecut empti special substr swap two string consecut charact string index charact string return lexicograph largest result string appli mention oper string
1287
coupl hold hand there coupl sit seat arrang row hold hand the peopl seat repres integ array row row id person sit ith seat the coupl number order coupl coupl coupl return minimum number swap coupl sit side side a swap consist choos peopl stand switch seat
1288
max chunk to make sort ii you integ array arr we split arr number chunk partit individu sort chunk after concaten result equal sort array return largest number chunk make sort array
1289
basic calcul iv given express express evalu map term evalvar evalint return list token repres simplifi express an express altern chunk symbol space separ chunk symbol a chunk express parenthes variabl neg integ a variabl string lowercas letter includ digit note variabl multipl letter note variabl lead coeffici unari oper express evalu usual order bracket multipl addit subtract for express answer the format output for term free variabl coeffici write free variabl term sort order lexicograph for write term term degre equal number free variabl multipli count multipl we write largest degre term answer break tie lexicograph order ignor lead coeffici term for degre the lead coeffici term directli left asterisk separ variabl exist a lead coeffici print an format answer term includ constant term coeffici includ for express output
1290
slide puzzl on board tile label empti squar repres a move consist choos direct adjac number swap the state board solv board given puzzl board board return number move requir state board solv if imposs state board solv return
1291
swim rise water you integ matrix grid grid repres elev point the rain start fall at time depth water you swim squar direct adjac squar elev squar individu you swim infinit distanc time of stay boundari grid swim return time reach bottom squar start top left squar
1292
reach point given integ sx sy tx ty return true convert point sx sy point tx ty oper fals the allow oper point convert
1293
transform chessboard you binari grid board in move swap row column return minimum number move transform board chessboard board if task imposs return a chessboard board board direct adjac
1294
k smallest prime fraction you sort integ array arr prime number integ arr uniqu you integ for lt lt lt arr length fraction arr arr return kth smallest fraction consid return answer array integ size answer arr answer arr
1295
preimag size factori zero function let number zero end recal convent for zero end zero end given integ return number neg integ properti
1296
smallest rotat highest score you array num you rotat neg integ array num num num num length num num num afterward entri equal index worth point for num rotat thi worth point gt point gt point lt point lt point lt point return rotat index correspond highest score achiev rotat num if multipl answer return smallest index
1297
minimum swap to make sequenc increas you integ array length num num in oper allow swap num num for num num swap element obtain num num return minimum number need oper make num num strictli increas the test case gener input make an array arr strictli increas arr lt arr lt arr lt lt arr arr length
1298
brick fall when hit you binari grid repres brick repres empti space a brick stabl it directli connect top grid at brick adjac cell stabl you array hit sequenc erasur appli each time eras brick locat hit rowi coli the brick locat exist disappear some brick longer stabl erasur fall onc brick fall immedi eras grid land stabl brick return array result result number brick fall ith erasur appli note erasur refer locat brick brick drop
1299
split array with same averag you integ array num you move element num array a b a b empti averag a averag b return true achiev fals note array arr averag arr sum element arr length arr
1300
chalkboard xor game you array integ num repres number written chalkboard alic bob turn eras number chalkboard alic start if eras number bitwis xor element chalkboard player lose the bitwis xor element element bitwis xor element also player start turn bitwis xor element chalkboard equal player win return true alic win game assum player play optim
1301
bu rout you array rout repres bu rout rout bu rout ith bu repeat forev for rout mean bu travel sequenc gt gt gt gt gt gt gt forev you start bu stop sourc you bu initi bu stop target you travel bu stop buse return number buse travel sourc target return
1302
race car your car start posit speed infinit number line your car neg posit your car drive automat sequenc instruct a acceler r revers when instruct a car posit speed speed when instruct r car if speed posit speed speed your posit stay for command aar car posit gt gt gt speed gt gt gt given target posit target return length shortest sequenc instruct
1303
make a larg island you binari matrix grid you allow chang return size largest island grid appli oper an island direct connect group
1304
count uniqu charact all substr given string let defin function countuniquechar return number uniqu charact for leetcod l t c o d uniqu charact countuniquechar given string return sum countuniquechar substr notic substr repeat case count repeat
1305
consecut number sum given integ return number way write sum consecut posit integ
1306
sum distanc tree there undirect connect tree node label edg you integ array edg edg ai bi edg node ai bi tree return array answer length answer sum distanc ith node tree node
1307
similar string group two string x y similar swap letter posit x equal y also string x y similar equal for tar rat similar swap posit rat art similar star similar tar rat art togeth form connect group similar tar rat art star notic tar art group similar formal group word group similar word group we list str string string str anagram string str how group
1308
guess word thi interact problem you array uniqu string wordlist wordlist letter long word list chosen secret you call master guess word guess word the guess word type string origin list lowercas letter thi function return integ type repres number exact match posit guess secret word also guess wordlist return for test case guess guess word at end number call made fewer call master guess guess secret pass test case
1309
shortest path visit all node you undirect connect graph node label you array graph graph list node connect node edg return length shortest path visit node you start stop node revisit node multipl time reus edg
1310
rectangl area ii we list axi align rectangl each rectangl xi yi xi yi xi yi coordin bottom left corner xi yi coordin top corner ith rectangl find total area cover rectangl plane sinc answer larg return modulo
1311
k similar string string similar neg integ swap posit letter time result string equal given anagram return smallest similar
1312
minimum cost hire k worker there worker you integ array qualiti wage qualiti qualiti ith worker wage minimum wage expect ith worker we hire worker form paid group to hire group worker pay rule everi worker paid group paid ratio qualiti compar worker paid group everi worker paid group paid minimum wage expect given integ return amount money need form paid group satisfi condit answer actual answer accept
1313
shortest subarray sum least k given integ array num integ return length shortest empti subarray num sum if subarray return a subarray contigu part array
1314
shortest path get all key you grid grid empti cell wall start point lowercas letter repres key uppercas letter repres lock you start start point move consist walk space cardin direct you walk grid walk wall if walk key pick walk lock key for lt lt lowercas uppercas letter letter english alphabet grid thi mean key lock lock key letter repres key lock chosen order english alphabet return lowest number move acquir key if imposs return
1315
minimum number refuel stop a car travel start posit destin target mile east start posit there ga station the ga station repres array station station positioni fueli ith ga station positioni mile east start posit fueli liter ga the car start infinit tank ga initi startfuel liter fuel it liter ga mile drive when car reach ga station stop refuel transfer ga station car return minimum number refuel stop car make order reach destin if reach destin return note car reach ga station fuel left car refuel if car reach destin fuel left consid arriv
1316
nth magic number a posit integ magic divis given integ return nth magic number sinc answer larg return modulo
1317
profit scheme there group member list crime commit the ith crime gener profit requir group member particip if member particip crime member particip crime let call profit scheme subset crime gener minprofit profit total number member particip subset crime return number scheme chosen sinc answer larg return modulo
1318
reachabl node in subdivid graph you undirect graph origin graph node label you decid subdivid edg graph chain node number node vari edg the graph d array edg edg ui vi cnti edg node ui vi origin graph cnti total number node subdivid edg note cnti mean subdivid edg to subdivid edg ui vi replac cnti edg cnti node the node xcnti edg ui xcnti xcnti xcnti vi in graph node reachabl node node reachabl distanc maxmov given origin graph maxmov return number node reachabl node graph
1319
super egg drop you ident egg access build floor label you exist floor lt lt egg drop floor higher break egg drop floor break each move unbroken egg drop floor lt lt if egg break longer howev egg break reus futur move return minimum number move determin certainti
1320
sum subsequ width the width sequenc differ maximum minimum element sequenc given array integ num return sum width empti subsequ num sinc answer larg return modulo a subsequ sequenc deriv array delet element chang order remain element for subsequ array
1321
maximum frequenc stack design stack data structur push element stack pop frequent element stack implement freqstack class freqstack construct empti frequenc stack void push int val push integ val top stack int pop remov return frequent element stack if tie frequent element element closest stack top remov return
1322
orderli queue you string integ you choos letter append end string return lexicograph smallest string appli mention step number move
1323
number at most n given digit set given array digit sort decreas order you write number digit time for digit write number return number posit integ gener equal integ
1324
valid permut di sequenc you string length d mean decreas i mean increas a permut perm integ integ rang call valid permut valid if d perm gt perm if i perm lt perm return number valid permut perm sinc answer larg return modulo
1325
super palindrom let posit integ super palindrom palindrom squar palindrom given posit integ left repres string return number super palindrom integ inclus rang left
1326
cat mous a game undirect graph play player mous cat altern turn the graph graph list node ab edg graph the mous start node cat start node hole node dure player turn travel edg graph meet for mous node travel node graph addit allow cat travel hole node then game end way if cat occupi node mous cat win if mous reach hole mous win if posit repeat player posit previou turn player turn move game draw given graph assum player play optim return mous win game cat win game game draw
1327
number music playlist your music player song you listen goal song necessarili trip to avoid boredom creat playlist everi song play a song play song play given goal return number playlist creat sinc answer larg return modulo
1328
minim malwar spread you network node repres adjac matrix graph ith node directli connect jth node graph some node initi initi infect malwar whenev node directli connect node infect malwar node infect malwar thi spread malwar continu node infect manner suppos m initi final number node infect malwar entir network spread malwar stop we remov node initi return node remov minim m initi if multipl node remov minim m initi return node smallest index note node remov initi list infect node infect due malwar spread
1329
three equal part you array arr consist zero divid array empti part part repres binari if return lt arr arr arr part arr arr arr part arr arr arr arr length part all part equal binari valu if return note entir part binari repres for repres decim also lead zero allow repres
1330
minim malwar spread ii you network node repres adjac matrix graph ith node directli connect jth node graph some node initi initi infect malwar whenev node directli connect node infect malwar node infect malwar thi spread malwar continu node infect manner suppos m initi final number node infect malwar entir network spread malwar stop we remov node initi complet remov connect node node return node remov minim m initi if multipl node remov minim m initi return node smallest index
1331
stamp the sequenc you string stamp target initi string length target length in turn place stamp replac letter letter stamp for stamp abc target abcba initi in turn place stamp index obtain abc place stamp index obtain abc place stamp index obtain abc note stamp fulli contain boundari order stamp place stamp index we convert target target length turn return array index left letter stamp turn if obtain target target length turn return empti array
1332
distinct subsequ ii given string return number distinct empti subsequ sinc answer larg return modulo a subsequ string string form origin string delet charact disturb rel posit remain charact ace subsequ abcd aec
1333
find shortest superstr given array string word return smallest string string word substr if multipl valid string smallest length return you assum string word substr string word
1334
largest compon size common factor you integ array uniqu posit integ num consid graph there num length node label num num num length there undirect edg num num num num share common factor greater return size largest connect compon graph
1335
tallest billboard you instal billboard largest height the billboard steel support side each steel support equal height you collect rod weld for rod length weld make support length return largest height billboard instal if support billboard return
1336
delet column make sort iii you array string str length we choos delet indic delet charact indic string for str abcdef uvwxyz delet indic final array delet bef vyz suppos chose set delet indic answer delet final array string row lexicograph order str lt str lt lt str str length str lt str lt lt str str length return minimum answer length
1337
least oper express number given singl posit integ write express form op op op oper op op addit subtract multipl divis for write when write express adher convent the divis oper return ration number there parenthes we usual order oper multipl divis happen addit subtract it allow unari negat oper for valid express subtract negat we write express number oper express equal target return number oper
1338
binari tree camera you root binari tree we instal camera tree node camera node monitor children return minimum number camera need monitor node tree
1339
equal ration number given string repres neg ration number return true repres number the string parenthes denot repeat part ration number a ration number repres part lt integerpart gt lt nonrepeatingpart gt lt repeatingpart gt the number repres way lt integerpart gt for lt integerpart gt lt gt lt nonrepeatingpart gt for lt integerpart gt lt gt lt nonrepeatingpart gt lt gt lt repeatingpart gt lt gt for the repeat portion decim expans convent denot pair round bracket for
1340
odd even jump you integ array arr from start index make seri jump the st jump seri call odd number jump jump seri call number jump note jump number indic you jump forward index index lt dure odd number jump jump jump index arr lt arr arr smallest if multipl indic jump smallest index dure number jump jump jump index arr gt arr arr largest if multipl indic jump smallest index it case index legal jump a start index good start index reach end array index arr length jump number time possibl return number good start indic
1341
uniqu path iii you integ array grid grid repres start squar there start squar repres end squar there end squar repres empti squar walk repres obstacl walk return number direct walk start squar end squar walk obstacl squar
1342
tripl bitwis and equal to zero given integ array num return number and tripl an and tripl tripl indic lt lt num length lt lt num length lt lt num length num amp num amp num amp repres bitwis and oper
1343
vertic order travers binari tree given root binari tree calcul vertic order travers binari tree for node posit row col left children posit row col row col the root tree the vertic order travers binari tree list top bottom order column index start leftmost column end rightmost column there multipl node row column in case sort node valu return vertic order travers binari tree
1344
subarray k differ integ given integ array num integ return number good subarray num a good array array number integ array for integ a subarray contigu part array
1345
minimum number k consecut bit flip you binari array num integ a bit flip choos subarray length num simultan chang subarray subarray return minimum number bit flip requir array if return a subarray contigu part array
1346
number squar array an array squar sum pair adjac element perfect squar given integ array num return number permut num squar two permut perm perm index perm perm
1347
minimum cost merg stone there pile stone arrang row the ith pile stone stone a move consist merg consecut pile pile cost move equal total number stone pile return minimum cost merg pile stone pile if imposs return
1348
grid illumin there d grid size cell grid lamp initi turn you d array lamp posit lamp lamp rowi coli lamp grid rowi coli turn even lamp list turn when lamp turn illumin cell cell row column diagon you d array queri queri rowj colj for jth queri determin grid rowj colj illumin after answer jth queri turn lamp grid rowj colj adjac lamp exist a lamp adjac cell share side corner grid rowj colj return array integ an an cell jth queri illumin lamp
1349
number with repeat digit given integ return number posit integ rang repeat digit
1350
recov tree from preorder travers we run preorder depth search df root binari tree at node travers output d dash d depth node output node if depth node d depth child d the depth root node if node child child guarante left child given output travers travers recov tree return root
1351
stream charact design algorithm accept stream charact check suffix charact string array string word for word abc xyz stream ad charact algorithm detect suffix xyz charact axyz match xyz word implement streamcheck class streamcheck string word initi object string array word boolean queri char letter accept charact stream return true empti suffix stream form word word
1352
escap larg maze there million million grid xy plane coordin grid squar we start sourc sx sy squar reach target tx ty squar there array block squar block xi yi repres block squar coordin xi yi each move walk squar north east south west squar array block squar we allow walk grid return true reach target squar sourc squar sequenc valid move
1353
longest duplic substr given string duplic substr contigu substr occur time the occurr overlap return duplic substr longest length if duplic substr answer
1354
number submatric that sum target given matrix target return number empti submatric sum target a submatrix set cell matrix lt lt lt lt two submatric coordin
1355
shortest common supersequ given string str str return shortest string str str subsequ if multipl valid string return a string subsequ string delet number charact possibl result string
1356
find mountain array thi problem interact problem you recal array a mountain array a length gt there exist lt lt a length a lt a lt a lt a a gt a gt gt a a length given mountain array mountainarr return minimum index mountainarr index target if index doesn exist return you access mountain array directli you access array mountainarray interfac mountainarray return element array index index mountainarray length return length array submiss make call mountainarray judg wrong answer also solut attempt circumv judg result disqualif
1357
brace expans ii under grammar string repres set lowercas word let r expr denot set word express repres grammar understood simpl exampl singl letter repres singleton set word r r when comma delimit list express union possibl r r notic final set word when concaten express set concaten word word express word express r ac ad bc bd r abdfg abdfh abefg abefh acdfg acdfh acefg acefh formal rule grammar for lowercas letter r for express ek gt r r r for express r r r denot concaten denot cartesian product given express repres set word grammar return sort list word express repres
1358
pars a boolean express return result evalu boolean express repres string an express evalu true evalu fals expr evalu logic not express expr amp expr expr evalu logic and express expr expr expr expr evalu logic or express expr expr
1359
smallest suffici team in project list requir skill req skill list peopl the ith person peopl list skill person consid suffici team set peopl requir skill req skill person team skill we repres team index person for team repres peopl skill peopl peopl peopl return suffici team smallest size repres index person you return answer order it guarante answer exist
1360
longest chunk palindrom decomposit you string text you split substr subtext subtext subtextk subtexti empti string the concaten substr equal text subtext subtext subtextk text subtexti subtextk valid valu lt lt return largest
1361
onlin major element in subarray design data structur effici find major element subarray the major element subarray element occur threshold time subarray implement majoritycheck class majoritycheck int arr initi instanc class array arr int queri int left int int threshold return element subarray arr left occur threshold time element exist
1362
last substr lexicograph order given string return substr lexicograph order
1363
dinner plate stack you infinit number stack arrang row number left stack maximum capac implement dinnerpl class dinnerpl int capac initi object maximum capac stack capac void push int val push integ val leftmost stack size capac int pop return top rightmost empti stack remov stack return stack empti int popatstack int index return top stack index index remov stack return stack index empti
1364
number valid word each puzzl with respect puzzl string word valid condit satisfi word letter puzzl for letter word letter puzzl for puzzl abcdefg valid word face cabbag baggag invalid word beef includ base includ puzzl return array answer answer number word word list word valid respect puzzl puzzl
1365
make array strictli increas given integ array arr arr return minimum number oper possibl need make arr strictli increas in oper choos indic lt lt arr length lt lt arr length assign arr arr if make arr strictli increas return
1366
critic connect network there server number connect undirect server server connect form network connect ai bi repres connect server ai bi ani server reach server directli indirectli network a critic connect connect remov make server unabl reach server return critic connect network order
1367
sort item group respect depend there item belong group group group item belong equal item belong group the item group index a group item belong return sort list item the item belong group sort list there relat item beforeitem list item item sort array left item return solut solut return empti list solut
1368
design skiplist design skiplist built librari a skiplist data structur take o log time add eras search compar treap red black tree function perform code length skiplist compar short idea skiplist simpl link list for skiplist add the skiplist work artyom kalinin cc by sa wikimedia common you layer skiplist each layer sort link list with top layer add eras search faster o it proven averag time complex oper o log space complex o see skiplist http en wikipedia org wiki skip list implement skiplist class skiplist initi object skiplist bool search int target return true integ target exist skiplist fals void add int num insert num skiplist bool eras int num remov num skiplist return true if num exist skiplist return fals if exist multipl num valu remov fine note duplic exist skiplist code handl situat
1369
minimum move reach target rotat in grid snake span cell start move top left corner the grid empti cell repres zero block cell repres the snake reach lower corner in move snake move cell block cell thi move horizont vertic posit snake move cell block cell thi move horizont vertic posit snake rotat clockwis horizont posit cell empti in case snake move rotat counterclockwis vertic posit cell empti in case snake move return minimum number move reach target if reach target return
1370
count vowel permut given integ task count string length form rule each charact lower case vowel each vowel each vowel each vowel each vowel each vowel sinc answer larg return modulo
1371
dice roll simul a die simul gener random number roll you introduc constraint gener roll number rollmax index consecut time given array integ rollmax integ return number distinct sequenc obtain exact roll two sequenc consid element differ sinc answer larg return modulo
1372
maximum equal frequenc given array num posit integ return longest length array prefix num remov element prefix number appear number occurr if remov element remain element consid appear number number ocurr
1373
maximum profit job schedul we job job schedul starttim endtim obtain profit profit you starttim endtim profit array return maximum profit job subset overlap time rang if choos job end time x start job start time x
1374
tile rectangl fewest squar given rectangl size return minimum number integ side squar tile rectangl
1375
check if it is good array given array num posit integ your task select subset num multipli element integ add number the array good obtain sum array subset multiplicand return true array good return fals
1376
maximum score word form letter given list word list singl letter repeat score charact return maximum score valid set word form letter word time it charact letter letter score letter score score score
1377
minimum move move box their target locat a storekeep game player push box warehous target locat the game repres grid charact grid element wall floor box your task move box b target posit t rule the charact s repres player the player move left grid floor empti cell the charact repres floor mean free cell walk the charact repres wall mean obstacl imposs walk there box b target cell t grid the box move adjac free cell stand box move direct box thi push the player walk box return minimum number push move box target if reach target return
1378
number way stay same place after some step you pointer index array size arrlen at step move posit left posit array stay place the pointer array time given integ step arrlen return number way pointer index step step sinc answer larg return modulo
1379
palindrom partit iii you string lowercas letter integ you first chang charact lowercas english letter then divid empti disjoint substr substr palindrom return minim number charact chang divid string
1380
minimum number flip convert binari matrix zero matrix given binari matrix mat in step choos cell flip neighbor exist flip chang a pair cell call neighbor share edg return minimum number step requir convert mat matrix a binari matrix matrix cell equal a matrix matrix cell equal
1381
minimum fall path sum ii given integ matrix grid return minimum sum fall path shift a fall path shift choic element row grid element chosen adjac row column
1382
shortest path grid obstacl elimin you integ matrix grid cell empti obstacl you move left empti cell step return minimum number step walk upper left corner lower corner elimin obstacl if find walk return
1383
maximum candi you can get box given box box format statu candi key containedbox statu integ box open box close candi integ repres number candi box key array indic box open key box containedbox array indic box found box you start box initialbox array you candi open box key open box box find return maximum number candi rule
1384
number path max score you squar board charact you move board start bottom squar mark charact s you reach top left squar mark charact e the rest squar label numer charact obstacl x in move left left diagon obstacl return list integ integ maximum sum numer charact collect number path maximum sum modulo in case path return
1385
verbal arithmet puzzl given equat repres word left side result side you check equat solvabl rule each charact decod digit everi pair charact map digit each word result decod number lead zero sum number left side word equal number side result return true equat solvabl return fals
1386
minimum insert step make string palindrom given string in step insert charact index string return minimum number step make palindrom a palindrom string read backward forward
1387
distinct echo substr return number distinct empti substr text written concaten string written string
1388
minimum distanc type word use two finger you keyboard layout shown x y plane english uppercas letter locat coordin for letter a locat coordin letter b locat coordin letter p locat coordin letter z locat coordin given string word return minimum total distanc type string finger the distanc coordin note initi posit finger consid free count total distanc finger start letter letter
1389
minimum number tap open water garden there dimension garden axi the garden start point end point the length garden there tap locat point garden given integ integ array rang length rang index mean tap water area rang rang open return minimum number tap open water garden if garden water return
1390
revers subarray to maxim array valu you integ array num the array defin sum num num lt lt num length you allow select subarray array revers you perform oper find maximum final array
1391
minimum difficulti job schedul you schedul list job day job depend to work job finish job lt lt you finish task day the difficulti job schedul sum difficulti day day the difficulti day maximum difficulti job day given array integ jobdifficulti integ the difficulti job jobdifficulti return minimum difficulti job schedul if find schedul job return
1392
jump game v given array integ arr integ in step jump index index lt arr length lt lt gt lt lt in addit jump index index arr gt arr arr gt arr indic more formal min lt lt max you choos index array start jump return maximum number indic visit notic jump array time
1393
jump game iv given array integ arr initi posit index array in step jump index index lt arr length gt arr arr return minimum number step reach index array notic jump array time
1394
maximum student take exam given matrix seat repres seat distribut classroom if seat broken denot charact denot charact student answer sit left upper left upper answer student sit directli front return maximum number student exam cheat student seat good condit
1395
construct target array with multipl sum you array target integ from start array arr consist perform procedur sum element array choos index lt lt set arr index you repeat procedur time need return true construct target array arr return fals
1396
count all valid pickup deliveri option given order order consist pickup deliveri servic count valid pickup deliveri sequenc deliveri pickup sinc answer larg return modulo
1397
largest multipl three given integ array digit return largest multipl form concaten digit order sinc answer fit integ data type return answer string if answer return empti string
1398
minimum cost make least one valid path grid given grid each cell grid sign point cell visit cell the sign grid mean cell grid grid mean cell left grid grid mean lower cell grid grid mean upper cell grid grid notic invalid sign cell grid point grid you initi start upper left cell a valid path grid path start upper left cell end bottom cell sign grid the valid path doesn shortest you modifi sign cell cost you modifi sign cell time return minimum cost make grid valid path
1399
maximum sum bst binari tree given binari tree root return maximum sum key tree binari search tree bst assum bst defin the left subtre node node key node key the subtre node node key greater node key both left subtre binari search tree
1400
frog posit after t second given undirect tree consist vertic number a frog start jump vertex in frog jump current vertex unvisit vertex directli connect the frog jump back visit vertex in case frog jump vertic jump randomli probabl otherwis frog jump unvisit vertex jump forev vertex the edg undirect tree array edg edg ai bi mean exist edg connect vertic ai bi return probabl second frog vertex target
1401
maximum perform team you integ integ array speed effici length there engin number speed effici repres speed effici ith engin choos engin engin form team maximum perform the perform team sum engin speed multipli minimum effici engin return maximum perform team sinc answer huge number return modulo
1402
pizza with slice there pizza slice vari size friend slice pizza you pick pizza slice your friend alic pick slice anti clockwis direct pick your friend bob pick slice clockwis direct pick repeat slice pizza size pizza slice repres circular array slice clockwis direct return maximum sum slice size
1403
longest happi prefix a string call happi prefix empti prefix suffix exclud given string return longest happi prefix return empti string prefix exist
1404
find all good string given string size string evil return number good string a good string size alphabet greater equal alphabet smaller equal string evil substr sinc answer huge number return modulo
1405
reduc dish a chef collect data satisfact level dish chef cook dish unit time like time coeffici dish defin time cook dish includ previou dish multipli satisfact level time satisfact return maximum sum like time coeffici chef obtain dish prepar dish prepar order chef discard dish maximum
1406
stone game iii alic bob continu game pile stone there stone arrang row stone integ array stonevalu alic bob turn alic start on player turn player stone remain stone row the score player sum valu stone the score player initi the object game end highest score winner player highest score tie the game continu stone assum alic bob play optim return alic alic win bob bob win tie end game score
1407
number way paint n grid you grid size paint cell grid color red yellow green make adjac cell color cell share vertic horizont side color given number row grid return number way paint grid as answer grow larg answer comput modulo
1408
restor the array a program suppos print array integ the program forgot print whitespac array print string digit integ array rang lead zero array given string integ return number array print mention program sinc answer larg return modulo
1409
build array where you can find the maximum exactli k comparison given integ consid algorithm find maximum element array posit integ you build array arr properti arr integ lt arr lt lt lt after appli mention algorithm arr search cost equal return number way build array arr mention condit as answer grow larg answer comput modulo
1410
constrain subsequ sum given integ array num integ return maximum sum empti subsequ array consecut integ subsequ num num lt condit lt satisfi a subsequ array obtain delet number element array leav remain element origin order
1411
number way wear differ hat each other there peopl type hat label given list list integ hat hat list hat prefer person return number way peopl wear hat sinc answer larg return modulo
1412
find kth smallest sum matrix with sort row you matrix mat integ row sort decreas order you allow choos element row form array return kth smallest array sum array
1413
number way cut pizza given rectangular pizza repres row col matrix charact a appl empti cell integ you cut pizza piec cut for cut choos direct vertic horizont choos cut posit cell boundari cut pizza piec if cut pizza vertic give left part pizza person if cut pizza horizont give upper part pizza person give piec pizza person return number way cut pizza piec appl sinc answer huge number return modulo
1414
form largest integ with digit that add target given array integ cost integ target return maximum integ paint rule the cost paint digit cost index the total cost equal target integ digit sinc answer larg return string if paint integ condit return
1415
maximum number dart insid circular dartboard you larg squar wall circular dartboard wall you challeng throw dart board blindfold dart thrown wall repres array point d plane return maximum number point lie circular dartboard radiu
1416
max dot product two subsequ given array num num return maximum dot product empti subsequ num num length a subsequ array array form origin array delet charact disturb rel posit remain charact subsequ
1417
cherri pickup ii given row col matrix grid repres field cherri each cell grid repres number cherri collect you robot collect cherri robot locat top left corner robot locat top corner col grid return maximum number cherri collect robot rule from cell robot move cell when robot pass cell it pick cherri cell empti cell when robot stay cell take cherri both robot move grid moment both robot reach bottom row grid
1418
probabl two box have the same number distinct ball given ball distinct color you integ array ball size ball number ball color all ball shuffl uniformli random distribut ball box remain ball box pleas read explan care pleas note box consid for ball color box distribut consid distribut pleas read explan care we calcul probabl box number distinct ball
1419
paint hous iii there row hous small citi hous paint color label hous paint summer paint a neighborhood maxim group continu hous paint color for hous neighborhood given array hous matrix cost integ target hous color hous hous paint cost cost paint hous color return minimum cost paint remain hous target neighborhood if return
1420
alloc mailbox given array hous integ hous locat ith hous street task alloc mailbox street return minimum total distanc hous nearest mailbox the answer guarante fit bit sign integ
1421
kth ancestor tree node you tree node number form array ith node the root tree node find kth ancestor node the kth ancestor tree node kth node path node root node implement treeancestor class treeancestor int int initi object number node tree array int getkthancestor int node int return kth ancestor node node if ancestor return
1422
find critic pseudo critic edg minimum span tree given weight undirect connect graph vertic number array edg edg ai bi weighti repres bidirect weight edg node ai bi a minimum span tree mst subset graph edg connect vertic cycl minimum total edg weight find critic pseudo critic edg graph minimum span tree mst an mst edg delet graph mst weight increas call critic edg on hand pseudo critic edg mst note return indic edg order
1423
parallel cours ii you integ cours label you array relat relat prevcoursei nextcoursei repres prerequisit relationship prevcoursei nextcoursei prevcoursei nextcoursei also integ in semest cours long prerequisit previou semest cours take return minimum number semest need cours the testcas gener
1424
max valu equat you array point coordin point d plane sort valu point xi yi xi lt xj lt lt lt point length you integ return maximum equat yi yj xi xj xi xj lt lt lt lt point length it guarante exist pair point satisfi constraint xi xj lt
1425
minimum possibl integ after most k adjac swap on digit given string num repres digit larg integ integ you allow swap adjac digit integ time return minimum integ obtain string
1426
stone game iv alic bob turn play game alic start initi stone pile on player turn player make move consist remov squar number stone pile also player make move lose game given posit integ return true alic win game return fals assum player play optim
1427
best posit servic centr a deliveri compani build servic centr citi the compani posit custom citi d map build centr posit sum euclidean distanc custom minimum given array posit posit xi yi posit ith custom map return minimum sum euclidean distanc custom in word choos posit servic centr xcentr ycentr formula minim answer actual accept
1428
maximum number non overlap substr given string lowercas letter find maximum number empti substr meet condit the substr overlap substr lt gt true a substr charact occurr find maximum number substr meet condit if multipl solut number substr return minimum total length it shown exist uniqu solut minimum total length notic return substr order
1429
find valu mysteri function closest target winston mysteri function func he integ array arr integ target find valu make func arr target minimum return minimum func arr target notic func call valu lt lt arr length
1430
minimum number increment subarray form target array given array posit integ target array initi size zero return minimum number oper form target array initi allow oper choos subarray initi increment the answer guarante fit rang bit sign integ
1431
string compress ii run length encod string compress method work replac consecut ident charact repeat time concaten charact number mark count charact length run for compress string aabccc replac aa replac ccc thu compress string bc notic problem ad singl charact given string integ you delet charact run length encod version minimum length find minimum length run length encod version delet charact
1432
get maximum score you sort array distinct integ num num a valid path defin choos array num num travers index travers current array left if read present num num allow chang path array onli repeat consid valid path score defin sum uniqu valu valid path return maximum score obtain valid path sinc answer larg return modulo
1433
find longest awesom substr given string an awesom substr empti substr make number swap order make palindrom return length maximum length awesom substr
1434
minimum cost cut stick given wooden stick length unit the stick label for stick length label given integ array cut cut denot posit perform cut you perform cut order chang order cut the cost cut length stick cut total cost sum cost cut when cut stick split smaller stick sum length length stick cut pleas refer explan return minimum total cost cut
1435
minimum number day eat n orang there orang kitchen decid eat orang day eat orang if number remain orang divis eat orang if number remain orang divis eat orang you choos action day return minimum number day eat orang
1436
detect cycl d grid given d array charact grid size find exist cycl consist grid a cycl path length grid start end cell from cell move cell adjac direct left current cell also move cell visit move for cycl gt gt invalid visit visit cell return true cycl exist grid return fals
1437
stone game v there stone arrang row stone integ array stonevalu in round game alic divid row empti row left row row bob calcul row sum valu stone row bob throw row maximum alic score increas remain row if row equal bob let alic decid row thrown the round start remain row the game end stone remain alic initi return maximum score alic obtain
1438
minimum number day disconnect island given d grid consist land water an island maxim direct horizont vertic connect group the grid connect island disconnect in day allow chang singl land cell water cell return minimum number day disconnect grid
1439
number way reorder array get same bst given array num repres permut integ we construct binari search tree bst insert element num order initi empti bst find number way reorder num construct bst ident form origin array num for num root left child child the array yield bst yield bst return number way reorder num bst form ident origin bst form num sinc answer larg return modulo
1440
count all possibl rout you array distinct posit integ locat locat repres posit citi you integ start finish fuel repres start citi end citi initi amount fuel at step citi pick citi lt lt locat length move citi move citi citi reduc amount fuel locat locat pleas notic denot absolut notic fuel neg point time allow visit citi includ start finish return count rout start finish sinc answer larg return modulo
1441
remov max number edg keep graph fulli travers alic bob undirect graph node type edg type can travers alic type can travers bob type can travers alic bob given array edg edg typei ui vi repres bidirect edg type typei node ui vi find maximum number edg remov remov edg graph fulli travers alic bob the graph fulli travers alic bob start node reach node return maximum number edg remov return imposs graph fulli travers alic bob
1442
check if string is transform with substr sort oper given string transform string string oper number time choos empti substr sort place charact ascend order for appli oper underlin substr result return true transform string string otherwis return fals a substr contigu sequenc charact string
1443
strang printer ii there strang printer special requir on turn printer print solid rectangular pattern singl color grid thi cover exist color rectangl onc printer color oper color you matrix targetgrid targetgrid row col color posit row col grid return true print matrix targetgrid return fals
1444
minimum cost connect two group point you group point group size point group size point size gt size the cost connect point size size matrix cost cost connect point group point group the group connect point group connect point opposit group in word point group connect point group point group connect point group return minimum cost take connect group
1445
maximum number achiev transfer request we build number each build number employe it transfer season employe chang build resid you array request request fromi toi repres employe request transfer build fromi build toi all build full list request achiev build net chang employe transfer thi mean number employe leav equal number employe move for employe leav build leav build leav build employe move build employe move build employe move build return maximum number achiev request
1446
find server that handl most number request you server number handl multipl request simultan each server infinit comput capac handl request time the request assign server specif algorithm the ith index request arriv if server busi request drop handl if server assign request server otherwis assign request server wrap list server start for ith server busi assign request server server you strictli increas array arriv posit integ arriv repres arriv time ith request array load load repres load ith request time take complet your goal find busiest server a server consid busiest handl number request success server return list id index busiest server you return id order
1447
maximum number visibl point you array point integ angl locat locat posx posi point xi yi denot integr coordin x y plane initi face directli east posit you move posit rotat in word posx posi chang your field view degre repres angl determin wide view direct let amount degre rotat counterclockwis then field view inclus rang angl angl angl your browser support video tag video format you set point point angl form point posit east direct posit field view there multipl point coordin there point locat point rotat point obstruct vision point return maximum number point
1448
minimum one bit oper make integ zero given integ transform oper number time chang rightmost bit binari represent chang ith bit binari represent bit set bit set return minimum number oper transform
1449
count subtre with max distanc between citi there citi number you array edg size edg ui vi repres bidirect edg citi ui vi there exist uniqu path pair citi in word citi form tree a subtre subset citi citi reachabl citi subset path pair pass citi subset two subtre citi subtre present for find number subtre maximum distanc citi subtre equal return array size dth element index number subtre maximum distanc citi equal notic distanc citi number edg path
1450
fanci sequenc write api gener fanci sequenc append addal multal oper implement fanci class fanci initi object empti sequenc void append val append integ val end sequenc void addal increment exist valu sequenc integ void multal multipli exist valu sequenc integ int getindex idx get current index idx index sequenc modulo if index greater equal length sequenc return
1451
graph connect with threshold we citi label two citi label directli connect bidirect road share common divisor strictli greater threshold more formal citi label road exist integ true gt threshold given integ threshold array queri determin queri ai bi citi ai bi connect directli indirectli path return array answer answer length queri length answer true ith queri path ai bi answer fals path
1452
rank transform matrix given matrix return matrix answer answer row col rank matrix row col the rank integ repres larg element compar element it calcul rule the rank integ start if element row column if lt rank lt rank if rank rank if gt rank gt rank the rank small it guarante answer uniqu rule
1453
number way form target string given dictionari you list string length word string target your task form target word rule target form left to form ith charact index target choos kth charact jth string word target word onc kth charact jth string word longer xth charact string word lt in word charact left index unusu string repeat process form string target notic multipl charact string word provid condit met return number way form target word sinc answer larg return modulo
1454
kth smallest instruct bob stand cell reach destin row column he travel you bob provid instruct reach destin the instruct repres string charact h mean move horizont v mean move vertic multipl instruct lead bob destin for destin hhhvv hvhvh valid instruct howev bob picki bob lucki number kth lexicograph smallest instruct lead destin index given integ array destin integ return kth lexicograph smallest instruct bob destin
1455
creat sort array instruct given integ array instruct ask creat sort array element instruct you start empti contain num for element left instruct insert num the cost insert minimum the number element num strictli instruct the number element num strictli greater instruct for insert element num cost insert min element element greater num return total cost insert element instruct num sinc answer larg return modulo
1456
distribut repeat integ you array integ num uniqu valu array you array custom order quantiti quantiti quantiti amount integ ith custom order determin distribut num the ith custom quantiti integ the integ ith custom equal everi custom satisfi return true distribut num condit
1457
maxim grid happi you integ introvertscount extrovertscount you grid type peopl introvert extrovert there introvertscount introvert extrovertscount extrovert you decid peopl live grid assign grid cell note peopl live grid the happi person calcul introvert start happi lose happi neighbor introvert extrovert extrovert start happi gain happi neighbor introvert extrovert neighbor live directli adjac cell north east south west person cell the grid happi sum person happi return maximum grid happi
1458
minimum initi energi finish task you array task task actuali minimumi actuali actual amount energi spend finish ith task minimumi minimum amount energi requir begin ith task for task current energi start task howev current energi complet task energi finish you finish task order return minimum initi amount energi finish task
1459
minimum number remov make mountain array you recal array arr mountain array arr length gt there exist index index lt lt arr length arr lt arr lt lt arr lt arr arr gt arr gt gt arr arr length given integ array num return minimum number element remov make num mountain array
1460
minim deviat array you array num posit integ you perform type oper element array number time if element divid for array oper element array if element odd multipli for array oper element array the deviat array maximum differ element array return minimum deviat array perform number oper
1461
minimum incompat you integ array num integ you ask distribut array subset equal size equal element subset a subset incompat differ maximum minimum element array return minimum sum incompat subset distribut array optim return a subset group integ array order
1462
deliv box storag port you task deliv box storag port ship howev ship limit number box total weight carri you array box box port weighti integ portscount maxbox maxweight port port deliv ith box weightsi weight ith box portscount number port maxbox maxweight respect box weight limit ship the box deliv order the ship follow step the ship number box box queue violat maxbox maxweight constraint for load box order ship make trip port box deliv deliv if ship correct port trip need box immedi deliv the ship make return trip storag box queue the ship end storag box deliv return minimum number trip ship make deliv box respect port
1463
maximum height stack cuboid given cuboid dimens ith cuboid cuboid widthi lengthi heighti index choos subset cuboid place you place cuboid cuboid widthi lt widthj lengthi lt lengthj heighti lt heightj you rearrang cuboid dimens rotat put cuboid return maximum height stack cuboid
1464
check exist edg length limit path an undirect graph node defin edgelist edgelist ui vi disi denot edg node ui vi distanc disi note multipl edg node given array queri queri pj qj limitj task determin queri path pj qj edg path distanc strictli limitj return boolean array answer answer length queri length jth answer true path queri true fals
1465
minimum adjac swap k consecut one you integ array num integ num compris in move choos adjac indic swap valu return minimum number move requir num consecut
1466
maximum xor with element from array you array num consist neg integ you queri array queri xi mi the answer ith queri maximum bitwis xor xi element num exceed mi in word answer max num xor xi num lt mi if element num larger mi answer return integ array answer answer length queri length answer answer ith queri
1467
minimum oper make subsequ you array target consist distinct integ integ array arr duplic in oper insert integ posit arr for arr add middl make note insert integ begin end array return minimum number oper need make target subsequ arr a subsequ array array gener origin array delet element possibl chang remain element rel order for subsequ underlin element
1468
number of way to reconstruct a tree you array pair pair xi yi there duplic xi lt yi let way number root tree satisfi condit the tree consist node valu appear pair a pair xi yi exist pair xi ancestor yi yi ancestor xi note tree binari tree two way consid node parent way return way way way gt a root tree tree singl root node edg orient outgo root an ancestor node node path root node exclud node the root ancestor
1469
find minimum time finish all job you integ array job job amount time take complet ith job there worker assign job each job assign worker the work time worker sum time take complet job assign your goal devis optim assign maximum work time worker minim return minimum maximum work time assign
1470
cat mous ii a game play cat mous name cat mous the environ repres grid size row col element wall floor player cat mous food player repres charact c cat m mous floor repres charact walk wall repres charact walk food repres charact f walk there charact c m f grid mous cat play rule mous move turn move dure turn cat mous jump direct left they jump wall grid catjump mousejump maximum length cat mous jump time cat mous jump maximum length stay posit allow mous jump cat the game end way if cat occupi posit mous cat win if cat reach food cat win if mous reach food mous win if mous food turn cat win given row col matrix grid integ catjump mousejump return true mous win game cat mous play optim return fals
1471
count way make array with product you d integ array queri for queri queri ni ki find number way place posit integ array size ni product integ ki as number way larg answer ith queri number way modulo return integ array answer answer length queri length answer answer ith queri
1472
build box you cubic storeroom width length height room equal unit you ask place box room box cube unit side length there rule place box you place box floor if box top box side vertic side box adjac box wall given integ return minimum number box touch floor
1473
palindrom partit iv given string return true split string empti palindrom substr otherwis return fals a string palindrom string revers
1474
maximum number event that can be attend ii you array event event startdayi enddayi valuei the ith event start startdayi end enddayi attend event receiv valuei you integ repres maximum number event attend you attend event time if choos attend event attend entir event note end day inclus attend event start end day return maximum sum valu receiv attend event
1475
closest subsequ sum you integ array num integ goal you choos subsequ num sum element closest goal that sum subsequ element sum minim absolut differ ab sum goal return minimum ab sum goal note subsequ array array form remov element possibl origin array
1476
minimum degre connect trio graph you undirect graph you integ number node graph array edg edg ui vi undirect edg ui vi a connect trio set node edg pair the degre connect trio number edg endpoint trio return minimum degre connect trio graph graph connect trio
1477
tree coprim there tree connect undirect graph cycl consist node number edg each node root tree node to repres tree integ array num d array edg each num repres ith node edg uj vj repres edg node uj vj tree two valu coprim gcd gcd greatest common divisor an ancestor node node shortest path node root a node consid ancestor return array an size an closest ancestor node num num an coprim ancestor
1478
maxim palindrom length from subsequ you string word word you construct string manner choos empti subsequ subsequ word choos empti subsequ subsequ word concaten subsequ subsequ subsequ make string return length longest palindrom construct manner if palindrom construct return a subsequ string string made delet possibl charact chang order remain charact a palindrom string read forward backward
1479
car fleet ii there car travel speed direct lane road you array car length car positioni speedi repres positioni distanc ith car begin road meter it guarante positioni lt positioni speedi initi speed ith car meter for simplic car consid point move number line two car collid occupi posit onc car collid car unit form singl car fleet the car form fleet posit speed initi speed slowest car fleet return array answer answer time second ith car collid car car collid car answer actual answer accept
1480
count pair of node you undirect graph defin integ number node d integ array edg edg graph edg ui vi undirect edg ui vi you integ array queri let incid defin number edg connect node the answer jth queri number pair node satisfi condit lt incid gt queri return array answer answer length queri length answer answer jth queri note multipl edg node
1481
make xor all segment equal zero you array num integ the xor segment left left lt xor element indic left inclus num left xor num left xor xor num return minimum number element chang array xor segment size equal
1482
maximum score good subarray you array integ num index integ the score subarray defin min num num num a good subarray subarray lt lt return maximum score good subarray
1483
maxim score after n oper you num array posit integ size you perform oper array in ith oper index choos element receiv score gcd remov num return maximum score receiv perform oper the function gcd greatest common divisor
1484
count pair with xor rang given index integ array num integ low high return number nice pair a nice pair pair lt lt lt num length low lt num xor num lt high
1485
maxim number nice divisor you posit integ primefactor you ask construct posit integ satisfi condit the number prime factor necessarili distinct primefactor the number nice divisor maxim note divisor nice divis prime factor for prime factor nice divisor return number nice divisor sinc number larg return modulo note prime number natur number greater product smaller natur number the prime factor number list prime number product equal
1486
maximum number group get fresh donut there donut shop bake donut batch batchsiz they rule serv donut batch serv donut batch you integ batchsiz integ array group group denot group group custom visit shop each custom donut when group visit shop custom group serv serv group a group happi fresh donut that custom group receiv donut left previou group you freeli rearrang order group return maximum number happi group rearrang group
1487
number differ subsequ gcd you array num consist posit integ the gcd sequenc number defin greatest integ divid number sequenc evenli for gcd sequenc a subsequ array sequenc form remov element possibl array for subsequ return number gcd empti subsequ num
1488
find mk averag you integ stream integ you task implement data structur calcul mkaverag stream the mkaverag calcul step if number element stream mkaverag otherwis copi element stream separ contain remov smallest element largest element contain calcul averag rest element round nearest integ implement mkaverag class mkaverag int int initi mkaverag object empti stream integ void addel int num insert element num stream int calculatemkaverag calcul return mkaverag current stream round nearest integ
1489
minimum number oper make string sort you string index you ask perform oper sort string find largest index lt lt length lt find largest index lt lt length lt valu rang inclus swap charact indic revers suffix start index return number oper need make string sort sinc answer larg return modulo
1490
find xor sum all pair bitwis and the xor sum list bitwis xor element if list element xor sum equal element for xor sum equal xor xor xor xor sum equal you index array arr arr consist neg integ consid list result arr and arr bitwis and pair lt lt arr length lt lt arr length return xor sum aforement list
1491
maximum build height you build build citi the build built line label howev citi restrict height build the height build neg integ the height build the height differ adjac build exceed addit citi restrict maximum height specif build these restrict d integ array restrict restrict idi maxheighti build idi height equal maxheighti it guarante build restrict build restrict return maximum height tallest build
1492
closest room there hotel room the room repres d integ array room room roomidi sizei denot room room number roomidi size equal sizei each roomidi guarante uniqu you queri d array queri queri preferredj minsizej the answer jth queri room number id room the room size minsizej ab id preferredj minim ab absolut if tie absolut differ room smallest id if room answer return array answer length answer answer jth queri
1493
minimum interv includ each queri you d integ array interv interv lefti righti describ ith interv start lefti end righti inclus the size interv defin number integ formal righti lefti you integ array queri the answer jth queri size smallest interv lefti lt queri lt righti if interv exist answer return array answer queri
1494
largest color valu direct graph there direct graph color node edg the node number you string color color lowercas english letter repres color ith node graph index you d array edg edg aj bj direct edg node aj node bj a valid path graph sequenc node gt gt gt gt xk direct edg xi xi lt lt the color path number node color frequent occur color path return largest color valid path graph graph cycl
1495
sum floor pair given integ array num return sum floor num num pair indic lt lt num length array sinc answer larg return modulo the floor function return integ part divis
1496
number way rearrang stick with k stick visibl there uniqu size stick length integ you arrang stick stick visibl left a stick visibl left longer stick left for stick arrang stick length visibl left given return number arrang sinc answer larg return modulo
1497
stone game viii alic bob turn play game alic start there stone arrang row on player turn number stone choos integ gt remov leftmost stone row add sum remov stone valu player score place stone equal sum left side row the game stop stone left row the score differ alic bob alic score bob score alic goal maxim score differ bob goal minim score differ given integ array stone length stone repres ith stone left return score differ alic bob play optim
1498
minimum xor sum two array you integ array num num length the xor sum integ array num xor num num xor num num xor num index for xor sum equal xor xor xor rearrang element num result xor sum minim return xor sum rearrang
1499
minimum skip arriv meet on time you integ hoursbefor number hour travel meet to arriv meet travel road the road length integ array dist length dist describ length ith road kilomet in addit integ speed speed km travel after travel road rest wait integ hour begin travel road note rest travel road meet for travel road take hour wait hour mark travel road if travel road take hour wait howev allow skip rest arriv time mean wait integ hour note mean finish travel futur road hour mark for suppos travel road take hour travel road take hour skip rest road finish travel road hour mark let start travel road immedi return minimum number skip requir arriv meet time imposs
1500
minimum space wast from packag you packag place box packag box there supplier produc box size infinit suppli a packag box size packag equal size box the packag size integ array packag packag size ith packag the supplier d integ array box box array box size jth supplier produc you choos singl supplier box total wast space minim for packag box defin space wast size box size packag the total wast space sum space wast box for fit packag size supplier offer box size fit packag size size box size packag size box size thi result wast return minimum total wast space choos box supplier optim imposs fit packag insid box sinc answer larg return modulo
1501
minimum cost chang final valu express you valid boolean express string express consist charact amp bitwis and oper bitwis or oper for amp valid amp valid express return minimum cost chang final express for express amp amp amp amp amp amp amp we appli oper express evalu the cost chang final express number oper perform express the type oper turn turn turn amp turn amp note amp preced order calcul evalu parenthes left order
1502
the earliest latest round where player compet there tournament player particip the player stand singl row number base initi stand posit player player row player player row the tournament consist multipl round start round number in round ith player front row compet ith player end row winner advanc round when number player odd current round player middl automat advanc round for row consist player player compet player player compet player player automat advanc round after round winner line back row base origin order assign initi ascend order the player number firstplay secondplay tournament they win player compet if player compet win choos outcom round given integ firstplay secondplay return integ array valu earliest round number latest round number player compet
1503
design movi rental system you movi rent compani consist shop you implement rent system support search book return movi the system support gener report rent movi each movi d integ array entri entri shopi moviei pricei copi movi moviei shop shopi rental price pricei each shop carri copi movi moviei the system support function search find cheapest shop unrent copi movi the shop sort price ascend order case tie smaller shopi if match shop return if shop unrent copi empti list return rent rent unrent copi movi shop drop drop previous rent copi movi shop report return cheapest rent movi possibl movi id d list re re shopj moviej describ jth cheapest rent movi moviej rent shop shopj the movi re sort price ascend order case tie smaller shopj tie smaller moviej if fewer rent movi return if movi rent empti list return implement movierentingsystem class movierentingsystem int int entri initi movierentingsystem object shop movi entri list lt integ gt search int movi return list shop unrent copi movi void rent int shop int movi rent movi shop void drop int shop int movi drop previous rent movi shop list lt list lt integ gt gt report return list cheapest rent movi note the test case gener rent call shop unrent copi movi drop call shop previous rent movi
1504
count way build room ant coloni you ant task ad room number coloni you expans plan index integ array length prevroom prevroom build room prevroom build room room connect directli room built prevroom the expans plan room built room reachabl room you build room time travel freeli room built connect you choos build room long previou room built return number order build room sinc answer larg return modulo
1505
longest common subpath there countri citi number in countri road connect pair citi there friend number travel countri each path consist citi each path repres integ array visit citi order the path citi citi list consecut given integ d integ array path path integ array repres path ith friend return length longest common subpath share friend path common subpath a subpath path contigu sequenc citi path
1506
minimum cost reach destin time there countri citi number citi connect bi direct road the road repres d integ array edg edg xi yi timei denot road citi xi yi take timei minut travel there multipl road differ travel time connect citi road connect citi each time pass citi pay pass fee thi repres index integ array passingfe length passingfe amount dollar pay pass citi in begin citi reach citi maxtim minut the cost journey summat pass fee citi pass moment journey includ sourc destin citi given maxtim edg passingfe return minimum cost complet journey complet maxtim minut
1507
paint grid with three differ color you integ consid grid cell initi white you paint cell red green blue all cell paint return number way color grid adjac cell color sinc answer larg return modulo
1508
merg bst creat singl bst you bst binari search tree root node separ bst store array tree index each bst tree node root in oper select distinct indic store leav tree equal root tree replac leaf node tree tree remov tree tree return root result bst form valid bst perform oper null imposs creat valid bst a bst binari search tree binari tree node satisfi properti everi node node left subtre strictli node everi node node subtre strictli greater node a leaf node children
1509
maximum genet differ queri there root tree consist node number each node number denot uniqu genet genet node the genet differ genet valu defin bitwis xor valu you integ array parent parent node if node root tree parent you array queri queri nodei vali for queri find maximum genet differ vali pi pi genet node path nodei root includ nodei root more formal maxim vali xor pi return array an an answer ith queri
1510
number visibl peopl queue there peopl stand queue number left order you array height distinct integ height repres height ith person a person person queue shorter more formal ith person jth person lt min height height gt max height height height return array answer length answer number peopl ith person queue
1511
delet duplic folder system due bug duplic folder file system you d array path path array repres absolut path ith folder file system for repres path two folder necessarili level ident empti set ident subfold underli subfold structur the folder root level ident if folder ident mark folder subfold for folder file structur ident they subfold mark howev file structur includ path folder ident note consid ident ad folder onc ident folder subfold mark file system delet the file system run delet folder ident initi delet delet return d array an path remain folder delet mark folder the path return order
1512
count number special subsequ a sequenc special consist posit number posit number posit number for special in contrast special given array num consist integ return number subsequ special sinc answer larg return modulo a subsequ array sequenc deriv array delet element chang order remain element two subsequ set indic chosen
1513
maximum product length two palindrom substr you index string task find intersect palindrom substr odd length product length maxim more formal choos integ lt lt lt lt lt length substr palindrom odd length denot substr index index inclus return maximum product length intersect palindrom substr a palindrom string forward backward a substr contigu sequenc charact string
1514
find longest valid obstacl cours each posit you build obstacl cours you index integ array obstacl length obstacl describ height ith obstacl for index inclus find length longest obstacl obstacl you choos number obstacl inclus you includ ith obstacl you put chosen obstacl order obstacl everi obstacl taller height obstacl immedi return array an length an length longest obstacl index
1515
last day where you can still cross there base binari matrix repres land repres water you integ row col repres number row column matrix initi day entir matrix land howev day cell flood water you base d array cell cell ri ci repres ith day cell rith row cith column base coordin cover water chang you find day walk top bottom walk land cell you start cell top row end cell bottom row you travel cardin direct left return day walk top bottom walk land cell
1516
number way separ number you wrote posit integ string call num howev realiz forgot add comma seper number you rememb list integ decreas integ lead zero return number list integ written string num sinc answer larg return modulo
1517
find array given subset sum you integ repres length unknown array recov you array sum valu subset sum unknown array order return array an length repres unknown array if multipl answer exist return an array subset array arr obtain arr delet possibl element arr the sum element subset sum arr the sum empti array consid note test case gener correct answer
1518
number uniqu good subsequ you binari string binari a subsequ binari consid good empti lead zero except find number uniqu good subsequ binari for binari good subsequ uniqu good subsequ note subsequ good lead zero return number uniqu good subsequ binari sinc answer larg return modulo a subsequ sequenc deriv sequenc delet element chang order remain element
1519
maximum product length two palindrom substr you index string task find intersect palindrom substr odd length product length maxim more formal choos integ lt lt lt lt lt length substr palindrom odd length denot substr index index inclus return maximum product length intersect palindrom substr a palindrom string forward backward a substr contigu sequenc charact string
1520
find longest valid obstacl cours each posit you build obstacl cours you index integ array obstacl length obstacl describ height ith obstacl for index inclus find length longest obstacl obstacl you choos number obstacl inclus you includ ith obstacl you put chosen obstacl order obstacl everi obstacl taller height obstacl immedi return array an length an length longest obstacl index
1521
last day where you can still cross there base binari matrix repres land repres water you integ row col repres number row column matrix initi day entir matrix land howev day cell flood water you base d array cell cell ri ci repres ith day cell rith row cith column base coordin cover water chang you find day walk top bottom walk land cell you start cell top row end cell bottom row you travel cardin direct left return day walk top bottom walk land cell
1522
number way separ number you wrote posit integ string call num howev realiz forgot add comma seper number you rememb list integ decreas integ lead zero return number list integ written string num sinc answer larg return modulo
1523
find array given subset sum you integ repres length unknown array recov you array sum valu subset sum unknown array order return array an length repres unknown array if multipl answer exist return an array subset array arr obtain arr delet possibl element arr the sum element subset sum arr the sum empti array consid note test case gener correct answer
1524
number uniqu good subsequ you binari string binari a subsequ binari consid good empti lead zero except find number uniqu good subsequ binari for binari good subsequ uniqu good subsequ note subsequ good lead zero return number uniqu good subsequ binari sinc answer larg return modulo a subsequ sequenc deriv sequenc delet element chang order remain element
1525
the number good subset you integ array num we call subset num good product repres product distinct prime number for num good subset product good subset product return number good subset num modulo a subset num array obtain delet possibl element num two subset chosen indic delet
1526
gcd sort array you integ array num perform oper number time num swap posit element num num gcd num num gt gcd num num greatest common divisor num num return true sort num decreas order swap method fals
1527
number uniqu good subsequ you binari string binari a subsequ binari consid good empti lead zero except find number uniqu good subsequ binari for binari good subsequ uniqu good subsequ note subsequ good lead zero return number uniqu good subsequ binari sinc answer larg return modulo a subsequ sequenc deriv sequenc delet element chang order remain element
1528
the number good subset you integ array num we call subset num good product repres product distinct prime number for num good subset product good subset product return number good subset num modulo a subset num array obtain delet possibl element num two subset chosen indic delet
1529
gcd sort array you integ array num perform oper number time num swap posit element num num gcd num num gt gcd num num greatest common divisor num num return true sort num decreas order swap method fals
1530
smallest miss genet valu each subtre there famili tree root consist node number you index integ array parent parent node sinc node root parent there genet valu repres integ inclus rang you index integ array num num distinct genet node return array an length an smallest genet miss subtre root node the subtre root node node descend node
1531
number way separ number you wrote posit integ string call num howev realiz forgot add comma seper number you rememb list integ decreas integ lead zero return number list integ written string num sinc answer larg return modulo
1532
find array given subset sum you integ repres length unknown array recov you array sum valu subset sum unknown array order return array an length repres unknown array if multipl answer exist return an array subset array arr obtain arr delet possibl element arr the sum element subset sum arr the sum empti array consid note test case gener correct answer
1533
number uniqu good subsequ you binari string binari a subsequ binari consid good empti lead zero except find number uniqu good subsequ binari for binari good subsequ uniqu good subsequ note subsequ good lead zero return number uniqu good subsequ binari sinc answer larg return modulo a subsequ sequenc deriv sequenc delet element chang order remain element
1534
the number good subset you integ array num we call subset num good product repres product distinct prime number for num good subset product good subset product return number good subset num modulo a subset num array obtain delet possibl element num two subset chosen indic delet
1535
gcd sort array you integ array num perform oper number time num swap posit element num num gcd num num gt gcd num num greatest common divisor num num return true sort num decreas order swap method fals
1536
smallest miss genet valu each subtre there famili tree root consist node number you index integ array parent parent node sinc node root parent there genet valu repres integ inclus rang you index integ array num num distinct genet node return array an length an smallest genet miss subtre root node the subtre root node node descend node
1537
minimum number oper make array continu you integ array num in oper replac element num integ num consid continu condit fulfil all element num uniqu the differ maximum element minimum element num equal num length for num continu num continu return minimum number oper make num continu
1538
longest subsequ repeat time you string length integ you task find longest subsequ repeat time string a subsequ string deriv string delet charact chang order remain charact a subsequ seq repeat time string seq subsequ seq repres string construct concaten seq time for bba repeat time string bababcba string bbabba construct concaten bba time subsequ string bababcba return longest subsequ repeat time string if multipl subsequ found return lexicograph largest if subsequ return empti string
1539
smallest miss genet valu each subtre there famili tree root consist node number you index integ array parent parent node sinc node root parent there genet valu repres integ inclus rang you index integ array num num distinct genet node return array an length an smallest genet miss subtre root node the subtre root node node descend node
1540
minimum number oper make array continu you integ array num in oper replac element num integ num consid continu condit fulfil all element num uniqu the differ maximum element minimum element num equal num length for num continu num continu return minimum number oper make num continu
1541
longest subsequ repeat time you string length integ you task find longest subsequ repeat time string a subsequ string deriv string delet charact chang order remain charact a subsequ seq repeat time string seq subsequ seq repres string construct concaten seq time for bba repeat time string bababcba string bbabba construct concaten bba time subsequ string bababcba return longest subsequ repeat time string if multipl subsequ found return lexicograph largest if subsequ return empti string
1542
the score student solv math express you string digit addit symbol multipl symbol repres valid math express singl digit number thi express elementari school student the student instruct answer express order oper comput multipl read left then comput addit read left you integ array answer length submit answer student order you ask grade answer rule if answer equal correct answer express student reward point otherwis answer interpret student appli oper wrong order correct arithmet student reward point otherwis student reward point return sum point student
1543
the number good subset you integ array num we call subset num good product repres product distinct prime number for num good subset product good subset product return number good subset num modulo a subset num array obtain delet possibl element num two subset chosen indic delet
1544
gcd sort array you integ array num perform oper number time num swap posit element num num gcd num num gt gcd num num greatest common divisor num num return true sort num decreas order swap method fals
1545
smallest miss genet valu each subtre there famili tree root consist node number you index integ array parent parent node sinc node root parent there genet valu repres integ inclus rang you index integ array num num distinct genet node return array an length an smallest genet miss subtre root node the subtre root node node descend node
1546
minimum number oper make array continu you integ array num in oper replac element num integ num consid continu condit fulfil all element num uniqu the differ maximum element minimum element num equal num length for num continu num continu return minimum number oper make num continu
1547
longest subsequ repeat time you string length integ you task find longest subsequ repeat time string a subsequ string deriv string delet charact chang order remain charact a subsequ seq repeat time string seq subsequ seq repres string construct concaten seq time for bba repeat time string bababcba string bbabba construct concaten bba time subsequ string bababcba return longest subsequ repeat time string if multipl subsequ found return lexicograph largest if subsequ return empti string
1548
the score student solv math express you string digit addit symbol multipl symbol repres valid math express singl digit number thi express elementari school student the student instruct answer express order oper comput multipl read left then comput addit read left you integ array answer length submit answer student order you ask grade answer rule if answer equal correct answer express student reward point otherwis answer interpret student appli oper wrong order correct arithmet student reward point otherwis student reward point return sum point student
1549
maximum number way partit array you index integ array num length the number way partit num number pivot indic satisfi condit lt pivot lt num num num pivot num pivot num pivot num you integ you choos chang element num leav array unchang return maximum number way partit num satisfi condit chang element
1550
smallest k length subsequ with occurr letter you string integ letter letter integ repetit return lexicograph smallest subsequ length letter letter repetit time the test case gener letter appear repetit time a subsequ string deriv string delet charact chang order remain charact a string lexicograph smaller string posit differ string letter appear earlier alphabet letter
1551
the score student solv math express you string digit addit symbol multipl symbol repres valid math express singl digit number thi express elementari school student the student instruct answer express order oper comput multipl read left then comput addit read left you integ array answer length submit answer student order you ask grade answer rule if answer equal correct answer express student reward point otherwis answer interpret student appli oper wrong order correct arithmet student reward point otherwis student reward point return sum point student
1552
maximum number way partit array you index integ array num length the number way partit num number pivot indic satisfi condit lt pivot lt num num num pivot num pivot num pivot num you integ you choos chang element num leav array unchang return maximum number way partit num satisfi condit chang element
1553
smallest k length subsequ with occurr letter you string integ letter letter integ repetit return lexicograph smallest subsequ length letter letter repetit time the test case gener letter appear repetit time a subsequ string deriv string delet charact chang order remain charact a string lexicograph smaller string posit differ string letter appear earlier alphabet letter
1554
partit array into two array minim sum differ you integ array num integ you partit num array length minim absolut differ sum array to partit num put element num array return minimum absolut differ
1555
minimum number oper make array continu you integ array num in oper replac element num integ num consid continu condit fulfil all element num uniqu the differ maximum element minimum element num equal num length for num continu num continu return minimum number oper make num continu
1556
longest subsequ repeat time you string length integ you task find longest subsequ repeat time string a subsequ string deriv string delet charact chang order remain charact a subsequ seq repeat time string seq subsequ seq repres string construct concaten seq time for bba repeat time string bababcba string bbabba construct concaten bba time subsequ string bababcba return longest subsequ repeat time string if multipl subsequ found return lexicograph largest if subsequ return empti string
1557
the score student solv math express you string digit addit symbol multipl symbol repres valid math express singl digit number thi express elementari school student the student instruct answer express order oper comput multipl read left then comput addit read left you integ array answer length submit answer student order you ask grade answer rule if answer equal correct answer express student reward point otherwis answer interpret student appli oper wrong order correct arithmet student reward point otherwis student reward point return sum point student
1558
maximum number way partit array you index integ array num length the number way partit num number pivot indic satisfi condit lt pivot lt num num num pivot num pivot num pivot num you integ you choos chang element num leav array unchang return maximum number way partit num satisfi condit chang element
1559
smallest k length subsequ with occurr letter you string integ letter letter integ repetit return lexicograph smallest subsequ length letter letter repetit time the test case gener letter appear repetit time a subsequ string deriv string delet charact chang order remain charact a string lexicograph smaller string posit differ string letter appear earlier alphabet letter
1560
partit array into two array minim sum differ you integ array num integ you partit num array length minim absolut differ sum array to partit num put element num array return minimum absolut differ
1561
kth smallest product two sort array given sort index integ array num num integ return kth base smallest product num num lt lt num length lt lt num length
1562
second minimum time reach destin a citi repres bi direct connect graph vertic vertex label inclus the edg graph repres d integ array edg edg ui vi denot bi direct edg vertex ui vertex vi everi vertex pair connect edg vertex edg the time travers edg time minut each vertex traffic signal color green red vice versa chang minut all signal chang time you enter vertex time leav vertex signal green you wait vertex signal green the minimum defin smallest strictli larger minimum for minimum minimum given edg time chang return minimum time vertex vertex note you vertex number time includ you assum journey start signal turn green
1563
partit array into two array minim sum differ you integ array num integ you partit num array length minim absolut differ sum array to partit num put element num array return minimum absolut differ
1564
kth smallest product two sort array given sort index integ array num num integ return kth base smallest product num num lt lt num length lt lt num length
1565
second minimum time reach destin a citi repres bi direct connect graph vertic vertex label inclus the edg graph repres d integ array edg edg ui vi denot bi direct edg vertex ui vertex vi everi vertex pair connect edg vertex edg the time travers edg time minut each vertex traffic signal color green red vice versa chang minut all signal chang time you enter vertex time leav vertex signal green you wait vertex signal green the minimum defin smallest strictli larger minimum for minimum minimum given edg time chang return minimum time vertex vertex note you vertex number time includ you assum journey start signal turn green
1566
parallel cours iii you integ cours label you d integ array relat relat prevcoursej nextcoursej denot prevcoursej complet nextcoursej prerequisit relationship furthermor index integ array time time denot month take complet you find minimum number month need complet cours rule you start take time prerequisit met ani number cours time return minimum number month need complet cours note the test case gener complet graph direct acycl graph
1567
maximum number way partit array you index integ array num length the number way partit num number pivot indic satisfi condit lt pivot lt num num num pivot num pivot num pivot num you integ you choos chang element num leav array unchang return maximum number way partit num satisfi condit chang element
1568
smallest k length subsequ with occurr letter you string integ letter letter integ repetit return lexicograph smallest subsequ length letter letter repetit time the test case gener letter appear repetit time a subsequ string deriv string delet charact chang order remain charact a string lexicograph smaller string posit differ string letter appear earlier alphabet letter
1569
partit array into two array minim sum differ you integ array num integ you partit num array length minim absolut differ sum array to partit num put element num array return minimum absolut differ
1570
kth smallest product two sort array given sort index integ array num num integ return kth base smallest product num num lt lt num length lt lt num length
1571
second minimum time reach destin a citi repres bi direct connect graph vertic vertex label inclus the edg graph repres d integ array edg edg ui vi denot bi direct edg vertex ui vertex vi everi vertex pair connect edg vertex edg the time travers edg time minut each vertex traffic signal color green red vice versa chang minut all signal chang time you enter vertex time leav vertex signal green you wait vertex signal green the minimum defin smallest strictli larger minimum for minimum minimum given edg time chang return minimum time vertex vertex note you vertex number time includ you assum journey start signal turn green
1572
parallel cours iii you integ cours label you d integ array relat relat prevcoursej nextcoursej denot prevcoursej complet nextcoursej prerequisit relationship furthermor index integ array time time denot month take complet you find minimum number month need complet cours rule you start take time prerequisit met ani number cours time return minimum number month need complet cours note the test case gener complet graph direct acycl graph
1573
number valid move combin on chessboard there chessboard piec rook queen bishop you string array piec length piec describ type rook queen bishop ith piec in addit d integ array posit length posit ri ci ith piec base coordin ri ci chessboard when make move piec choos destin squar piec travel stop a rook travel horizont vertic direct a queen travel horizont vertic diagon direct a bishop travel diagon direct you make move piec board simultan a move combin consist move perform piec everi piec instantan travel squar destin all piec start travel a move combin invalid time piec occupi squar return number valid move combin note no piec start squar you choos squar piec destin if piec directli adjac valid move past swap posit
1574
check origin string exist given two encod string an origin string consist lowercas english letter encod step arbitrarili split sequenc number empti substr arbitrarili choos element possibl sequenc replac length numer string concaten sequenc encod string for encod origin string abcdefghijklmnop split sequenc ab cdefghijklmn choos element replac length the sequenc ab concaten element sequenc encod string ab given encod string consist lowercas english letter digit inclus return true exist origin string encod otherwis return fals note the test case gener number consecut digit exceed
1575
parallel cours iii you integ cours label you d integ array relat relat prevcoursej nextcoursej denot prevcoursej complet nextcoursej prerequisit relationship furthermor index integ array time time denot month take complet you find minimum number month need complet cours rule you start take time prerequisit met ani number cours time return minimum number month need complet cours note the test case gener complet graph direct acycl graph
1576
number valid move combin on chessboard there chessboard piec rook queen bishop you string array piec length piec describ type rook queen bishop ith piec in addit d integ array posit length posit ri ci ith piec base coordin ri ci chessboard when make move piec choos destin squar piec travel stop a rook travel horizont vertic direct a queen travel horizont vertic diagon direct a bishop travel diagon direct you make move piec board simultan a move combin consist move perform piec everi piec instantan travel squar destin all piec start travel a move combin invalid time piec occupi squar return number valid move combin note no piec start squar you choos squar piec destin if piec directli adjac valid move past swap posit
1577
check origin string exist given two encod string an origin string consist lowercas english letter encod step arbitrarili split sequenc number empti substr arbitrarili choos element possibl sequenc replac length numer string concaten sequenc encod string for encod origin string abcdefghijklmnop split sequenc ab cdefghijklmn choos element replac length the sequenc ab concaten element sequenc encod string ab given encod string consist lowercas english letter digit inclus return true exist origin string encod otherwis return fals note the test case gener number consecut digit exceed
1578
maximum path qualiti graph there undirect graph node number inclus you index integ array valu valu ith node you index d integ array edg edg uj vj timej undirect edg node uj vj take timej second travel node final integ maxtim a valid path graph path start node end node take maxtim second complet you visit node multipl time the qualiti valid path sum valu uniqu node visit path node ad sum return maximum qualiti valid path note there edg connect node
1579
kth smallest product two sort array given sort index integ array num num integ return kth base smallest product num num lt lt num length lt lt num length
1580
second minimum time reach destin a citi repres bi direct connect graph vertic vertex label inclus the edg graph repres d integ array edg edg ui vi denot bi direct edg vertex ui vertex vi everi vertex pair connect edg vertex edg the time travers edg time minut each vertex traffic signal color green red vice versa chang minut all signal chang time you enter vertex time leav vertex signal green you wait vertex signal green the minimum defin smallest strictli larger minimum for minimum minimum given edg time chang return minimum time vertex vertex note you vertex number time includ you assum journey start signal turn green
1581
parallel cours iii you integ cours label you d integ array relat relat prevcoursej nextcoursej denot prevcoursej complet nextcoursej prerequisit relationship furthermor index integ array time time denot month take complet you find minimum number month need complet cours rule you start take time prerequisit met ani number cours time return minimum number month need complet cours note the test case gener complet graph direct acycl graph
1582
number valid move combin on chessboard there chessboard piec rook queen bishop you string array piec length piec describ type rook queen bishop ith piec in addit d integ array posit length posit ri ci ith piec base coordin ri ci chessboard when make move piec choos destin squar piec travel stop a rook travel horizont vertic direct a queen travel horizont vertic diagon direct a bishop travel diagon direct you make move piec board simultan a move combin consist move perform piec everi piec instantan travel squar destin all piec start travel a move combin invalid time piec occupi squar return number valid move combin note no piec start squar you choos squar piec destin if piec directli adjac valid move past swap posit
1583
check origin string exist given two encod string an origin string consist lowercas english letter encod step arbitrarili split sequenc number empti substr arbitrarili choos element possibl sequenc replac length numer string concaten sequenc encod string for encod origin string abcdefghijklmnop split sequenc ab cdefghijklmn choos element replac length the sequenc ab concaten element sequenc encod string ab given encod string consist lowercas english letter digit inclus return true exist origin string encod otherwis return fals note the test case gener number consecut digit exceed
1584
maximum path qualiti graph there undirect graph node number inclus you index integ array valu valu ith node you index d integ array edg edg uj vj timej undirect edg node uj vj take timej second travel node final integ maxtim a valid path graph path start node end node take maxtim second complet you visit node multipl time the qualiti valid path sum valu uniqu node visit path node ad sum return maximum qualiti valid path note there edg connect node
1585
maximum number task you can assign you task worker each task strength requir store index integ array task ith task requir task strength complet the strength worker store index integ array worker jth worker worker strength each worker assign singl task strength greater equal task strength requir worker gt task addit pill magic pill increas worker strength strength you decid worker receiv magic pill give worker magic pill given index integ array task worker integ pill strength return maximum number task complet
1586
process restrict friend request you integ indic number peopl network each person label you index d integ array restrict restrict xi yi mean person xi person yi friend directli indirectli peopl initi friend you list friend request index d integ array request request uj vj friend request person uj person vj a friend request success uj vj friend each friend request process order request occur request success request uj vj direct friend futur friend request return boolean array result result true jth friend request success fals note if uj vj direct friend request success
1587
maximum path qualiti graph there undirect graph node number inclus you index integ array valu valu ith node you index d integ array edg edg uj vj timej undirect edg node uj vj take timej second travel node final integ maxtim a valid path graph path start node end node take maxtim second complet you visit node multipl time the qualiti valid path sum valu uniqu node visit path node ad sum return maximum qualiti valid path note there edg connect node
1588
maximum number task you can assign you task worker each task strength requir store index integ array task ith task requir task strength complet the strength worker store index integ array worker jth worker worker strength each worker assign singl task strength greater equal task strength requir worker gt task addit pill magic pill increas worker strength strength you decid worker receiv magic pill give worker magic pill given index integ array task worker integ pill strength return maximum number task complet
1589
process restrict friend request you integ indic number peopl network each person label you index d integ array restrict restrict xi yi mean person xi person yi friend directli indirectli peopl initi friend you list friend request index d integ array request request uj vj friend request person uj person vj a friend request success uj vj friend each friend request process order request occur request success request uj vj direct friend futur friend request return boolean array result result true jth friend request success fals note if uj vj direct friend request success
1590
sum mirror number a mirror number posit integ lead zero read forward backward base base for mirror number the represent base base read forward backward on contrari mirror number the represent base read forward backward given base number return sum smallest mirror number
1591
number valid move combin on chessboard there chessboard piec rook queen bishop you string array piec length piec describ type rook queen bishop ith piec in addit d integ array posit length posit ri ci ith piec base coordin ri ci chessboard when make move piec choos destin squar piec travel stop a rook travel horizont vertic direct a queen travel horizont vertic diagon direct a bishop travel diagon direct you make move piec board simultan a move combin consist move perform piec everi piec instantan travel squar destin all piec start travel a move combin invalid time piec occupi squar return number valid move combin note no piec start squar you choos squar piec destin if piec directli adjac valid move past swap posit
1592
check origin string exist given two encod string an origin string consist lowercas english letter encod step arbitrarili split sequenc number empti substr arbitrarili choos element possibl sequenc replac length numer string concaten sequenc encod string for encod origin string abcdefghijklmnop split sequenc ab cdefghijklmn choos element replac length the sequenc ab concaten element sequenc encod string ab given encod string consist lowercas english letter digit inclus return true exist origin string encod otherwis return fals note the test case gener number consecut digit exceed
1593
maximum path qualiti graph there undirect graph node number inclus you index integ array valu valu ith node you index d integ array edg edg uj vj timej undirect edg node uj vj take timej second travel node final integ maxtim a valid path graph path start node end node take maxtim second complet you visit node multipl time the qualiti valid path sum valu uniqu node visit path node ad sum return maximum qualiti valid path note there edg connect node
1594
maximum number task you can assign you task worker each task strength requir store index integ array task ith task requir task strength complet the strength worker store index integ array worker jth worker worker strength each worker assign singl task strength greater equal task strength requir worker gt task addit pill magic pill increas worker strength strength you decid worker receiv magic pill give worker magic pill given index integ array task worker integ pill strength return maximum number task complet
1595
process restrict friend request you integ indic number peopl network each person label you index d integ array restrict restrict xi yi mean person xi person yi friend directli indirectli peopl initi friend you list friend request index d integ array request request uj vj friend request person uj person vj a friend request success uj vj friend each friend request process order request occur request success request uj vj direct friend futur friend request return boolean array result result true jth friend request success fals note if uj vj direct friend request success
1596
sum mirror number a mirror number posit integ lead zero read forward backward base base for mirror number the represent base base read forward backward on contrari mirror number the represent base read forward backward given base number return sum smallest mirror number
1597
count fertil pyramid land a farmer rectangular grid land row column divid unit cell each cell fertil repres barren repres all cell grid consid barren a pyramid plot land defin set cell criteria the number cell set greater cell fertil the apex pyramid topmost cell pyramid the height pyramid number row cover let apex pyramid height then plot compris cell lt lt lt lt an invers pyramid plot land defin set cell similar criteria the number cell set greater cell fertil the apex invers pyramid bottommost cell invers pyramid the height invers pyramid number row cover let apex pyramid height then plot compris cell lt lt lt lt some exampl valid invalid pyramid invers pyramid plot shown black cell fertil cell given index binari matrix grid repres farmland return total number pyramid invers pyramid plot found grid
1598
find all peopl with secret you integ indic peopl number you index d integ array meet meet xi yi timei person xi person yi meet timei a person attend multipl meet time final integ firstperson person secret initi share secret person firstperson time thi secret share time meet take place person secret more formal meet person xi secret timei share secret person yi vice versa the secret share instantan that person receiv secret share peopl meet time frame return list peopl secret meet place you return answer order
1599
maximum number task you can assign you task worker each task strength requir store index integ array task ith task requir task strength complet the strength worker store index integ array worker jth worker worker strength each worker assign singl task strength greater equal task strength requir worker gt task addit pill magic pill increas worker strength strength you decid worker receiv magic pill give worker magic pill given index integ array task worker integ pill strength return maximum number task complet
1600
process restrict friend request you integ indic number peopl network each person label you index d integ array restrict restrict xi yi mean person xi person yi friend directli indirectli peopl initi friend you list friend request index d integ array request request uj vj friend request person uj person vj a friend request success uj vj friend each friend request process order request occur request success request uj vj direct friend futur friend request return boolean array result result true jth friend request success fals note if uj vj direct friend request success
1601
sum mirror number a mirror number posit integ lead zero read forward backward base base for mirror number the represent base base read forward backward on contrari mirror number the represent base read forward backward given base number return sum smallest mirror number
1602
count fertil pyramid land a farmer rectangular grid land row column divid unit cell each cell fertil repres barren repres all cell grid consid barren a pyramid plot land defin set cell criteria the number cell set greater cell fertil the apex pyramid topmost cell pyramid the height pyramid number row cover let apex pyramid height then plot compris cell lt lt lt lt an invers pyramid plot land defin set cell similar criteria the number cell set greater cell fertil the apex invers pyramid bottommost cell invers pyramid the height invers pyramid number row cover let apex pyramid height then plot compris cell lt lt lt lt some exampl valid invalid pyramid invers pyramid plot shown black cell fertil cell given index binari matrix grid repres farmland return total number pyramid invers pyramid plot found grid
1603
find all peopl with secret you integ indic peopl number you index d integ array meet meet xi yi timei person xi person yi meet timei a person attend multipl meet time final integ firstperson person secret initi share secret person firstperson time thi secret share time meet take place person secret more formal meet person xi secret timei share secret person yi vice versa the secret share instantan that person receiv secret share peopl meet time frame return list peopl secret meet place you return answer order
1604
valid arrang pair you index d integ array pair pair starti endi an arrang pair valid index lt lt pair length endi starti return valid arrang pair note the input gener exist valid arrang pair
1605
sequenti ordin rank tracker a scenic locat repres attract score uniqu string locat score integ locat rank worst the higher score locat if score locat equal locat lexicograph smaller you build system track rank locat system initi start locat it support ad scenic locat time queri ith locat locat ad number time system queri includ current queri for system queri time return locat locat ad note test data gener time number queri exceed number locat ad system implement sortrack class sortrack initi tracker system void add string int score add scenic locat score system string queri return ith locat number time method invok includ invoc
1606
maximum fruit harvest after most k step fruit posit infinit axi you d integ array fruit fruit positioni amounti depict amounti fruit posit positioni fruit sort positioni ascend order positioni uniqu you integ startpo integ initi posit startpo from posit walk left it take step move unit axi walk step total for posit reach harvest fruit posit fruit disappear posit return maximum total number fruit harvest
1607
process restrict friend request you integ indic number peopl network each person label you index d integ array restrict restrict xi yi mean person xi person yi friend directli indirectli peopl initi friend you list friend request index d integ array request request uj vj friend request person uj person vj a friend request success uj vj friend each friend request process order request occur request success request uj vj direct friend futur friend request return boolean array result result true jth friend request success fals note if uj vj direct friend request success
1608
sum mirror number a mirror number posit integ lead zero read forward backward base base for mirror number the represent base base read forward backward on contrari mirror number the represent base read forward backward given base number return sum smallest mirror number
1609
count fertil pyramid land a farmer rectangular grid land row column divid unit cell each cell fertil repres barren repres all cell grid consid barren a pyramid plot land defin set cell criteria the number cell set greater cell fertil the apex pyramid topmost cell pyramid the height pyramid number row cover let apex pyramid height then plot compris cell lt lt lt lt an invers pyramid plot land defin set cell similar criteria the number cell set greater cell fertil the apex invers pyramid bottommost cell invers pyramid the height invers pyramid number row cover let apex pyramid height then plot compris cell lt lt lt lt some exampl valid invalid pyramid invers pyramid plot shown black cell fertil cell given index binari matrix grid repres farmland return total number pyramid invers pyramid plot found grid
1610
find all peopl with secret you integ indic peopl number you index d integ array meet meet xi yi timei person xi person yi meet timei a person attend multipl meet time final integ firstperson person secret initi share secret person firstperson time thi secret share time meet take place person secret more formal meet person xi secret timei share secret person yi vice versa the secret share instantan that person receiv secret share peopl meet time frame return list peopl secret meet place you return answer order
1611
valid arrang pair you index d integ array pair pair starti endi an arrang pair valid index lt lt pair length endi starti return valid arrang pair note the input gener exist valid arrang pair
1612
sequenti ordin rank tracker a scenic locat repres attract score uniqu string locat score integ locat rank worst the higher score locat if score locat equal locat lexicograph smaller you build system track rank locat system initi start locat it support ad scenic locat time queri ith locat locat ad number time system queri includ current queri for system queri time return locat locat ad note test data gener time number queri exceed number locat ad system implement sortrack class sortrack initi tracker system void add string int score add scenic locat score system string queri return ith locat number time method invok includ invoc
1613
maximum fruit harvest after most k step fruit posit infinit axi you d integ array fruit fruit positioni amounti depict amounti fruit posit positioni fruit sort positioni ascend order positioni uniqu you integ startpo integ initi posit startpo from posit walk left it take step move unit axi walk step total for posit reach harvest fruit posit fruit disappear posit return maximum total number fruit harvest
1614
minimum oper make array k increas you index array arr consist posit integ posit integ the array arr call k increas arr lt arr hold index lt lt for arr k increas arr lt arr lt arr lt arr lt arr lt arr lt arr lt arr lt howev arr k increas arr gt arr arr gt arr in oper choos index chang arr posit integ return minimum number oper requir make array k increas
1615
count fertil pyramid land a farmer rectangular grid land row column divid unit cell each cell fertil repres barren repres all cell grid consid barren a pyramid plot land defin set cell criteria the number cell set greater cell fertil the apex pyramid topmost cell pyramid the height pyramid number row cover let apex pyramid height then plot compris cell lt lt lt lt an invers pyramid plot land defin set cell similar criteria the number cell set greater cell fertil the apex invers pyramid bottommost cell invers pyramid the height invers pyramid number row cover let apex pyramid height then plot compris cell lt lt lt lt some exampl valid invalid pyramid invers pyramid plot shown black cell fertil cell given index binari matrix grid repres farmland return total number pyramid invers pyramid plot found grid
1616
find all peopl with secret you integ indic peopl number you index d integ array meet meet xi yi timei person xi person yi meet timei a person attend multipl meet time final integ firstperson person secret initi share secret person firstperson time thi secret share time meet take place person secret more formal meet person xi secret timei share secret person yi vice versa the secret share instantan that person receiv secret share peopl meet time frame return list peopl secret meet place you return answer order
1617
valid arrang pair you index d integ array pair pair starti endi an arrang pair valid index lt lt pair length endi starti return valid arrang pair note the input gener exist valid arrang pair
1618
sequenti ordin rank tracker a scenic locat repres attract score uniqu string locat score integ locat rank worst the higher score locat if score locat equal locat lexicograph smaller you build system track rank locat system initi start locat it support ad scenic locat time queri ith locat locat ad number time system queri includ current queri for system queri time return locat locat ad note test data gener time number queri exceed number locat ad system implement sortrack class sortrack initi tracker system void add string int score add scenic locat score system string queri return ith locat number time method invok includ invoc
1619
maximum fruit harvest after most k step fruit posit infinit axi you d integ array fruit fruit positioni amounti depict amounti fruit posit positioni fruit sort positioni ascend order positioni uniqu you integ startpo integ initi posit startpo from posit walk left it take step move unit axi walk step total for posit reach harvest fruit posit fruit disappear posit return maximum total number fruit harvest
1620
minimum oper make array k increas you index array arr consist posit integ posit integ the array arr call k increas arr lt arr hold index lt lt for arr k increas arr lt arr lt arr lt arr lt arr lt arr lt arr lt arr lt howev arr k increas arr gt arr arr gt arr in oper choos index chang arr posit integ return minimum number oper requir make array k increas
1621
abbrevi product rang you posit integ left left lt calcul product integ inclus rang left sinc product larg abbrevi step count trail zero product remov let denot count c for trail zero trail zero denot remain number digit product if gt express product lt pre gt lt suf gt lt pre gt denot digit product lt suf gt denot digit product remov trail zero if lt unchang for express repres final repres product string lt pre gt lt suf gt ec for repres return string denot abbrevi product integ inclus rang left
1622
recov origin array alic index array arr consist posit integ she chose arbitrari posit integ creat index integ array lower higher manner lower arr index lt lt higher arr index lt lt unfortun alic lost array howev rememb integ present array lower higher array integ belong help alic recov origin array given array num consist integ integ present lower remain higher return origin array arr in case answer uniqu return valid array note the test case gener exist valid array arr
1623
minimum oper make array k increas you index array arr consist posit integ posit integ the array arr call k increas arr lt arr hold index lt lt for arr k increas arr lt arr lt arr lt arr lt arr lt arr lt arr lt arr lt howev arr k increas arr gt arr arr gt arr in oper choos index chang arr posit integ return minimum number oper requir make array k increas
1624
abbrevi product rang you posit integ left left lt calcul product integ inclus rang left sinc product larg abbrevi step count trail zero product remov let denot count c for trail zero trail zero denot remain number digit product if gt express product lt pre gt lt suf gt lt pre gt denot digit product lt suf gt denot digit product remov trail zero if lt unchang for express repres final repres product string lt pre gt lt suf gt ec for repres return string denot abbrevi product integ inclus rang left
1625
recov origin array alic index array arr consist posit integ she chose arbitrari posit integ creat index integ array lower higher manner lower arr index lt lt higher arr index lt lt unfortun alic lost array howev rememb integ present array lower higher array integ belong help alic recov origin array given array num consist integ integ present lower remain higher return origin array arr in case answer uniqu return valid array note the test case gener exist valid array arr
1626
maximum employe be invit meet a compani organ meet list employe wait invit they arrang larg circular tabl capabl seat number employe the employe number each employe favorit person attend meet sit favorit person tabl the favorit person employe themself given index integ array favorit favorit denot favorit person ith employe return maximum number employe invit meet
1627
sequenti ordin rank tracker a scenic locat repres attract score uniqu string locat score integ locat rank worst the higher score locat if score locat equal locat lexicograph smaller you build system track rank locat system initi start locat it support ad scenic locat time queri ith locat locat ad number time system queri includ current queri for system queri time return locat locat ad note test data gener time number queri exceed number locat ad system implement sortrack class sortrack initi tracker system void add string int score add scenic locat score system string queri return ith locat number time method invok includ invoc
1628
maximum fruit harvest after most k step fruit posit infinit axi you d integ array fruit fruit positioni amounti depict amounti fruit posit positioni fruit sort positioni ascend order positioni uniqu you integ startpo integ initi posit startpo from posit walk left it take step move unit axi walk step total for posit reach harvest fruit posit fruit disappear posit return maximum total number fruit harvest
1629
minimum oper make array k increas you index array arr consist posit integ posit integ the array arr call k increas arr lt arr hold index lt lt for arr k increas arr lt arr lt arr lt arr lt arr lt arr lt arr lt arr lt howev arr k increas arr gt arr arr gt arr in oper choos index chang arr posit integ return minimum number oper requir make array k increas
1630
abbrevi product rang you posit integ left left lt calcul product integ inclus rang left sinc product larg abbrevi step count trail zero product remov let denot count c for trail zero trail zero denot remain number digit product if gt express product lt pre gt lt suf gt lt pre gt denot digit product lt suf gt denot digit product remov trail zero if lt unchang for express repres final repres product string lt pre gt lt suf gt ec for repres return string denot abbrevi product integ inclus rang left
1631
recov origin array alic index array arr consist posit integ she chose arbitrari posit integ creat index integ array lower higher manner lower arr index lt lt higher arr index lt lt unfortun alic lost array howev rememb integ present array lower higher array integ belong help alic recov origin array given array num consist integ integ present lower remain higher return origin array arr in case answer uniqu return valid array note the test case gener exist valid array arr
1632
maximum employe be invit meet a compani organ meet list employe wait invit they arrang larg circular tabl capabl seat number employe the employe number each employe favorit person attend meet sit favorit person tabl the favorit person employe themself given index integ array favorit favorit denot favorit person ith employe return maximum number employe invit meet
1633
stamp grid you binari matrix grid cell empti occupi you stamp size stampheight stampwidth we fit stamp follow restrict requir cover empti cell do cover occupi cell we put stamp stamp overlap stamp allow rotat stamp stay complet insid grid return true fit stamp restrict requir otherwis return fals
1634
earliest possibl day full bloom you flower seed everi seed plant begin grow bloom plant seed take time growth seed you index integ array planttim growtim length planttim number full day take plant ith seed everi day work plant seed you work plant seed consecut day plant seed complet work planttim day plant total growtim number full day take ith seed grow complet plant after day growth flower bloom stay bloom forev from begin day plant seed order return earliest day seed bloom
1635
maximum employe be invit meet a compani organ meet list employe wait invit they arrang larg circular tabl capabl seat number employe the employe number each employe favorit person attend meet sit favorit person tabl the favorit person employe themself given index integ array favorit favorit denot favorit person ith employe return maximum number employe invit meet
1636
stamp grid you binari matrix grid cell empti occupi you stamp size stampheight stampwidth we fit stamp follow restrict requir cover empti cell do cover occupi cell we put stamp stamp overlap stamp allow rotat stamp stay complet insid grid return true fit stamp restrict requir otherwis return fals
1637
earliest possibl day full bloom you flower seed everi seed plant begin grow bloom plant seed take time growth seed you index integ array planttim growtim length planttim number full day take plant ith seed everi day work plant seed you work plant seed consecut day plant seed complet work planttim day plant total growtim number full day take ith seed grow complet plant after day growth flower bloom stay bloom forev from begin day plant seed order return earliest day seed bloom
1638
maximum run time n comput you comput you integ index integ array batteri ith batteri run comput batteri minut you interest run comput simultan batteri initi insert batteri comput after integ time moment remov batteri comput insert batteri number time the insert batteri total batteri batteri comput you assum remov insert process time note batteri recharg return maximum number minut run comput simultan
1639
stamp grid you binari matrix grid cell empti occupi you stamp size stampheight stampwidth we fit stamp follow restrict requir cover empti cell do cover occupi cell we put stamp stamp overlap stamp allow rotat stamp stay complet insid grid return true fit stamp restrict requir otherwis return fals
1640
earliest possibl day full bloom you flower seed everi seed plant begin grow bloom plant seed take time growth seed you index integ array planttim growtim length planttim number full day take plant ith seed everi day work plant seed you work plant seed consecut day plant seed complet work planttim day plant total growtim number full day take ith seed grow complet plant after day growth flower bloom stay bloom forev from begin day plant seed order return earliest day seed bloom
1641
maximum run time n comput you comput you integ index integ array batteri ith batteri run comput batteri minut you interest run comput simultan batteri initi insert batteri comput after integ time moment remov batteri comput insert batteri number time the insert batteri total batteri batteri comput you assum remov insert process time note batteri recharg return maximum number minut run comput simultan
1642
number way divid long corridor along long librari corridor line seat decor plant you index string corridor length consist letter s p s repres seat p repres plant one room divid instal left index index addit room divid instal for posit indic lt lt divid instal divid corridor overlap section section seat number plant there multipl way perform divis two way posit room divid instal return number way divid corridor sinc answer larg return modulo if return
1643
earliest possibl day full bloom you flower seed everi seed plant begin grow bloom plant seed take time growth seed you index integ array planttim growtim length planttim number full day take plant ith seed everi day work plant seed you work plant seed consecut day plant seed complet work planttim day plant total growtim number full day take ith seed grow complet plant after day growth flower bloom stay bloom forev from begin day plant seed order return earliest day seed bloom
1644
maximum run time n comput you comput you integ index integ array batteri ith batteri run comput batteri minut you interest run comput simultan batteri initi insert batteri comput after integ time moment remov batteri comput insert batteri number time the insert batteri total batteri batteri comput you assum remov insert process time note batteri recharg return maximum number minut run comput simultan
1645
number way divid long corridor along long librari corridor line seat decor plant you index string corridor length consist letter s p s repres seat p repres plant one room divid instal left index index addit room divid instal for posit indic lt lt divid instal divid corridor overlap section section seat number plant there multipl way perform divis two way posit room divid instal return number way divid corridor sinc answer larg return modulo if return
1646
maximum good peopl base statement there type person the good person the person tell truth the bad person the person truth lie you index d integ array statement size repres statement made peopl more specif statement repres statement made person person bad person repres statement made person person good person repres statement made person person addit person make statement formal statement lt lt return maximum number peopl good base statement made peopl
1647
maximum run time n comput you comput you integ index integ array batteri ith batteri run comput batteri minut you interest run comput simultan batteri initi insert batteri comput after integ time moment remov batteri comput insert batteri number time the insert batteri total batteri batteri comput you assum remov insert process time note batteri recharg return maximum number minut run comput simultan
1648
number way divid long corridor along long librari corridor line seat decor plant you index string corridor length consist letter s p s repres seat p repres plant one room divid instal left index index addit room divid instal for posit indic lt lt divid instal divid corridor overlap section section seat number plant there multipl way perform divis two way posit room divid instal return number way divid corridor sinc answer larg return modulo if return
1649
maximum good peopl base statement there type person the good person the person tell truth the bad person the person truth lie you index d integ array statement size repres statement made peopl more specif statement repres statement made person person bad person repres statement made person person good person repres statement made person person addit person make statement formal statement lt lt return maximum number peopl good base statement made peopl
1650
group string you index array string word each string consist lowercas english letter no letter occur string word two string connect set letter obtain set letter oper ad letter set letter delet letter set letter replac letter set letter letter includ the array word divid intersect group a string belong group true it connect string group it string present group note string word group manner string belong group connect string present group it prove arrang uniqu return array an size an total number group word divid an size largest group
1651
number way divid long corridor along long librari corridor line seat decor plant you index string corridor length consist letter s p s repres seat p repres plant one room divid instal left index index addit room divid instal for posit indic lt lt divid instal divid corridor overlap section section seat number plant there multipl way perform divis two way posit room divid instal return number way divid corridor sinc answer larg return modulo if return
1652
maximum good peopl base statement there type person the good person the person tell truth the bad person the person truth lie you index d integ array statement size repres statement made peopl more specif statement repres statement made person person bad person repres statement made person person good person repres statement made person person addit person make statement formal statement lt lt return maximum number peopl good base statement made peopl
1653
group string you index array string word each string consist lowercas english letter no letter occur string word two string connect set letter obtain set letter oper ad letter set letter delet letter set letter replac letter set letter letter includ the array word divid intersect group a string belong group true it connect string group it string present group note string word group manner string belong group connect string present group it prove arrang uniqu return array an size an total number group word divid an size largest group
1654
minimum differ sum after remov element you index integ array num consist element you allow remov subsequ element size num the remain element divid equal part the element belong part sum sumfirst the element belong part sum sumsecond the differ sum part denot sumfirst sumsecond for sumfirst sumsecond differ similarli sumfirst sumsecond differ return minimum differ sum part remov element
1655
find substr with given hash valu the hash index string length integ comput function hash val val val pk mod where val repres index alphabet val val you string integ power modulo hashvalu return substr length hash power modulo hashvalu the test case gener answer exist a substr contigu empti sequenc charact string
1656
group string you index array string word each string consist lowercas english letter no letter occur string word two string connect set letter obtain set letter oper ad letter set letter delet letter set letter replac letter set letter letter includ the array word divid intersect group a string belong group true it connect string group it string present group note string word group manner string belong group connect string present group it prove arrang uniqu return array an size an maximum number group word divid an size largest group
1657
minimum differ sum after remov element you index integ array num consist element you allow remov subsequ element size num the remain element divid equal part the element belong part sum sumfirst the element belong part sum sumsecond the differ sum part denot sumfirst sumsecond for sumfirst sumsecond differ similarli sumfirst sumsecond differ return minimum differ sum part remov element
1658
minimum time remov all car contain illeg good you index binari string repres sequenc train car denot ith car illeg good denot ith car illeg good as train conductor rid car illeg good you oper number time remov train car left end remov take unit time remov train car end remov length take unit time remov train car sequenc take unit time return minimum time remov car illeg good note empti sequenc car consid car illeg good
1659
group string you index array string word each string consist lowercas english letter no letter occur string word two string connect set letter obtain set letter oper ad letter set letter delet letter set letter replac letter set letter letter includ the array word divid intersect group a string belong group true it connect string group it string present group note string word group manner string belong group connect string present group it prove arrang uniqu return array an size an maximum number group word divid an size largest group
1660
minimum differ sum after remov element you index integ array num consist element you allow remov subsequ element size num the remain element divid equal part the element belong part sum sumfirst the element belong part sum sumsecond the differ sum part denot sumfirst sumsecond for sumfirst sumsecond differ similarli sumfirst sumsecond differ return minimum differ sum part remov element
1661
minimum time remov all car contain illeg good you index binari string repres sequenc train car denot ith car illeg good denot ith car illeg good as train conductor rid car illeg good you oper number time remov train car left end remov take unit time remov train car end remov length take unit time remov train car sequenc take unit time return minimum time remov car illeg good note empti sequenc car consid car illeg good
1662
maximum and sum array you integ array num length integ numslot numslot gt there numslot slot number numslot you place integ slot slot number the and sum placement sum bitwis and number respect slot number for and sum place number slot slot equal and and and and return maximum and sum num numslot slot
1663
minimum differ sum after remov element you index integ array num consist element you allow remov subsequ element size num the remain element divid equal part the element belong part sum sumfirst the element belong part sum sumsecond the differ sum part denot sumfirst sumsecond for sumfirst sumsecond differ similarli sumfirst sumsecond differ return minimum differ sum part remov element
1664
minimum time remov all car contain illeg good you index binari string repres sequenc train car denot ith car illeg good denot ith car illeg good as train conductor rid car illeg good you oper number time remov train car left end remov take unit time remov train car end remov length take unit time remov train car sequenc take unit time return minimum time remov car illeg good note empti sequenc car consid car illeg good
1665
maximum and sum array you integ array num length integ numslot numslot gt there numslot slot number numslot you place integ slot slot number the and sum placement sum bitwis and number respect slot number for and sum place number slot slot equal and and and and return maximum and sum num numslot slot
1666
count good triplet array you index array num num length permut a good triplet set distinct valu present increas order posit num num in word po index num po index num good triplet set lt lt po lt po lt po po lt po lt po return total number good triplet
1667
minimum time remov all car contain illeg good you index binari string repres sequenc train car denot ith car illeg good denot ith car illeg good as train conductor rid car illeg good you oper number time remov train car left end remov take unit time remov train car end remov length take unit time remov train car sequenc take unit time return minimum time remov car illeg good note empti sequenc car consid car illeg good
1668
maximum and sum array you integ array num length integ numslot numslot gt there numslot slot number numslot you place integ slot slot number the and sum placement sum bitwis and number respect slot number for and sum place number slot slot equal and and and and return maximum and sum num numslot slot
1669
count good triplet array you index array num num length permut a good triplet set distinct valu present increas order posit num num in word po index num po index num good triplet set lt lt po lt po lt po po lt po lt po return total number good triplet
1670
count array pair divis k given index integ array num length integ return number pair lt lt lt num num divis
1671
maximum and sum array you integ array num length integ numslot numslot gt there numslot slot number numslot you place integ slot slot number the and sum placement sum bitwis and number respect slot number for and sum place number slot slot equal and and and and return maximum and sum num numslot slot
1672
count good triplet array you index array num num length permut a good triplet set distinct valu present increas order posit num num in word po index num po index num good triplet set lt lt po lt po lt po po lt po lt po return total number good triplet
1673
count array pair divis k given index integ array num length integ return number pair lt lt lt num num divis
1674
minimum time finish race you index d integ array tire tire fi ri ith tire finish xth success lap fi ri second for fi ri tire finish st lap second lap second lap second you integ changetim integ numlap the race consist numlap lap start race tire you unlimit suppli tire lap chang tire includ current tire type wait changetim second return minimum time finish race
1675
count good triplet array you index array num num length permut a good triplet set distinct valu present increas order posit num num in word po index num po index num good triplet set lt lt po lt po lt po po lt po lt po return total number good triplet
1676
count array pair divis k given index integ array num length integ return number pair lt lt lt num num divis
1677
minimum time finish race you index d integ array tire tire fi ri ith tire finish xth success lap fi ri second for fi ri tire finish st lap second lap second lap second you integ changetim integ numlap the race consist numlap lap start race tire you unlimit suppli tire lap chang tire includ current tire type wait changetim second return minimum time finish race
1678
minimum number move make palindrom you string consist lowercas english letter in move select adjac charact swap return minimum number move need make palindrom note input gener convert palindrom
1679
count array pair divis k given index integ array num length integ return number pair lt lt lt num num divis
1680
minimum time finish race you index d integ array tire tire fi ri ith tire finish xth success lap fi ri second for fi ri tire finish st lap second lap second lap second you integ changetim integ numlap the race consist numlap lap start race tire you unlimit suppli tire lap chang tire includ current tire type wait changetim second return minimum time finish race
1681
minimum number move make palindrom you string consist lowercas english letter in move select adjac charact swap return minimum number move need make palindrom note input gener convert palindrom
1682
replac non coprim number array you array integ num perform step find adjac number num coprim if number found stop process otherwis delet number replac lcm least common multipl repeat process long find adjac coprim number return final modifi array it shown replac adjac coprim number arbitrari order lead result the test case gener valu final array equal two valu coprim gcd gt gcd greatest common divisor
1683
minimum time finish race you index d integ array tire tire fi ri ith tire finish xth success lap fi ri second for fi ri tire finish st lap second lap second lap second you integ changetim integ numlap the race consist numlap lap start race tire you unlimit suppli tire lap chang tire includ current tire type wait changetim second return minimum time finish race
1684
minimum number move make palindrom you string consist lowercas english letter in move select adjac charact swap return minimum number move need make palindrom note input gener convert palindrom
1685
replac non coprim number array you array integ num perform step find adjac number num coprim if number found stop process otherwis delet number replac lcm least common multipl repeat process long find adjac coprim number return final modifi array it shown replac adjac coprim number arbitrari order lead result the test case gener valu final array equal two valu coprim gcd gt gcd greatest common divisor
1686
minimum weight subgraph with requir path you integ denot number node weight direct graph the node number you d integ array edg edg fromi toi weighti denot exist direct edg fromi toi weight weighti lastli distinct integ src src dest denot distinct node graph return minimum weight subgraph graph reach dest src src set edg subgraph in case subgraph exist return a subgraph graph vertic edg subset origin graph the weight subgraph sum weight constitu edg
1687
minimum number move make palindrom you string consist lowercas english letter in move select adjac charact swap return minimum number move need make palindrom note input gener convert palindrom
1688
replac non coprim number array you array integ num perform step find adjac number num coprim if number found stop process otherwis delet number replac lcm least common multipl repeat process long find adjac coprim number return final modifi array it shown replac adjac coprim number arbitrari order lead result the test case gener valu final array equal two valu coprim gcd gt gcd greatest common divisor
1689
minimum weight subgraph with requir path you integ denot number node weight direct graph the node number you d integ array edg edg fromi toi weighti denot exist direct edg fromi toi weight weighti lastli distinct integ src src dest denot distinct node graph return minimum weight subgraph graph reach dest src src set edg subgraph in case subgraph exist return a subgraph graph vertic edg subset origin graph the weight subgraph sum weight constitu edg
1690
minimum white tile after cover with carpet you index binari string floor repres color tile floor floor denot ith tile floor color black on hand floor denot ith tile floor color white you numcarpet carpetlen you numcarpet black carpet length carpetlen tile cover tile carpet number white tile visibl minimum carpet overlap return minimum number white tile visibl
1691
replac non coprim number array you array integ num perform step find adjac number num coprim if number found stop process otherwis delet number replac lcm least common multipl repeat process long find adjac coprim number return final modifi array it shown replac adjac coprim number arbitrari order lead result the test case gener valu final array equal two valu coprim gcd gt gcd greatest common divisor
1692
minimum weight subgraph with requir path you integ denot number node weight direct graph the node number you d integ array edg edg fromi toi weighti denot exist direct edg fromi toi weight weighti lastli distinct integ src src dest denot distinct node graph return minimum weight subgraph graph reach dest src src set edg subgraph in case subgraph exist return a subgraph graph vertic edg subset origin graph the weight subgraph sum weight constitu edg
1693
minimum white tile after cover with carpet you index binari string floor repres color tile floor floor denot ith tile floor color black on hand floor denot ith tile floor color white you numcarpet carpetlen you numcarpet black carpet length carpetlen tile cover tile carpet number white tile visibl minimum carpet overlap return minimum number white tile visibl
1694
longest substr one repeat charact you index string you index string querycharact length index array integ indic queryindic length describ queri the ith queri updat charact index queryindic charact querycharact return array length length length length longest substr consist repeat charact ith queri perform
1695
minimum weight subgraph with requir path you integ denot number node weight direct graph the node number you d integ array edg edg fromi toi weighti denot exist direct edg fromi toi weight weighti lastli distinct integ src src dest denot distinct node graph return minimum weight subgraph graph reach dest src src set edg subgraph in case subgraph exist return a subgraph graph vertic edg subset origin graph the weight subgraph sum weight constitu edg
1696
minimum white tile after cover with carpet you index binari string floor repres color tile floor floor denot ith tile floor color black on hand floor denot ith tile floor color white you numcarpet carpetlen you numcarpet black carpet length carpetlen tile cover tile carpet number white tile visibl minimum carpet overlap return minimum number white tile visibl
1697
longest substr one repeat charact you index string you index string querycharact length index array integ indic queryindic length describ queri the ith queri updat charact index queryindic charact querycharact return array length length length length longest substr consist repeat charact ith queri perform
1698
maximum valu k coin from pile there pile coin tabl each pile consist posit number coin assort denomin in move choos coin top pile remov add wallet given list pile pile list integ denot composit ith pile top bottom posit integ return maximum total coin wallet choos coin optim
1699
minimum number move make palindrom you string consist lowercas english letter in move select adjac charact swap return minimum number move need make palindrom note input gener convert palindrom
1700
replac non coprim number array you array integ num perform step find adjac number num coprim if number found stop process otherwis delet number replac lcm least common multipl repeat process long find adjac coprim number return final modifi array it shown replac adjac coprim number arbitrari order lead result the test case gener valu final array equal two valu coprim gcd gt gcd greatest common divisor
1701
minimum weight subgraph with requir path you integ denot number node weight direct graph the node number you d integ array edg edg fromi toi weighti denot exist direct edg fromi toi weight weighti lastli distinct integ src src dest denot distinct node graph return minimum weight subgraph graph reach dest src src set edg subgraph in case subgraph exist return a subgraph graph vertic edg subset origin graph the weight subgraph sum weight constitu edg
1702
minimum white tile after cover with carpet you index binari string floor repres color tile floor floor denot ith tile floor color black on hand floor denot ith tile floor color white you numcarpet carpetlen you numcarpet black carpet length carpetlen tile cover tile carpet number white tile visibl minimum carpet overlap return minimum number white tile visibl
1703
longest substr one repeat charact you index string you index string querycharact length index array integ indic queryindic length describ queri the ith queri updat charact index queryindic charact querycharact return array length length length length longest substr consist repeat charact ith queri perform
1704
maximum valu k coin from pile there pile coin tabl each pile consist posit number coin assort denomin in move choos coin top pile remov add wallet given list pile pile list integ denot composit ith pile top bottom posit integ return maximum total coin wallet choos coin optim
1705
sum score built string you build string length charact time prepend charact front string the string label string length label si for abaca ca aca the score si length longest common prefix si sn note sn given final string return sum score si
1706
encrypt decrypt string you charact array key uniqu charact string array valu string length you string array dictionari permit origin string decrypt you implement data structur encrypt decrypt index string a string encrypt process for charact string find index satisfi key key replac valu string a string decrypt process for substr length occur index string find valu if multipl valid choos thi mean string multipl string decrypt replac key string implement encrypt class encrypt char key string valu string dictionari initi encrypt class key valu dictionari string encrypt string word encrypt word encrypt process return encrypt string int decrypt string word return number string word decrypt dictionari
1707
minimum white tile after cover with carpet you index binari string floor repres color tile floor floor denot ith tile floor color black on hand floor denot ith tile floor color white you numcarpet carpetlen you numcarpet black carpet length carpetlen tile cover tile carpet number white tile visibl minimum carpet overlap return minimum number white tile visibl
1708
longest substr one repeat charact you index string you index string querycharact length index array integ indic queryindic length describ queri the ith queri updat charact index queryindic charact querycharact return array length length length length longest substr consist repeat charact ith queri perform
1709
maximum valu k coin from pile there pile coin tabl each pile consist posit number coin assort denomin in move choos coin top pile remov add wallet given list pile pile list integ denot composit ith pile top bottom posit integ return maximum total coin wallet choos coin optim
1710
sum score built string you build string length charact time prepend charact front string the string label string length label si for abaca ca aca the score si length longest common prefix si sn note sn given final string return sum score si
1711
encrypt decrypt string you charact array key uniqu charact string array valu string length you string array dictionari permit origin string decrypt you implement data structur encrypt decrypt index string a string encrypt process for charact string find index satisfi key key replac valu string note case charact string present key encrypt process carri empti string return a string decrypt process for substr length occur index string find valu if multipl valid choos thi mean string multipl string decrypt replac key string implement encrypt class encrypt char key string valu string dictionari initi encrypt class key valu dictionari string encrypt string word encrypt word encrypt process return encrypt string int decrypt string word return number string word decrypt dictionari
1712
maximum total beauti garden alic caretak garden plant flower maxim total beauti garden you index integ array flower size flower number flower plant ith garden flower plant remov you integ newflow maximum number flower alic addit plant you integ target full partial a garden consid complet target flower the total beauti garden determin sum the number complet garden multipli full the minimum number flower incomplet garden multipli partial if incomplet garden return maximum total beauti alic obtain plant newflow flower
1713
minimum white tile after cover with carpet you index binari string floor repres color tile floor floor denot ith tile floor color black on hand floor denot ith tile floor color white you numcarpet carpetlen you numcarpet black carpet length carpetlen tile cover tile carpet number white tile visibl minimum carpet overlap return minimum number white tile visibl
1714
longest substr one repeat charact you index string you index string querycharact length index array integ indic queryindic length describ queri the ith queri updat charact index queryindic charact querycharact return array length length length length longest substr consist repeat charact ith queri perform
1715
maximum valu k coin from pile there pile coin tabl each pile consist posit number coin assort denomin in move choos coin top pile remov add wallet given list pile pile list integ denot composit ith pile top bottom posit integ return maximum total coin wallet choos coin optim
1716
sum score built string you build string length charact time prepend charact front string the string label string length label si for abaca ca aca the score si length longest common prefix si sn note sn given final string return sum score si
1717
encrypt decrypt string you charact array key uniqu charact string array valu string length you string array dictionari permit origin string decrypt you implement data structur encrypt decrypt index string a string encrypt process for charact string find index satisfi key key replac valu string note case charact string present key encrypt process carri empti string return a string decrypt process for substr length occur index string find valu if multipl valid choos thi mean string multipl string decrypt replac key string implement encrypt class encrypt char key string valu string dictionari initi encrypt class key valu dictionari string encrypt string word encrypt word encrypt process return encrypt string int decrypt string word return number string word decrypt dictionari
1718
maximum total beauti garden alic caretak garden plant flower maxim total beauti garden you index integ array flower size flower number flower plant ith garden flower plant remov you integ newflow maximum number flower alic addit plant you integ target full partial a garden consid complet target flower the total beauti garden determin sum the number complet garden multipli full the minimum number flower incomplet garden multipli partial if incomplet garden return maximum total beauti alic obtain plant newflow flower
1719
maximum score node sequenc there undirect graph node number you index integ array score length score denot score node you d integ array edg edg ai bi denot exist undirect edg connect node ai bi a node sequenc valid meet condit there edg connect pair adjac node sequenc no node appear sequenc the score node sequenc defin sum score node sequenc return maximum score valid node sequenc length if sequenc exist return
1720
longest path with differ adjac charact you tree connect undirect graph cycl root node consist node number the tree repres index array size node sinc node root you string length charact assign node return length longest path tree pair adjac node path charact assign
1721
maximum total beauti garden alic caretak garden plant flower maxim total beauti garden you index integ array flower size flower number flower plant ith garden flower plant remov you integ newflow maximum number flower alic addit plant you integ target full partial a garden consid complet target flower the total beauti garden determin sum the number complet garden multipli full the minimum number flower incomplet garden multipli partial if incomplet garden return maximum total beauti alic obtain plant newflow flower
1722
maximum score node sequenc there undirect graph node number you index integ array score length score denot score node you d integ array edg edg ai bi denot exist undirect edg connect node ai bi a node sequenc valid meet condit there edg connect pair adjac node sequenc no node appear sequenc the score node sequenc defin sum score node sequenc return maximum score valid node sequenc length if sequenc exist return
1723
longest path with differ adjac charact you tree connect undirect graph cycl root node consist node number the tree repres index array size node sinc node root you string length charact assign node return length longest path tree pair adjac node path charact assign
1724
number flower full bloom you index d integ array flower flower starti endi mean ith flower full bloom starti endi inclus you index integ array person size person time ith person arriv flower return integ array answer size answer number flower full bloom ith person arriv
1725
sum score built string you build string length charact time prepend charact front string the string label string length label si for abaca ca aca the score si length longest common prefix si sn note sn given final string return sum score si
1726
encrypt decrypt string you charact array key uniqu charact string array valu string length you string array dictionari permit origin string decrypt you implement data structur encrypt decrypt index string a string encrypt process for charact string find index satisfi key key replac valu string note case charact string present key encrypt process carri empti string return a string decrypt process for substr length occur index string find valu if multipl valid choos thi mean string multipl string decrypt replac key string implement encrypt class encrypt char key string valu string dictionari initi encrypt class key valu dictionari string encrypt string word encrypt word encrypt process return encrypt string int decrypt string word return number string word decrypt dictionari
1727
maximum total beauti garden alic caretak garden plant flower maxim total beauti garden you index integ array flower size flower number flower plant ith garden flower plant remov you integ newflow maximum number flower alic addit plant you integ target full partial a garden consid complet target flower the total beauti garden determin sum the number complet garden multipli full the minimum number flower incomplet garden multipli partial if incomplet garden return maximum total beauti alic obtain plant newflow flower
1728
maximum score node sequenc there undirect graph node number you index integ array score length score denot score node you d integ array edg edg ai bi denot exist undirect edg connect node ai bi a node sequenc valid meet condit there edg connect pair adjac node sequenc no node appear sequenc the score node sequenc defin sum score node sequenc return maximum score valid node sequenc length if sequenc exist return
1729
longest path with differ adjac charact you tree connect undirect graph cycl root node consist node number the tree repres index array size node sinc node root you string length charact assign node return length longest path tree pair adjac node path charact assign
1730
number flower full bloom you index d integ array flower flower starti endi mean ith flower full bloom starti endi inclus you index integ array person size person time ith person arriv flower return integ array answer size answer number flower full bloom ith person arriv
1731
escap spread fire you index d integ array grid size repres field each cell valu repres grass repres fire repres wall fire pass you situat top left cell travel safehous bottom cell everi minut move adjac grass cell after move fire cell spread adjac cell wall return maximum number minut stay initi posit move safe reach safehous if imposs return if reach safehous minut stay return note fire spread safehous immedi reach count safe reach safehous a cell adjac cell directli north east south west side touch
1732
total appeal a string the appeal string number distinct charact found string for appeal abbca distinct charact given string return total appeal substr a substr contigu sequenc charact string
1733
number flower full bloom you index d integ array flower flower starti endi mean ith flower full bloom starti endi inclus you index integ array person size person time ith person arriv flower return integ array answer size answer number flower full bloom ith person arriv
1734
escap spread fire you index d integ array grid size repres field each cell valu repres grass repres fire repres wall fire pass you situat top left cell travel safehous bottom cell everi minut move adjac grass cell after move fire cell spread adjac cell wall return maximum number minut stay initi posit move safe reach safehous if imposs return if reach safehous minut stay return note fire spread safehous immedi reach count safe reach safehous a cell adjac cell directli north east south west side touch
1735
total appeal a string the appeal string number distinct charact found string for appeal abbca distinct charact given string return total appeal substr a substr contigu sequenc charact string
1736
check there is valid parenthes string path a parenthes string empti string consist it valid condit true it it written ab a concaten b a b valid parenthes string it written a a valid parenthes string you matrix parenthes grid a valid parenthes string path grid path satisfi condit the path start upper left cell the path end bottom cell the path move the result parenthes string form path valid return true exist valid parenthes string path grid otherwis return fals
1737
maximum score node sequenc there undirect graph node number you index integ array score length score denot score node you d integ array edg edg ai bi denot exist undirect edg connect node ai bi a node sequenc valid meet condit there edg connect pair adjac node sequenc no node appear sequenc the score node sequenc defin sum score node sequenc return maximum score valid node sequenc length if sequenc exist return
1738
longest path with differ adjac charact you tree connect undirect graph cycl root node consist node number the tree repres index array size node sinc node root you string length charact assign node return length longest path tree pair adjac node path charact assign
1739
number flower full bloom you index d integ array flower flower starti endi mean ith flower full bloom starti endi inclus you index integ array person size person time ith person arriv flower return integ array answer size answer number flower full bloom ith person arriv
1740
escap spread fire you index d integ array grid size repres field each cell valu repres grass repres fire repres wall fire pass you situat top left cell travel safehous bottom cell everi minut move adjac grass cell after move fire cell spread adjac cell wall return maximum number minut stay initi posit move safe reach safehous if imposs return if reach safehous minut stay return note fire spread safehous immedi reach count safe reach safehous a cell adjac cell directli north east south west side touch
1741
total appeal a string the appeal string number distinct charact found string for appeal abbca distinct charact given string return total appeal substr a substr contigu sequenc charact string
1742
check there is valid parenthes string path a parenthes string empti string consist it valid condit true it it written ab a concaten b a b valid parenthes string it written a a valid parenthes string you matrix parenthes grid a valid parenthes string path grid path satisfi condit the path start upper left cell the path end bottom cell the path move the result parenthes string form path valid return true exist valid parenthes string path grid otherwis return fals
1743
substr with largest varianc the varianc string defin largest differ number occurr charact present string note charact given string consist lowercas english letter return largest varianc substr a substr contigu sequenc charact string
1744
count integ interv given empti set interv implement data structur add interv set interv count number integ present interv implement countinterv class countinterv initi object empti set interv void add int left int add interv left set interv int count return number integ present interv note interv left denot integ left lt lt
1745
check there is valid parenthes string path a parenthes string empti string consist it valid condit true it it written ab a concaten b a b valid parenthes string it written a a valid parenthes string you matrix parenthes grid a valid parenthes string path grid path satisfi condit the path start upper left cell the path end bottom cell the path move the result parenthes string form path valid return true exist valid parenthes string path grid otherwis return fals
1746
substr with largest varianc the varianc string defin largest differ number occurr charact present string note charact given string consist lowercas english letter return largest varianc substr a substr contigu sequenc charact string
1747
count integ interv given empti set interv implement data structur add interv set interv count number integ present interv implement countinterv class countinterv initi object empti set interv void add int left int add interv left set interv int count return number integ present interv note interv left denot integ left lt lt
1748
sum total strength wizard as ruler kingdom armi wizard command you index integ array strength strength denot strength ith wizard for contigu group wizard wizard strength form subarray strength total strength defin product valu the strength weakest wizard group the total individu strength wizard group return sum total strength contigu group wizard sinc answer larg return modulo a subarray contigu empti sequenc element array
1749
total appeal a string the appeal string number distinct charact found string for appeal abbca distinct charact given string return total appeal substr a substr contigu sequenc charact string
1750
check there is valid parenthes string path a parenthes string empti string consist it valid condit true it it written ab a concaten b a b valid parenthes string it written a a valid parenthes string you matrix parenthes grid a valid parenthes string path grid path satisfi condit the path start upper left cell the path end bottom cell the path move the result parenthes string form path valid return true exist valid parenthes string path grid otherwis return fals
1751
substr with largest varianc the varianc string defin largest differ number occurr charact present string note charact given string consist lowercas english letter return largest varianc substr a substr contigu sequenc charact string
1752
count integ interv given empti set interv implement data structur add interv set interv count number integ present interv implement countinterv class countinterv initi object empti set interv void add int left int add interv left set interv int count return number integ present interv note interv left denot integ left lt lt
1753
sum total strength wizard as ruler kingdom armi wizard command you index integ array strength strength denot strength ith wizard for contigu group wizard wizard strength form subarray strength total strength defin product valu the strength weakest wizard group the total individu strength wizard group return sum total strength contigu group wizard sinc answer larg return modulo a subarray contigu empti sequenc element array
1754
book concert ticket group a concert hall row number seat number you design ticket system alloc seat case if group spectat sit row if member group spectat seat they sit note spectat picki henc they book seat member group seat row number equal maxrow maxrow vari group group in case multipl row choos row smallest number chosen if multipl seat choos row seat smallest number chosen implement bookmyshow class bookmyshow int int initi object number row number seat row int gather int int maxrow return array length denot row seat number seat alloc member group sit in word return smallest seat valid empti row lt maxrow return case alloc seat group boolean scatter int int maxrow return true member group alloc seat row maxrow sit if seat alloc alloc seat group smallest row number smallest seat number row otherwis return fals
1755
minimum obstacl remov reach corner you index d integ array grid size each cell valu repres empti cell repres obstacl remov you move left empti cell return minimum number obstacl remov move upper left corner lower corner
1756
minimum obstacl remov reach corner you index d integ array grid size each cell valu repres empti cell repres obstacl remov you move left empti cell return minimum number obstacl remov move upper left corner lower corner
1757
sum total strength wizard as ruler kingdom armi wizard command you index integ array strength strength denot strength ith wizard for contigu group wizard wizard strength form subarray strength total strength defin product valu the strength weakest wizard group the total individu strength wizard group return sum total strength contigu group wizard sinc answer larg return modulo a subarray contigu empti sequenc element array
1758
book concert ticket group a concert hall row number seat number you design ticket system alloc seat case if group spectat sit row if member group spectat seat they sit note spectat picki henc they book seat member group seat row number equal maxrow maxrow vari group group in case multipl row choos row smallest number chosen if multipl seat choos row seat smallest number chosen implement bookmyshow class bookmyshow int int initi object number row number seat row int gather int int maxrow return array length denot row seat number seat alloc member group sit in word return smallest seat valid empti row lt maxrow return case alloc seat group boolean scatter int int maxrow return true member group alloc seat row maxrow sit if seat alloc alloc seat group smallest row number smallest seat number row otherwis return fals
1759
minimum obstacl remov reach corner you index d integ array grid size each cell valu repres empti cell repres obstacl remov you move left empti cell return minimum number obstacl remov move upper left corner lower corner
1760
design text editor design text editor cursor add text cursor delet text cursor simul backspac key move cursor left when delet text charact left cursor delet the cursor remain actual text move more formal lt cursor posit lt currenttext length hold implement texteditor class texteditor initi object empti text void addtext string text append text cursor the cursor end text int deletetext int delet charact left cursor return number charact delet string cursorleft int move cursor left time return min len charact left cursor len number charact left cursor string cursorright int move cursor time return min len charact left cursor len number charact left cursor
1761
count integ interv given empti set interv implement data structur add interv set interv count number integ present interv implement countinterv class countinterv initi object empti set interv void add int left int add interv left set interv int count return number integ present interv note interv left denot integ left lt lt
1762
sum total strength wizard as ruler kingdom armi wizard command you index integ array strength strength denot strength ith wizard for contigu group wizard wizard strength form subarray strength total strength defin product valu the strength weakest wizard group the total individu strength wizard group return sum total strength contigu group wizard sinc answer larg return modulo a subarray contigu empti sequenc element array
1763
book concert ticket group a concert hall row number seat number you design ticket system alloc seat case if group spectat sit row if member group spectat seat they sit note spectat picki henc they book seat member group seat row number equal maxrow maxrow vari group group in case multipl row choos row smallest number chosen if multipl seat choos row seat smallest number chosen implement bookmyshow class bookmyshow int int initi object number row number seat row int gather int int maxrow return array length denot row seat number seat alloc member group sit in word return smallest seat valid empti row lt maxrow return case alloc seat group boolean scatter int int maxrow return true member group alloc seat row maxrow sit if seat alloc alloc seat group smallest row number smallest seat number row otherwis return fals
1764
minimum obstacl remov reach corner you index d integ array grid size each cell valu repres empti cell repres obstacl remov you move left empti cell return minimum number obstacl remov move upper left corner lower corner
1765
design text editor design text editor cursor add text cursor delet text cursor simul backspac key move cursor left when delet text charact left cursor delet the cursor remain actual text move more formal lt cursor posit lt currenttext length hold implement texteditor class texteditor initi object empti text void addtext string text append text cursor the cursor end text int deletetext int delet charact left cursor return number charact delet string cursorleft int move cursor left time return min len charact left cursor len number charact left cursor string cursorright int move cursor time return min len charact left cursor len number charact left cursor
1766
match substr after replac you string you d charact array map map oldi newi replac number oldi charact newi each charact replac return true make substr replac charact map otherwis return fals a substr contigu empti sequenc charact string
1767
count subarray with score less than k the score array defin product sum length for score given posit integ array num integ return number empti subarray num score strictli a subarray contigu sequenc element array
1768
name compani you array string idea repres list name process name compani the process name compani choos distinct name idea call ideaa ideab swap letter ideaa ideab if name found origin idea ideaa ideab concaten ideaa ideab separ space valid compani otherwis valid return number distinct valid name compani
1769
match substr after replac you string you d charact array map map oldi newi replac number oldi charact newi each charact replac return true make substr replac charact map otherwis return fals a substr contigu empti sequenc charact string
1770
count subarray with score less than k the score array defin product sum length for score given posit integ array num integ return number empti subarray num score strictli a subarray contigu sequenc element array
1771
name compani you array string idea repres list name process name compani the process name compani choos distinct name idea call ideaa ideab swap letter ideaa ideab if name found origin idea ideaa ideab concaten ideaa ideab separ space valid compani otherwis valid return number distinct valid name compani
1772
sell piec wood you integ repres height width rectangular piec wood you d integ array price price wi pricei sell rectangular piec wood height width wi pricei dollar to cut piec wood make vertic horizont cut entir height width piec split smaller piec after cut piec wood number smaller piec sell piec price you sell multipl piec shape sell shape the grain wood make differ rotat piec swap height width return maximum money earn cut piec wood note cut piec wood time
1773
design text editor design text editor cursor add text cursor delet text cursor simul backspac key move cursor left when delet text charact left cursor delet the cursor remain actual text move more formal lt cursor posit lt currenttext length hold implement texteditor class texteditor initi object empti text void addtext string text append text cursor the cursor end text int deletetext int delet charact left cursor return number charact delet string cursorleft int move cursor left time return min len charact left cursor len number charact left cursor string cursorright int move cursor time return min len charact left cursor len number charact left cursor
1774
match substr after replac you string you d charact array map map oldi newi perform oper number time replac charact oldi newi each charact replac return true make substr replac charact map otherwis return fals a substr contigu empti sequenc charact string
1775
count subarray with score less than k the score array defin product sum length for score given posit integ array num integ return number empti subarray num score strictli a subarray contigu sequenc element array
1776
name compani you array string idea repres list name process name compani the process name compani choos distinct name idea call ideaa ideab swap letter ideaa ideab if name found origin idea ideaa ideab concaten ideaa ideab separ space valid compani otherwis valid return number distinct valid name compani
1777
sell piec wood you integ repres height width rectangular piec wood you d integ array price price wi pricei sell rectangular piec wood height width wi pricei dollar to cut piec wood make vertic horizont cut entir height width piec split smaller piec after cut piec wood number smaller piec sell piec price you sell multipl piec shape sell shape the grain wood make differ rotat piec swap height width return maximum money earn cut piec wood note cut piec wood time
1778
number distinct roll sequenc you integ you roll fair side dice time determin total number distinct sequenc roll condit satisfi the greatest common divisor adjac valu sequenc equal there gap roll equal valu roll more formal ith roll equal jth roll ab gt return total number distinct sequenc sinc answer larg return modulo two sequenc consid distinct element
1779
maximum score of splice array you index integ array num num length you choos integ left lt left lt lt swap subarray num left subarray num left for num num choos left num num you choos appli mention oper the score array maximum sum num sum num sum arr sum element array arr return maximum score a subarray contigu sequenc element array arr left denot subarray element num indic left inclus
1780
minimum score after remov tree there undirect connect tree node label edg you index integ array num length num repres ith node you d integ array edg length edg ai bi edg node ai bi tree remov distinct edg tree form connect compon for pair remov edg step defin get xor valu node compon the differ largest xor smallest xor score pair for compon node valu the xor valu the largest xor smallest xor the score return minimum score pair edg remov tree
1781
number distinct roll sequenc you integ you roll fair side dice time determin total number distinct sequenc roll condit satisfi the greatest common divisor adjac valu sequenc equal there gap roll equal valu roll more formal ith roll equal jth roll ab gt return total number distinct sequenc sinc answer larg return modulo two sequenc consid distinct element
1782
maximum score of splice array you index integ array num num length you choos integ left lt left lt lt swap subarray num left subarray num left for num num choos left num num you choos appli mention oper the score array maximum sum num sum num sum arr sum element array arr return maximum score a subarray contigu sequenc element array arr left denot subarray element num indic left inclus
1783
minimum score after remov tree there undirect connect tree node label edg you index integ array num length num repres ith node you d integ array edg length edg ai bi edg node ai bi tree remov distinct edg tree form connect compon for pair remov edg step defin get xor valu node compon the differ largest xor smallest xor score pair for compon node valu the xor valu the largest xor smallest xor the score return minimum score pair edg remov tree
1784
number increas path grid you integ matrix grid move cell adjac cell direct return number strictli increas path grid start cell end cell sinc answer larg return modulo two path consid sequenc visit cell
1785
name compani you array string idea repres list name process name compani the process name compani choos distinct name idea call ideaa ideab swap letter ideaa ideab if name found origin idea ideaa ideab concaten ideaa ideab separ space valid compani otherwis valid return number distinct valid name compani
1786
sell piec wood you integ repres height width rectangular piec wood you d integ array price price wi pricei sell rectangular piec wood height width wi pricei dollar to cut piec wood make vertic horizont cut entir height width piec split smaller piec after cut piec wood number smaller piec sell piec price you sell multipl piec shape sell shape the grain wood make differ rotat piec swap height width return maximum money earn cut piec wood note cut piec wood time
1787
number distinct roll sequenc you integ you roll fair side dice time determin total number distinct sequenc roll condit satisfi the greatest common divisor adjac valu sequenc equal there gap roll equal valu roll more formal ith roll equal jth roll ab gt return total number distinct sequenc sinc answer larg return modulo two sequenc consid distinct element
1788
maximum score of splice array you index integ array num num length you choos integ left lt left lt lt swap subarray num left subarray num left for num num choos left num num you choos appli mention oper the score array maximum sum num sum num sum arr sum element array arr return maximum score a subarray contigu sequenc element array arr left denot subarray element num indic left inclus
1789
minimum score after remov tree there undirect connect tree node label edg you index integ array num length num repres ith node you d integ array edg length edg ai bi edg node ai bi tree remov distinct edg tree form connect compon for pair remov edg step defin get xor valu node compon the differ largest xor smallest xor score pair for compon node valu the xor valu the largest xor smallest xor the score return minimum score pair edg remov tree
1790
number increas path grid you integ matrix grid move cell adjac cell direct return number strictli increas path grid start cell end cell sinc answer larg return modulo two path consid sequenc visit cell
1791
subarray with element greater than vari threshold you integ array num integ threshold find subarray num length element subarray greater threshold return size subarray if subarray return a subarray contigu empti sequenc element array
1792
count number ideal array you integ maxvalu describ ideal array a index integ array arr length consid ideal condit hold everi arr maxvalu lt lt everi arr divis arr lt lt return number distinct ideal array length sinc answer larg return modulo
1793
number increas path grid you integ matrix grid move cell adjac cell direct return number strictli increas path grid start cell end cell sinc answer larg return modulo two path consid sequenc visit cell
1794
subarray with element greater than vari threshold you integ array num integ threshold find subarray num length element subarray greater threshold return size subarray if subarray return a subarray contigu empti sequenc element array
1795
count number ideal array you integ maxvalu describ ideal array a index integ array arr length consid ideal condit hold everi arr maxvalu lt lt everi arr divis arr lt lt return number distinct ideal array length sinc answer larg return modulo
1796
minimum delet make array divis you posit integ array num numsdivid you delet number element num return minimum number delet smallest element num divid element numsdivid if return note integ divid
1797
subarray with element greater than vari threshold you integ array num integ threshold find subarray num length element subarray greater threshold return size subarray if subarray return a subarray contigu empti sequenc element array
1798
count number ideal array you integ maxvalu describ ideal array a index integ array arr length consid ideal condit hold everi arr maxvalu lt lt everi arr divis arr lt lt return number distinct ideal array length sinc answer larg return modulo
1799
minimum delet make array divis you posit integ array num numsdivid you delet number element num return minimum number delet smallest element num divid element numsdivid if return note integ divid
1800
shortest imposs sequenc roll you integ array roll length integ you roll side dice number time result ith roll roll return length shortest sequenc roll roll a sequenc roll length len result roll side dice len time note sequenc consecut long order
1801
count number ideal array you integ maxvalu describ ideal array a index integ array arr length consid ideal condit hold everi arr maxvalu lt lt everi arr divis arr lt lt return number distinct ideal array length sinc answer larg return modulo
1802
minimum delet make array divis you posit integ array num numsdivid you delet number element num return minimum number delet smallest element num divid element numsdivid if return note integ divid
1803
shortest imposs sequenc roll you integ array roll length integ you roll side dice number time result ith roll roll return length shortest sequenc roll roll a sequenc roll length len result roll side dice len time note sequenc consecut long order
1804
number excel pair you index posit integ array num posit integ a pair number num num call excel condit satisfi both number num num exist array num the sum number set bit num or num num and num greater equal or bitwis or oper and bitwis and oper return number distinct excel pair two pair consid distinct for distinct note pair num num num num excel occurr num array
1805
minimum delet make array divis you posit integ array num numsdivid you delet number element num return minimum number delet smallest element num divid element numsdivid if return note integ divid
1806
shortest imposs sequenc roll you integ array roll length integ you roll side dice number time result ith roll roll return length shortest sequenc roll roll a sequenc roll length len result roll side dice len time note sequenc consecut long order
1807
number excel pair you index posit integ array num posit integ a pair number num num call excel condit satisfi both number num num exist array num the sum number set bit num or num num and num greater equal or bitwis or oper and bitwis and oper return number distinct excel pair two pair consid distinct for distinct note pair num num num num excel occurr num array
1808
longest cycl graph you direct graph node number node outgo edg the graph repres index array edg size indic direct edg node node edg if outgo edg node edg return length longest cycl graph if cycl exist return a cycl path start end node
1809
shortest imposs sequenc roll you integ array roll length integ you roll side dice number time result ith roll roll return length shortest sequenc roll roll a sequenc roll length len result roll side dice len time note sequenc consecut long order
1810
number excel pair you index posit integ array num posit integ a pair number num num call excel condit satisfi both number num num exist array num the sum number set bit num or num num and num greater equal or bitwis or oper and bitwis and oper return number distinct excel pair two pair consid distinct for distinct note pair num num num num excel occurr num array
1811
longest cycl graph you direct graph node number node outgo edg the graph repres index array edg size indic direct edg node node edg if outgo edg node edg return length longest cycl graph if cycl exist return a cycl path start end node
1812
minimum replac sort array you index integ array num in oper replac element array element sum for num in oper replac num convert num return minimum number oper make array sort decreas order
1813
shortest imposs sequenc roll you integ array roll length integ you roll side dice number time result ith roll roll return length shortest sequenc roll roll a sequenc roll length len result roll side dice len time note sequenc consecut long order
1814
number excel pair you index posit integ array num posit integ a pair number num num call excel condit satisfi both number num num exist array num the sum number set bit num or num num and num greater equal or bitwis or oper and bitwis and oper return number distinct excel pair two pair consid distinct for distinct note pair num num num num excel occurr num array
1815
longest cycl graph you direct graph node number node outgo edg the graph repres index array edg size indic direct edg node node edg if outgo edg node edg return length longest cycl graph if cycl exist return a cycl path start end node
1816
minimum replac sort array you index integ array num in oper replac element array element sum for num in oper replac num convert num return minimum number oper make array sort decreas order
1817
number excel pair you index posit integ array num posit integ a pair number num num call excel condit satisfi both number num num exist array num the sum number set bit num or num num and num greater equal or bitwis or oper and bitwis and oper return number distinct excel pair two pair consid distinct for distinct note pair num num num num excel occurr num array
1818
longest cycl graph you direct graph node number node outgo edg the graph repres index array edg size indic direct edg node node edg if outgo edg node edg return length longest cycl graph if cycl exist return a cycl path start end node
1819
minimum replac sort array you index integ array num in oper replac element array element sum for num in oper replac num convert num return minimum number oper make array sort decreas order
1820
count special integ we call posit integ special digit distinct given posit integ return number special integ belong interv
1821
longest cycl graph you direct graph node number node outgo edg the graph repres index array edg size indic direct edg node node edg if outgo edg node edg return length longest cycl graph if cycl exist return a cycl path start end node
1822
minimum replac sort array you index integ array num in oper replac element array element sum for num in oper replac num convert num return minimum number oper make array sort decreas order
1823
count special integ we call posit integ special digit distinct given posit integ return number special integ belong interv
1824
maximum segment sum after remov you index integ array num removequeri length for ith queri element num index removequeri remov split num segment a segment contigu sequenc posit integ num a segment sum sum element segment return integ array answer length answer maximum segment sum appli ith remov note the index remov
1825
minimum replac sort array you index integ array num in oper replac element array element sum for num in oper replac num convert num return minimum number oper make array sort decreas order
1826
count special integ we call posit integ special digit distinct given posit integ return number special integ belong interv
1827
maximum segment sum after remov you index integ array num removequeri length for ith queri element num index removequeri remov split num segment a segment contigu sequenc posit integ num a segment sum sum element segment return integ array answer length answer maximum segment sum appli ith remov note the index remov
1828
find k sum array you integ array num posit integ you choos subsequ array sum element we defin k sum array kth largest subsequ sum obtain necessarili distinct return k sum array a subsequ array deriv array delet element chang order remain element note empti subsequ consid sum
1829
count special integ we call posit integ special digit distinct given posit integ return number special integ belong interv
1830
maximum segment sum after remov you index integ array num removequeri length for ith queri element num index removequeri remov split num segment a segment contigu sequenc posit integ num a segment sum sum element segment return integ array answer length answer maximum segment sum appli ith remov note the index remov
1831
find k sum array you integ array num posit integ you choos subsequ array sum element we defin k sum array kth largest subsequ sum obtain necessarili distinct return k sum array a subsequ array deriv array delet element chang order remain element note empti subsequ consid sum
1832
build matrix with condit you posit integ you d integ array rowcondit size rowcondit abovei belowi d integ array colcondit size colcondit lefti righti the array integ you build matrix number the remain cell the matrix satisfi condit the number abovei row strictli row number belowi appear the number lefti column strictli left column number righti appear return matrix satisfi condit if answer exist return empti matrix
1833
longest cycl graph you direct graph node number node outgo edg the graph repres index array edg size indic direct edg node node edg if outgo edg node edg return length longest cycl graph if cycl exist return a cycl path start end node
1834
minimum replac sort array you index integ array num in oper replac element array element sum for num in oper replac num convert num return minimum number oper make array sort decreas order
1835
count special integ we call posit integ special digit distinct given posit integ return number special integ belong interv
1836
maximum segment sum after remov you index integ array num removequeri length for ith queri element num index removequeri remov split num segment a segment contigu sequenc posit integ num a segment sum sum element segment return integ array answer length answer maximum segment sum appli ith remov note the index remov
1837
find k sum array you integ array num posit integ you choos subsequ array sum element we defin k sum array kth largest subsequ sum obtain necessarili distinct return k sum array a subsequ array deriv array delet element chang order remain element note empti subsequ consid sum
1838
build matrix with condit you posit integ you d integ array rowcondit size rowcondit abovei belowi d integ array colcondit size colcondit lefti righti the array integ you build matrix number the remain cell the matrix satisfi condit the number abovei row strictli row number belowi appear the number lefti column strictli left column number righti appear return matrix satisfi condit if answer exist return empti matrix
1839
maximum number robot within budget you robot you index integ array chargetim runningcost length the ith robot cost chargetim unit charg cost runningcost unit run you integ budget the total cost run chosen robot equal max chargetim sum runningcost max chargetim largest charg cost robot sum runningcost sum run cost robot return maximum number consecut robot run total cost exceed budget
1840
meet room iii you integ there room number you d integ array meet meet starti endi mean meet held half close time interv starti endi all valu starti uniqu meet alloc room manner each meet place unus room lowest number if room meet delay room free the delay meet durat origin meet when room unus meet earlier origin start time room return number room held meet if multipl room return room lowest number a half close interv interv includ includ
1841
build matrix with condit you posit integ you d integ array rowcondit size rowcondit abovei belowi d integ array colcondit size colcondit lefti righti the array integ you build matrix number the remain cell the matrix satisfi condit the number abovei row strictli row number belowi appear the number lefti column strictli left column number righti appear return matrix satisfi condit if answer exist return empti matrix
1842
maximum number robot within budget you robot you index integ array chargetim runningcost length the ith robot cost chargetim unit charg cost runningcost unit run you integ budget the total cost run chosen robot equal max chargetim sum runningcost max chargetim largest charg cost robot sum runningcost sum run cost robot return maximum number consecut robot run total cost exceed budget
1843
meet room iii you integ there room number you d integ array meet meet starti endi mean meet held half close time interv starti endi all valu starti uniqu meet alloc room manner each meet place unus room lowest number if room meet delay room free the delay meet durat origin meet when room unus meet earlier origin start time room return number room held meet if multipl room return room lowest number a half close interv interv includ includ
1844
longest increas subsequ ii you integ array num integ find longest subsequ num meet requir the subsequ strictli increas the differ adjac element subsequ return length longest subsequ meet requir a subsequ array deriv array delet element chang order remain element
1845
maximum number robot within budget you robot you index integ array chargetim runningcost length the ith robot cost chargetim unit charg cost runningcost unit run you integ budget the total cost run chosen robot equal max chargetim sum runningcost max chargetim largest charg cost robot sum runningcost sum run cost robot return maximum number consecut robot run total cost exceed budget
1846
meet room iii you integ there room number you d integ array meet meet starti endi mean meet held half close time interv starti endi all valu starti uniqu meet alloc room manner each meet place unus room lowest number if room meet delay room free the delay meet durat origin meet when room unus meet earlier origin start time room return number room held meet if multipl room return room lowest number a half close interv interv includ includ
1847
longest increas subsequ ii you integ array num integ find longest subsequ num meet requir the subsequ strictli increas the differ adjac element subsequ return length longest subsequ meet requir a subsequ array deriv array delet element chang order remain element
1848
minimum money requir befor transact you index d integ array transact transact costi cashbacki the array describ transact transact complet order at moment amount money in order complet transact money gt costi hold true after perform transact money money costi cashbacki return minimum amount money requir transact transact complet order transact
1849
meet room iii you integ there room number you d integ array meet meet starti endi mean meet held half close time interv starti endi all valu starti uniqu meet alloc room manner each meet place unus room lowest number if room meet delay room free the delay meet durat origin meet when room unus meet earlier origin start time room return number room held meet if multipl room return room lowest number a half close interv interv includ includ
1850
longest increas subsequ ii you integ array num integ find longest subsequ num meet requir the subsequ strictli increas the differ adjac element subsequ return length longest subsequ meet requir a subsequ array deriv array delet element chang order remain element
1851
minimum money requir befor transact you index d integ array transact transact costi cashbacki the array describ transact transact complet order at moment amount money in order complet transact money gt costi hold true after perform transact money money costi cashbacki return minimum amount money requir transact transact complet order transact
1852
sum prefix score string you array word size consist empti string we defin score string word number string word word prefix word for word ab abc cab score ab ab prefix ab abc return array answer size answer sum score empti prefix word note string consid prefix
1853
longest increas subsequ ii you integ array num integ find longest subsequ num meet requir the subsequ strictli increas the differ adjac element subsequ return length longest subsequ meet requir a subsequ array deriv array delet element chang order remain element
1854
minimum money requir befor transact you index d integ array transact transact costi cashbacki the array describ transact transact complet order at moment amount money in order complet transact money gt costi hold true after perform transact money money costi cashbacki return minimum amount money requir transact transact complet order transact
1855
sum prefix score string you array word size consist empti string we defin score string word number string word word prefix word for word ab abc cab score ab ab prefix ab abc return array answer size answer sum score empti prefix word note string consid prefix
1856
number good path there tree connect undirect graph cycl consist node number edg you index integ array val length val denot ith node you d integ array edg edg ai bi denot exist undirect edg connect node ai bi a good path simpl path satisfi condit the start node end node all node start node end node valu equal start node start node maximum path return number distinct good path note path revers count path for gt consid gt a singl node consid valid path
1857
maximum number robot within budget you robot you index integ array chargetim runningcost length the ith robot cost chargetim unit charg cost runningcost unit run you integ budget the total cost run chosen robot equal max chargetim sum runningcost max chargetim largest charg cost robot sum runningcost sum run cost robot return maximum number consecut robot run total cost exceed budget
1858
meet room iii you integ there room number you d integ array meet meet starti endi mean meet held half close time interv starti endi all valu starti uniqu meet alloc room manner each meet place unus room lowest number if room meet delay room free the delay meet durat origin meet when room unus meet earlier origin start time room return number room held meet if multipl room return room lowest number a half close interv interv includ includ
1859
longest increas subsequ ii you integ array num integ find longest subsequ num meet requir the subsequ strictli increas the differ adjac element subsequ return length longest subsequ meet requir a subsequ array deriv array delet element chang order remain element
1860
minimum money requir befor transact you index d integ array transact transact costi cashbacki the array describ transact transact complet order at moment amount money in order complet transact money gt costi hold true after perform transact money money costi cashbacki return minimum amount money requir transact transact complet order transact
1861
sum prefix score string you array word size consist empti string we defin score string word number string word word prefix word for word ab abc cab score ab ab prefix ab abc return array answer size answer sum score empti prefix word note string consid prefix
1862
number good path there tree connect undirect graph cycl consist node number edg you index integ array val length val denot ith node you d integ array edg edg ai bi denot exist undirect edg connect node ai bi a good path simpl path satisfi condit the start node end node all node start node end node valu equal start node start node maximum path return number distinct good path note path revers count path for gt consid gt a singl node consid valid path
1863
number pair satisfi inequ you index integ array num num size integ diff find number pair lt lt lt num num lt num num diff return number pair satisfi condit
1864
maximum delet string you string consist lowercas english letter in oper delet entir string delet letter letter equal letter rang lt lt length for ababc oper delet letter abc letter letter equal ab return maximum number oper need delet
1865
number good path there tree connect undirect graph cycl consist node number edg you index integ array val length val denot ith node you d integ array edg edg ai bi denot exist undirect edg connect node ai bi a good path simpl path satisfi condit the start node end node all node start node end node valu equal start node start node maximum path return number distinct good path note path revers count path for gt consid gt a singl node consid valid path
1866
number pair satisfi inequ you index integ array num num size integ diff find number pair lt lt lt num num lt num num diff return number pair satisfi condit
1867
maximum delet string you string consist lowercas english letter in oper delet entir string delet letter letter equal letter rang lt lt length for ababc oper delet letter abc letter letter equal ab return maximum number oper need delet
1868
path matrix whose sum is divis k you index integ matrix grid integ you posit reach posit move return number path sum element path divis sinc answer larg return modulo
1869
minimum money requir befor transact you index d integ array transact transact costi cashbacki the array describ transact transact complet order at moment amount money in order complet transact money gt costi hold true after perform transact money money costi cashbacki return minimum amount money requir transact transact complet order transact
1870
sum prefix score string you array word size consist empti string we defin score string word number string word word prefix word for word ab abc cab score ab ab prefix ab abc return array answer size answer sum score empti prefix word note string consid prefix
1871
number good path there tree connect undirect graph cycl consist node number edg you index integ array val length val denot ith node you d integ array edg edg ai bi denot exist undirect edg connect node ai bi a good path simpl path satisfi condit the start node end node all node start node end node valu equal start node start node maximum path return number distinct good path note path revers count path for gt consid gt a singl node consid valid path
1872
number pair satisfi inequ you index integ array num num size integ diff find number pair lt lt lt num num lt num num diff return number pair satisfi condit
1873
maximum delet string you string consist lowercas english letter in oper delet entir string delet letter letter equal letter rang lt lt length for ababc oper delet letter abc letter letter equal ab return maximum number oper need delet
1874
path matrix whose sum is divis k you index integ matrix grid integ you posit reach posit move return number path sum element path divis sinc answer larg return modulo
1875
creat compon with same valu there undirect tree node label you index integ array num length num repres ith node you d integ array edg length edg ai bi edg node ai bi tree you allow delet edg split tree multipl connect compon let compon sum num node compon return maximum number edg delet connect compon tree
1876
count subarray with fix bound you integ array num integ mink maxk a fix bound subarray num subarray satisfi condit the minimum subarray equal mink the maximum subarray equal maxk return number fix bound subarray a subarray contigu part array
1877
creat compon with same valu there undirect tree node label you index integ array num length num repres ith node you d integ array edg length edg ai bi edg node ai bi tree you allow delet edg split tree multipl connect compon let compon sum num node compon return maximum number edg delet connect compon tree
1878
count subarray with fix bound you integ array num integ mink maxk a fix bound subarray num subarray satisfi condit the minimum subarray equal mink the maximum subarray equal maxk return number fix bound subarray a subarray contigu part array
1879
minimum cost make array equal you index array num cost consist posit integ you oper number time increas decreas element array num the cost oper ith element cost return minimum total cost element array num equal
1880
minimum number oper make array similar you posit integ array num target length in oper choos distinct indic lt lt num length set num num set num num two array consid similar frequenc element return minimum number oper requir make num similar target the test case gener num similar target
1881
count subarray with fix bound you integ array num integ mink maxk a fix bound subarray num subarray satisfi condit the minimum subarray equal mink the maximum subarray equal maxk return number fix bound subarray a subarray contigu part array
1882
minimum cost make array equal you index array num cost consist posit integ you oper number time increas decreas element array num the cost oper ith element cost return minimum total cost element array num equal
1883
minimum number oper make array similar you posit integ array num target length in oper choos distinct indic lt lt num length set num num set num num two array consid similar frequenc element return minimum number oper requir make num similar target the test case gener num similar target
1884
next greater element iv you index array neg integ num for integ num find respect greater integ the greater integ num num gt num gt num there exist index num gt num lt lt if num greater integ consid for array greater integ return integ array answer answer greater integ num
1885
minimum cost make array equal you index array num cost consist posit integ you oper number time increas decreas element array num the cost oper ith element cost return minimum total cost element array num equal
1886
minimum number oper make array similar you posit integ array num target length in oper choos distinct indic lt lt num length set num num set num num two array consid similar frequenc element return minimum number oper requir make num similar target the test case gener num similar target
1887
next greater element iv you index array neg integ num for integ num find respect greater integ the greater integ num num gt num gt num there exist index num gt num lt lt if num greater integ consid for array greater integ return integ array answer answer greater integ num
1888
height binari tree after subtre remov queri you root binari tree node each node assign uniqu you array queri size you perform independ queri tree ith queri remov subtre root node queri tree it guarante queri equal root return array answer size answer height tree perform ith queri note the queri independ tree return initi state queri the height tree number edg longest simpl path root node tree
1889
minimum number oper make array similar you posit integ array num target length in oper choos distinct indic lt lt num length set num num set num num two array consid similar frequenc element return minimum number oper requir make num similar target the test case gener num similar target
1890
next greater element iv you index array neg integ num for integ num find respect greater integ the greater integ num num gt num gt num there exist index num gt num lt lt if num greater integ consid for array greater integ return integ array answer answer greater integ num
1891
height binari tree after subtre remov queri you root binari tree node each node assign uniqu you array queri size you perform independ queri tree ith queri remov subtre root node queri tree it guarante queri equal root return array answer size answer height tree perform ith queri note the queri independ tree return initi state queri the height tree number edg longest simpl path root node tree
1892
minimum total distanc travel there robot factori x axi you integ array robot robot posit ith robot you d integ array factori factori positionj limitj positionj posit jth factori jth factori repair limitj robot the posit robot uniqu the posit factori uniqu note robot posit factori initi all robot initi broken move direct the direct neg posit direct x axi when robot reach factori reach limit factori repair robot stop move at moment set initi direct move robot your target minim total distanc travel robot return minimum total distanc travel robot the test case gener robot repair note all robot move speed if robot move direct collid if robot move opposit direct meet point collid they cross if robot pass factori reach limit cross exist if robot move posit posit distanc move
1893
next greater element iv you index array neg integ num for integ num find respect greater integ the greater integ num num gt num gt num there exist index num gt num lt lt if num greater integ consid for array greater integ return integ array answer answer greater integ num
1894
height binari tree after subtre remov queri you root binari tree node each node assign uniqu you array queri size you perform independ queri tree ith queri remov subtre root node queri tree it guarante queri equal root return array answer size answer height tree perform ith queri note the queri independ tree return initi state queri the height tree number edg longest simpl path root node tree
1895
minimum total distanc travel there robot factori x axi you integ array robot robot posit ith robot you d integ array factori factori positionj limitj positionj posit jth factori jth factori repair limitj robot the posit robot uniqu the posit factori uniqu note robot posit factori initi all robot initi broken move direct the direct neg posit direct x axi when robot reach factori reach limit factori repair robot stop move at moment set initi direct move robot your target minim total distanc travel robot return minimum total distanc travel robot the test case gener robot repair note all robot move speed if robot move direct collid if robot move opposit direct meet point collid they cross if robot pass factori reach limit cross exist if robot move posit posit distanc move
1896
split messag base limit you string messag posit integ limit you split messag part base limit each result part suffix lt gt replac total number part replac index part start addit length result part includ suffix equal limit part length limit the result part form suffix remov concaten order equal messag also result part return part messag split array string if imposs split messag requir return empti array
1897
height binari tree after subtre remov queri you root binari tree node each node assign uniqu you array queri size you perform independ queri tree ith queri remov subtre root node queri tree it guarante queri equal root return array answer size answer height tree perform ith queri note the queri independ tree return initi state queri the height tree number edg longest simpl path root node tree
1898
minimum total distanc travel there robot factori x axi you integ array robot robot posit ith robot you d integ array factori factori positionj limitj positionj posit jth factori jth factori repair limitj robot the posit robot uniqu the posit factori uniqu note robot posit factori initi all robot initi broken move direct the direct neg posit direct x axi when robot reach factori reach limit factori repair robot stop move at moment set initi direct move robot your target minim total distanc travel robot return minimum total distanc travel robot the test case gener robot repair note all robot move speed if robot move direct collid if robot move opposit direct meet point collid they cross if robot pass factori reach limit cross exist if robot move posit posit distanc move
1899
split messag base limit you string messag posit integ limit you split messag part base limit each result part suffix lt gt replac total number part replac index part start addit length result part includ suffix equal limit part length limit the result part form suffix remov concaten order equal messag also result part return part messag split array string if imposs split messag requir return empti array
1900
maximum number non overlap palindrom substr you string posit integ select set overlap substr string satisfi condit the length substr each substr palindrom return maximum number substr optim select a substr contigu sequenc charact string
1901
minimum total distanc travel there robot factori x axi you integ array robot robot posit ith robot you d integ array factori factori positionj limitj positionj posit jth factori jth factori repair limitj robot the posit robot uniqu the posit factori uniqu note robot posit factori initi all robot initi broken move direct the direct neg posit direct x axi when robot reach factori reach limit factori repair robot stop move at moment set initi direct move robot your target minim total distanc travel robot return minimum total distanc travel robot the test case gener robot repair note all robot move speed if robot move direct collid if robot move opposit direct meet point collid they cross if robot pass factori reach limit cross exist if robot move posit posit distanc move
1902
split messag base limit you string messag posit integ limit you split messag part base limit each result part suffix lt gt replac total number part replac index part start addit length result part includ suffix equal limit part length limit the result part form suffix remov concaten order equal messag also result part return part messag split array string if imposs split messag requir return empti array
1903
maximum number non overlap palindrom substr you string posit integ select set overlap substr string satisfi condit the length substr each substr palindrom return maximum number substr optim select a substr contigu sequenc charact string
1904
number beauti partit you string consist digit integ minlength a partit call beauti partit intersect substr each substr length minlength each substr start prime digit end prime digit prime digit rest digit prime return number beauti partit sinc answer larg return modulo a substr contigu sequenc charact string
1905
split messag base limit you string messag posit integ limit you split messag part base limit each result part suffix lt gt replac total number part replac index part start addit length result part includ suffix equal limit part length limit the result part form suffix remov concaten order equal messag also result part return part messag split array string if imposs split messag requir return empti array
1906
maximum number non overlap palindrom substr you string posit integ select set overlap substr string satisfi condit the length substr each substr palindrom return maximum number substr optim select a substr contigu sequenc charact string
1907
number beauti partit you string consist digit integ minlength a partit call beauti partit intersect substr each substr length minlength each substr start prime digit end prime digit prime digit rest digit prime return number beauti partit sinc answer larg return modulo a substr contigu sequenc charact string
1908
count palindrom subsequ given string digit return number palindrom subsequ length sinc answer larg return modulo note a string palindrom read forward backward a subsequ string deriv string delet charact chang order remain charact
1909
maximum number non overlap palindrom substr you string posit integ select set overlap substr string satisfi condit the length substr each substr palindrom return maximum number substr optim select a substr contigu sequenc charact string
1910
number beauti partit you string consist digit integ minlength a partit call beauti partit intersect substr each substr length minlength each substr start prime digit end prime digit prime digit rest digit prime return number beauti partit sinc answer larg return modulo a substr contigu sequenc charact string
1911
count palindrom subsequ given string digit return number palindrom subsequ length sinc answer larg return modulo note a string palindrom read forward backward a subsequ string deriv string delet charact chang order remain charact
1912
count subarray with median k you array num size consist distinct integ posit integ return number empti subarray num median equal note the median array middl element sort array ascend order if array length median left middl element for median median a subarray contigu part array
1913
number beauti partit you string consist digit integ minlength a partit call beauti partit intersect substr each substr length minlength each substr start prime digit end prime digit prime digit rest digit prime return number beauti partit sinc answer larg return modulo a substr contigu sequenc charact string
1914
count palindrom subsequ given string digit return number palindrom subsequ length sinc answer larg return modulo note a string palindrom read forward backward a subsequ string deriv string delet charact chang order remain charact
1915
count subarray with median k you array num size consist distinct integ posit integ return number empti subarray num median equal note the median array middl element sort array ascend order if array length median left middl element for median median a subarray contigu part array
1916
divid node into maximum number group you posit integ repres number node undirect graph the node label you d integ array edg edg ai bi bidirect edg node ai bi notic graph disconnect divid node graph group index each node graph belong group for pair node graph connect edg ai bi ai belong group index bi belong group index return maximum number group maximum divid node return imposs group node condit
1917
encrypt decrypt string you charact array key uniqu charact string array valu string length you string array dictionari permit origin string decrypt you implement data structur encrypt decrypt index string a string encrypt process for charact string find index satisfi key key replac valu string note case charact string present key encrypt process carri empti string return a string decrypt process for substr length occur index string find valu if multipl valid choos thi mean string multipl string decrypt replac key string implement encrypt class encrypt char key string valu string dictionari initi encrypt class key valu dictionari string encrypt string word encrypt word encrypt process return encrypt string int decrypt string word return number string word decrypt dictionari
1918
maximum total beauti garden alic caretak garden plant flower maxim total beauti garden you index integ array flower size flower number flower plant ith garden flower plant remov you integ newflow maximum number flower alic addit plant you integ target full partial a garden consid complet target flower the total beauti garden determin sum the number complet garden multipli full the minimum number flower incomplet garden multipli partial if incomplet garden return maximum total beauti alic obtain plant newflow flower
1919
maximum score node sequenc there undirect graph node number you index integ array score length score denot score node you d integ array edg edg ai bi denot exist undirect edg connect node ai bi a node sequenc valid meet condit there edg connect pair adjac node sequenc no node appear sequenc the score node sequenc defin sum score node sequenc return maximum score valid node sequenc length if sequenc exist return
1920
longest path with differ adjac charact you tree connect undirect graph cycl root node consist node number the tree repres index array size node sinc node root you string length charact assign node return length longest path tree pair adjac node path charact assign
1921
number flower full bloom you index d integ array flower flower starti endi mean ith flower full bloom starti endi inclus you index integ array person size person time ith person arriv flower return integ array answer size answer number flower full bloom ith person arriv
1922
escap spread fire you index d integ array grid size repres field each cell valu repres grass repres fire repres wall fire pass you situat top left cell travel safehous bottom cell everi minut move adjac grass cell after move fire cell spread adjac cell wall return maximum number minut stay initi posit move safe reach safehous if imposs return if reach safehous minut stay return note fire spread safehous immedi reach count safe reach safehous a cell adjac cell directli north east south west side touch
1923
total appeal a string the appeal string number distinct charact found string for appeal abbca distinct charact given string return total appeal substr a substr contigu sequenc charact string
1924
check there is valid parenthes string path a parenthes string empti string consist it valid condit true it it written ab a concaten b a b valid parenthes string it written a a valid parenthes string you matrix parenthes grid a valid parenthes string path grid path satisfi condit the path start upper left cell the path end bottom cell the path move the result parenthes string form path valid return true exist valid parenthes string path grid otherwis return fals
1925
substr with largest varianc the varianc string defin largest differ number occurr charact present string note charact given string consist lowercas english letter return largest varianc substr a substr contigu sequenc charact string
1926
count integ interv given empti set interv implement data structur add interv set interv count number integ present interv implement countinterv class countinterv initi object empti set interv void add int left int add interv left set interv int count return number integ present interv note interv left denot integ left lt lt
1927
sum total strength wizard as ruler kingdom armi wizard command you index integ array strength strength denot strength ith wizard for contigu group wizard wizard strength form subarray strength total strength defin product valu the strength weakest wizard group the total individu strength wizard group return sum total strength contigu group wizard sinc answer larg return modulo a subarray contigu empti sequenc element array
1928
book concert ticket group a concert hall row number seat number you design ticket system alloc seat case if group spectat sit row if member group spectat seat they sit note spectat picki henc they book seat member group seat row number equal maxrow maxrow vari group group in case multipl row choos row smallest number chosen if multipl seat choos row seat smallest number chosen implement bookmyshow class bookmyshow int int initi object number row number seat row int gather int int maxrow return array length denot row seat number seat alloc member group sit in word return smallest seat valid empti row lt maxrow return case alloc seat group boolean scatter int int maxrow return true member group alloc seat row maxrow sit if seat alloc alloc seat group smallest row number smallest seat number row otherwis return fals
1929
minimum obstacl remov reach corner you index d integ array grid size each cell valu repres empti cell repres obstacl remov you move left empti cell return minimum number obstacl remov move upper left corner lower corner
1930
design text editor design text editor cursor add text cursor delet text cursor simul backspac key move cursor left when delet text charact left cursor delet the cursor remain actual text move more formal lt cursor posit lt currenttext length hold implement texteditor class texteditor initi object empti text void addtext string text append text cursor the cursor end text int deletetext int delet charact left cursor return number charact delet string cursorleft int move cursor left time return min len charact left cursor len number charact left cursor string cursorright int move cursor time return min len charact left cursor len number charact left cursor
1931
match substr after replac you string you d charact array map map oldi newi perform oper number time replac charact oldi newi each charact replac return true make substr replac charact map otherwis return fals a substr contigu empti sequenc charact string
1932
count subarray with score less than k the score array defin product sum length for score given posit integ array num integ return number empti subarray num score strictli a subarray contigu sequenc element array
1933
name compani you array string idea repres list name process name compani the process name compani choos distinct name idea call ideaa ideab swap letter ideaa ideab if name found origin idea ideaa ideab concaten ideaa ideab separ space valid compani otherwis valid return number distinct valid name compani
1934
sell piec wood you integ repres height width rectangular piec wood you d integ array price price wi pricei sell rectangular piec wood height width wi pricei dollar to cut piec wood make vertic horizont cut entir height width piec split smaller piec after cut piec wood number smaller piec sell piec price you sell multipl piec shape sell shape the grain wood make differ rotat piec swap height width return maximum money earn cut piec wood note cut piec wood time
1935
number distinct roll sequenc you integ you roll fair side dice time determin total number distinct sequenc roll condit satisfi the greatest common divisor adjac valu sequenc equal there gap roll equal valu roll more formal ith roll equal jth roll ab gt return total number distinct sequenc sinc answer larg return modulo two sequenc consid distinct element
1936
maximum score of splice array you index integ array num num length you choos integ left lt left lt lt swap subarray num left subarray num left for num num choos left num num you choos appli mention oper the score array maximum sum num sum num sum arr sum element array arr return maximum score a subarray contigu sequenc element array arr left denot subarray element num indic left inclus
1937
minimum score after remov tree there undirect connect tree node label edg you index integ array num length num repres ith node you d integ array edg length edg ai bi edg node ai bi tree remov distinct edg tree form connect compon for pair remov edg step defin get xor valu node compon the differ largest xor smallest xor score pair for compon node valu the xor valu the largest xor smallest xor the score return minimum score pair edg remov tree
1938
number increas path grid you integ matrix grid move cell adjac cell direct return number strictli increas path grid start cell end cell sinc answer larg return modulo two path consid sequenc visit cell
1939
subarray with element greater than vari threshold you integ array num integ threshold find subarray num length element subarray greater threshold return size subarray if subarray return a subarray contigu empti sequenc element array
1940
count number ideal array you integ maxvalu describ ideal array a index integ array arr length consid ideal condit hold everi arr maxvalu lt lt everi arr divis arr lt lt return number distinct ideal array length sinc answer larg return modulo
1941
minimum delet make array divis you posit integ array num numsdivid you delet number element num return minimum number delet smallest element num divid element numsdivid if return note integ divid
1942
shortest imposs sequenc roll you integ array roll length integ you roll side dice number time result ith roll roll return length shortest sequenc roll roll a sequenc roll length len result roll side dice len time note sequenc consecut long order
1943
number excel pair you index posit integ array num posit integ a pair number num num call excel condit satisfi both number num num exist array num the sum number set bit num or num num and num greater equal or bitwis or oper and bitwis and oper return number distinct excel pair two pair consid distinct for distinct note pair num num num num excel occurr num array
1944
longest cycl graph you direct graph node number node outgo edg the graph repres index array edg size indic direct edg node node edg if outgo edg node edg return length longest cycl graph if cycl exist return a cycl path start end node
1945
minimum replac sort array you index integ array num in oper replac element array element sum for num in oper replac num convert num return minimum number oper make array sort decreas order
1946
count special integ we call posit integ special digit distinct given posit integ return number special integ belong interv
1947
longest cycl graph you direct graph node number node outgo edg the graph repres index array edg size indic direct edg node node edg if outgo edg node edg return length longest cycl graph if cycl exist return a cycl path start end node
1948
minimum replac sort array you index integ array num in oper replac element array element sum for num in oper replac num convert num return minimum number oper make array sort decreas order
1949
count special integ we call posit integ special digit distinct given posit integ return number special integ belong interv
1950
maximum segment sum after remov you index integ array num removequeri length for ith queri element num index removequeri remov split num segment a segment contigu sequenc posit integ num a segment sum sum element segment return integ array answer length answer maximum segment sum appli ith remov note the index remov
1951
find k sum array you integ array num posit integ you choos subsequ array sum element we defin k sum array kth largest subsequ sum obtain necessarili distinct return k sum array a subsequ array deriv array delet element chang order remain element note empti subsequ consid sum
1952
build matrix with condit you posit integ you d integ array rowcondit size rowcondit abovei belowi d integ array colcondit size colcondit lefti righti the array integ you build matrix number the remain cell the matrix satisfi condit the number abovei row strictli row number belowi appear the number lefti column strictli left column number righti appear return matrix satisfi condit if answer exist return empti matrix
1953
maximum number robot within budget you robot you index integ array chargetim runningcost length the ith robot cost chargetim unit charg cost runningcost unit run you integ budget the total cost run chosen robot equal max chargetim sum runningcost max chargetim largest charg cost robot sum runningcost sum run cost robot return maximum number consecut robot run total cost exceed budget
1954
meet room iii you integ there room number you d integ array meet meet starti endi mean meet held half close time interv starti endi all valu starti uniqu meet alloc room manner each meet place unus room lowest number if room meet delay room free the delay meet durat origin meet when room unus meet earlier origin start time room return number room held meet if multipl room return room lowest number a half close interv interv includ includ
1955
longest increas subsequ ii you integ array num integ find longest subsequ num meet requir the subsequ strictli increas the differ adjac element subsequ return length longest subsequ meet requir a subsequ array deriv array delet element chang order remain element
1956
minimum money requir befor transact you index d integ array transact transact costi cashbacki the array describ transact transact complet order at moment amount money in order complet transact money gt costi hold true after perform transact money money costi cashbacki return minimum amount money requir transact transact complet order transact
1957
sum prefix score string you array word size consist empti string we defin score string word number string word word prefix word for word ab abc cab score ab ab prefix ab abc return array answer size answer sum score empti prefix word note string consid prefix
1958
number good path there tree connect undirect graph cycl consist node number edg you index integ array val length val denot ith node you d integ array edg edg ai bi denot exist undirect edg connect node ai bi a good path simpl path satisfi condit the start node end node all node start node end node valu equal start node start node maximum path return number distinct good path note path revers count path for gt consid gt a singl node consid valid path
1959
number pair satisfi inequ you index integ array num num size integ diff find number pair lt lt lt num num lt num num diff return number pair satisfi condit
1960
maximum delet string you string consist lowercas english letter in oper delet entir string delet letter letter equal letter rang lt lt length for ababc oper delet letter abc letter letter equal ab return maximum number oper need delet
1961
path matrix whose sum is divis k you index integ matrix grid integ you posit reach posit move return number path sum element path divis sinc answer larg return modulo
1962
creat compon with same valu there undirect tree node label you index integ array num length num repres ith node you d integ array edg length edg ai bi edg node ai bi tree you allow delet edg split tree multipl connect compon let compon sum num node compon return maximum number edg delet connect compon tree
1963
count subarray with fix bound you integ array num integ mink maxk a fix bound subarray num subarray satisfi condit the minimum subarray equal mink the maximum subarray equal maxk return number fix bound subarray a subarray contigu part array
1964
minimum cost make array equal you index array num cost consist posit integ you oper number time increas decreas element array num the cost oper ith element cost return minimum total cost element array num equal
1965
minimum number oper make array similar you posit integ array num target length in oper choos distinct indic lt lt num length set num num set num num two array consid similar frequenc element return minimum number oper requir make num similar target the test case gener num similar target
1966
next greater element iv you index array neg integ num for integ num find respect greater integ the greater integ num num gt num gt num there exist index num gt num lt lt if num greater integ consid for array greater integ return integ array answer answer greater integ num
1967
height binari tree after subtre remov queri you root binari tree node each node assign uniqu you array queri size you perform independ queri tree ith queri remov subtre root node queri tree it guarante queri equal root return array answer size answer height tree perform ith queri note the queri independ tree return initi state queri the height tree number edg longest simpl path root node tree
1968
minimum total distanc travel there robot factori x axi you integ array robot robot posit ith robot you d integ array factori factori positionj limitj positionj posit jth factori jth factori repair limitj robot the posit robot uniqu the posit factori uniqu note robot posit factori initi all robot initi broken move direct the direct neg posit direct x axi when robot reach factori reach limit factori repair robot stop move at moment set initi direct move robot your target minim total distanc travel robot return minimum total distanc travel robot the test case gener robot repair note all robot move speed if robot move direct collid if robot move opposit direct meet point collid they cross if robot pass factori reach limit cross exist if robot move posit posit distanc move
1969
split messag base limit you string messag posit integ limit you split messag part base limit each result part suffix lt gt replac total number part replac index part start addit length result part includ suffix equal limit part length limit the result part form suffix remov concaten order equal messag also result part return part messag split array string if imposs split messag requir return empti array
1970
maximum number non overlap palindrom substr you string posit integ select set overlap substr string satisfi condit the length substr each substr palindrom return maximum number substr optim select a substr contigu sequenc charact string
1971
number beauti partit you string consist digit integ minlength a partit call beauti partit intersect substr each substr length minlength each substr start prime digit end prime digit prime digit rest digit prime return number beauti partit sinc answer larg return modulo a substr contigu sequenc charact string
1972
count palindrom subsequ given string digit return number palindrom subsequ length sinc answer larg return modulo note a string palindrom read forward backward a subsequ string deriv string delet charact chang order remain charact
1973
count subarray with median k you array num size consist distinct integ posit integ return number empti subarray num median equal note the median array middl element sort array ascend order if array length median left middl element for median median a subarray contigu part array
1974
divid node into maximum number group you posit integ repres number node undirect graph the node label you d integ array edg edg ai bi bidirect edg node ai bi notic graph disconnect divid node graph group index each node graph belong group for pair node graph connect edg ai bi ai belong group index bi belong group index return maximum number group maximum divid node return imposs group node condit
1975
minimum total cost make array unequ you index integ array num num equal length in oper swap valu indic num the cost oper sum indic find minimum total cost perform oper number time num num lt lt perform oper return minimum total cost num num satisfi condit in case return
1976
maximum number point from grid queri you integ matrix grid array queri size find array answer size integ queri start top left cell matrix repeat process if queri strictli greater current cell point time visit cell move adjac cell direct left otherwis point end process after process answer maximum number point note queri allow visit cell multipl time return result array answer
1977
add edg make degre all node even there undirect graph consist node number you integ d array edg edg ai bi edg node ai bi the graph disconnect you add addit edg possibl graph repeat edg loop return true make degre node graph return fals the degre node number edg connect
1978
cycl length queri tree you integ there complet binari tree node the root tree node node val rang children the left node val the node val you d integ array queri length queri ai bi for queri solv problem add edg node valu ai bi find length cycl graph remov ad edg node valu ai bi note a cycl path start end node edg path visit the length cycl number edg visit cycl there multipl edg node tree ad edg queri return array answer length answer answer ith queri
1979
count anagram you string word everi consecut pair word separ singl space a string anagram string ith word permut ith word for acb dfe anagram abc def def cab adc bef return number distinct anagram sinc answer larg return modulo
1980
number great partit you array num consist posit integ integ partit array order group element group a partit call great sum element group greater equal return number distinct great partit sinc answer larg return modulo two partit consid distinct element num group partit
1981
maxim minimum power citi you index integ array station length station repres number power station ith citi each power station provid power citi fix rang in word rang denot power station citi provid power citi lt lt lt note denot absolut for the power citi total number power station provid power the govern sanction build power station built citi rang pre exist given integ return maximum minimum power citi addit power station built optim note build power station multipl citi
1982
time cross bridg there worker move box warehous you integ d integ array time size time lefttorighti pickoldi righttolefti putnewi the warehous separ river connect bridg the warehous bank river warehous left bank river initi worker wait left side bridg to move box ith worker index cross bridg left bank warehous bank warehous lefttorighti minut pick box warehous return bridg pickoldi minut differ worker pick box simultan cross bridg bank warehous left bank warehous righttolefti minut put box warehous return bridg putnewi minut differ worker put box simultan a worker effici worker condit met lefttorighti righttolefti gt lefttorightj righttoleftj lefttorighti righttolefti lefttorightj righttoleftj gt the rule regul movement worker bridg if worker reach bridg worker cross bridg wait side bridg if bridg free worker wait side bridg cross bridg if worker wait side lowest effici cross if bridg free worker wait side box remain warehous worker left side river cross bridg if worker wait left side lowest effici cross return instanc time worker reach left bank river box put warehous
1983
differ between maximum minimum price sum there exist undirect initi unroot tree node index you integ d integ array edg length edg ai bi edg node ai bi tree each node price you integ array price price price ith node the price sum path sum price node lie path the tree root node root choic the incur cost choos root differ maximum minimum price sum path start root return maximum cost root choic
1984
check point is reachabl there exist infinit larg grid you point reach point targetx targeti finit number step in step move point point given integ targetx targeti repres x coordin y coordin final posit return true reach point number step fals
1985
minimum cost split array you integ array num integ split array number empti subarray the cost split sum import subarray split let trim subarray version subarray number remov for trim the import subarray trim subarray length for subarray trim the import subarray return minimum cost split num a subarray contigu empti sequenc element array
1986
put marbl bag you bag you index integ array weight weight weight ith marbl you integ divid marbl bag rule no bag empti if ith marbl jth marbl bag marbl index ith jth indic bag if bag consist marbl index inclus cost bag weight weight the score distribut marbl sum cost bag return differ maximum minimum score marbl distribut
1987
count increas quadruplet given index integ array num size number return number increas quadruplet a quadruplet increas lt lt lt lt lt num lt num lt num lt num
1988
rearrang fruit you fruit basket fruit you index integ array basket basket repres cost fruit basket you make basket equal to oper time chose indic swap ith fruit basket jth fruit basket the cost swap min basket basket two basket consid equal sort fruit cost make basket return minimum cost make basket equal imposs
1989
subsequ with minimum score you string you allow remov number charact string the score string charact remov string let left minimum index remov charact let maximum index remov charact then score string left return minimum score make subsequ a subsequ string string form origin string delet charact disturb rel posit remain charact ace subsequ abcd aec
1990
handl sum queri after updat you index array num num d array queri queri there type queri for queri type queri flip valu num index index both index for queri type queri for index lt lt set num num num for queri type queri find sum element num return array answer type queri
1991
find string lcp we defin lcp matrix index string word lowercas english letter grid lcp equal length longest common prefix substr word word given matrix lcp return alphabet smallest string word correspond lcp if string return empti string a string lexicograph smaller string length posit differ string letter appear earlier alphabet letter for aabd lexicograph smaller aaca posit differ letter
1992
minimum time visit cell in grid you matrix grid consist neg integ grid row col repres minimum time requir visit cell row col mean visit cell row col time visit greater equal grid row col you stand top left cell matrix move adjac cell direct left each move make take return minimum time requir visit bottom cell matrix if visit bottom cell return
1993
count number possibl root node alic undirect tree node label the tree repres d integ array edg length edg ai bi edg node ai bi tree alic bob find root tree she bob make guess tree in guess choos distinct integ exist edg tree he tell alic tree bob guess repres d integ array guess guess uj vj bob guess uj vj alic lazi repli bob guess guess true given d integ array edg guess integ return number node root alic tree if tree return
1994
find string lcp we defin lcp matrix index string word lowercas english letter grid lcp equal length longest common prefix substr word word given matrix lcp return alphabet smallest string word correspond lcp if string return empti string a string lexicograph smaller string length posit differ string letter appear earlier alphabet letter for aabd lexicograph smaller aaca posit differ letter
1995
minimum time visit cell in grid you matrix grid consist neg integ grid row col repres minimum time requir visit cell row col mean visit cell row col time visit greater equal grid row col you stand top left cell matrix move adjac cell direct left each move make take return minimum time requir visit bottom cell matrix if visit bottom cell return
1996
count number possibl root node alic undirect tree node label the tree repres d integ array edg length edg ai bi edg node ai bi tree alic bob find root tree she bob make guess tree in guess choos distinct integ exist edg tree he tell alic tree bob guess repres d integ array guess guess uj vj bob guess uj vj alic lazi repli bob guess guess true given d integ array edg guess integ return number node root alic tree if tree return
1997
number way earn point there test type question you integ target index d integ array type type counti marksi counti question ith type worth marksi point return number way earn target point exam sinc answer larg return modulo note question type indistinguish for question type solv st question solv st question question
1998
count number possibl root node alic undirect tree node label the tree repres d integ array edg length edg ai bi edg node ai bi tree alic bob find root tree she bob make guess tree in guess choos distinct integ exist edg tree he tell alic tree bob guess repres d integ array guess guess uj vj bob guess uj vj alic lazi repli bob guess guess true given d integ array edg guess integ return number node root alic tree if tree return
1999
split array make coprim product you index integ array num length a split index lt lt call valid product element product remain element coprim for num split index valid coprim split index valid coprim a split index valid return smallest index array split validli split two valu val val coprim gcd val val gcd val val greatest common divisor val val
2000
number way earn point there test type question you integ target index d integ array type type counti marksi counti question ith type worth marksi point return number way earn target point exam sinc answer larg return modulo note question type indistinguish for question type solv st question solv st question question
2001
minimum time complet all task there comput run unlimit number task time you d integ array task task starti endi durationi ith task run total durationi second necessarili continu inclus time rang starti endi you turn comput run task you turn idl return minimum time comput turn complet task
2002
count number possibl root node alic undirect tree node label the tree repres d integ array edg length edg ai bi edg node ai bi tree alic bob find root tree she bob make guess tree in guess choos distinct integ exist edg tree he tell alic tree bob guess repres d integ array guess guess uj vj bob guess uj vj alic lazi repli bob guess guess true given d integ array edg guess integ return number node root alic tree if tree return
2003
split array make coprim product you index integ array num length a split index lt lt call valid product element product remain element coprim for num split index valid coprim split index valid coprim a split index valid return smallest index array split validli split two valu val val coprim gcd val val gcd val val greatest common divisor val val
2004
number way earn point there test type question you integ target index d integ array type type counti marksi counti question ith type worth marksi point return number way earn target point exam sinc answer larg return modulo note question type indistinguish for question type solv st question solv st question question
2005
minimum time complet all task there comput run unlimit number task time you d integ array task task starti endi durationi ith task run total durationi second necessarili continu inclus time rang starti endi you turn comput run task you turn idl return minimum time comput turn complet task
2006
count number possibl root node alic undirect tree node label the tree repres d integ array edg length edg ai bi edg node ai bi tree alic bob find root tree she bob make guess tree in guess choos distinct integ exist edg tree he tell alic tree bob guess repres d integ array guess guess uj vj bob guess uj vj alic lazi repli bob guess guess true given d integ array edg guess integ return number node root alic tree if tree return
2007
split array make coprim product you index integ array num length a split index lt lt call valid product element product remain element coprim for num split index valid coprim split index valid coprim a split index valid return smallest index array split validli split two valu val val coprim gcd val val gcd val val greatest common divisor val val
2008
number way earn point there test type question you integ target index d integ array type type counti marksi counti question ith type worth marksi point return number way earn target point exam sinc answer larg return modulo note question type indistinguish for question type solv st question solv st question question
2009
minimum time complet all task there comput run unlimit number task time you d integ array task task starti endi durationi ith task run total durationi second necessarili continu inclus time rang starti endi you turn comput run task you turn idl return minimum time comput turn complet task
2010
split array make coprim product you index integ array num length a split index lt lt call valid product element product remain element coprim for num split index valid coprim split index valid coprim a split index valid return smallest index array split validli split two valu val val coprim gcd val val gcd val val greatest common divisor val val
2011
number way earn point there test type question you integ target index d integ array type type counti marksi counti question ith type worth marksi point return number way earn target point exam sinc answer larg return modulo note question type indistinguish for question type solv st question solv st question question
2012
minimum time complet all task there comput run unlimit number task time you d integ array task task starti endi durationi ith task run total durationi second necessarili continu inclus time rang starti endi you turn comput run task you turn idl return minimum time comput turn complet task
2013
collect coin tree there exist undirect unroot tree node index you integ d integ array edg length edg ai bi edg node ai bi tree you array coin size coin presenc coin vertex initi choos start vertex tree then perform oper number time collect coin distanc current vertex move adjac vertex tree find minimum number edg collect coin back initi vertex note pass edg time count answer time
2014
number way earn point there test type question you integ target index d integ array type type counti marksi counti question ith type worth marksi point return number way earn target point exam sinc answer larg return modulo note question type indistinguish for question type solv st question solv st question question
2015
minimum time complet all task there comput run unlimit number task time you d integ array task task starti endi durationi ith task run total durationi second necessarili continu inclus time rang starti endi you turn comput run task you turn idl return minimum time comput turn complet task
2016
collect coin tree there exist undirect unroot tree node index you integ d integ array edg length edg ai bi edg node ai bi tree you array coin size coin presenc coin vertex initi choos start vertex tree then perform oper number time collect coin distanc current vertex move adjac vertex tree find minimum number edg collect coin back initi vertex note pass edg time count answer time
2017
shortest cycl graph there bi direct graph vertic vertex label the edg graph repres d integ array edg edg ui vi denot edg vertex ui vertex vi everi vertex pair connect edg vertex edg return length shortest cycl graph if cycl exist return a cycl path start end node edg path
2018
minimum time complet all task there comput run unlimit number task time you d integ array task task starti endi durationi ith task run total durationi second necessarili continu inclus time rang starti endi you turn comput run task you turn idl return minimum time comput turn complet task
2019
collect coin tree there exist undirect unroot tree node index you integ d integ array edg length edg ai bi edg node ai bi tree you array coin size coin presenc coin vertex initi choos start vertex tree then perform oper number time collect coin distanc current vertex move adjac vertex tree find minimum number edg collect coin back initi vertex note pass edg time count answer time
2020
shortest cycl graph there bi direct graph vertic vertex label the edg graph repres d integ array edg edg ui vi denot edg vertex ui vertex vi everi vertex pair connect edg vertex edg return length shortest cycl graph if cycl exist return a cycl path start end node edg path
2021
minimum revers oper you integ integ rang repres index array arr length posit set posit set you integ array ban posit array for ith posit ban arr ban ban you perform multipl oper arr in oper choos subarray size revers subarray howev arr posit ban in word oper arr ban remain return array an an minimum number revers oper need bring posit arr imposs a subarray contigu empti sequenc element array the valu an independ the revers array array valu revers order
2022
collect coin tree there exist undirect unroot tree node index you integ d integ array edg length edg ai bi edg node ai bi tree you array coin size coin presenc coin vertex initi choos start vertex tree then perform oper number time collect coin distanc current vertex move adjac vertex tree find minimum number edg collect coin back initi vertex note pass edg time count answer time
2023
shortest cycl graph there bi direct graph vertic vertex label the edg graph repres d integ array edg edg ui vi denot edg vertex ui vertex vi everi vertex pair connect edg vertex edg return length shortest cycl graph if cycl exist return a cycl path start end node edg path
2024
minimum revers oper you integ integ rang repres index array arr length posit set posit set you integ array ban posit array for ith posit ban arr ban ban you perform multipl oper arr in oper choos subarray size revers subarray howev arr posit ban in word oper arr ban remain return array an an minimum number revers oper need bring posit arr imposs a subarray contigu empti sequenc element array the valu an independ the revers array array valu revers order
2025
minimum number visit cell grid you index integ matrix grid your initi posit top left cell start cell move cell cell lt lt grid rightward movement cell lt lt grid downward movement return minimum number cell visit reach bottom cell if valid path return
2026
shortest cycl graph there bi direct graph vertic vertex label the edg graph repres d integ array edg edg ui vi denot edg vertex ui vertex vi everi vertex pair connect edg vertex edg return length shortest cycl graph if cycl exist return a cycl path start end node edg path
2027
minimum revers oper you integ integ rang repres index array arr length posit set posit set you integ array ban posit array for ith posit ban arr ban ban you perform multipl oper arr in oper choos subarray size revers subarray howev arr posit ban in word oper arr ban remain return array an an minimum number revers oper need bring posit arr imposs a subarray contigu empti sequenc element array the valu an independ the revers array array valu revers order
2028
minimum number visit cell grid you index integ matrix grid your initi posit top left cell start cell move cell cell lt lt grid rightward movement cell lt lt grid downward movement return minimum number cell visit reach bottom cell if valid path return
2029
design graph with shortest path calcul there direct weight graph consist node number the edg graph initi repres array edg edg fromi toi edgecosti mean edg fromi toi cost edgecosti implement graph class graph int int edg initi object node edg addedg int edg add edg list edg edg edgecost it guarante edg node ad int shortestpath int node int node return minimum cost path node node if path exist return the cost path sum cost edg path
2030
minimum revers oper you integ integ rang repres index array arr length posit set posit set you integ array ban posit array for ith posit ban arr ban ban you perform multipl oper arr in oper choos subarray size revers subarray howev arr posit ban in word oper arr ban remain return array an an minimum number revers oper need bring posit arr imposs a subarray contigu empti sequenc element array the valu an independ the revers array array valu revers order
2031
minimum number visit cell grid you index integ matrix grid your initi posit top left cell start cell move cell cell lt lt grid rightward movement cell lt lt grid downward movement return minimum number cell visit reach bottom cell if valid path return
2032
design graph with shortest path calcul there direct weight graph consist node number the edg graph initi repres array edg edg fromi toi edgecosti mean edg fromi toi cost edgecosti implement graph class graph int int edg initi object node edg addedg int edg add edg list edg edg edgecost it guarante edg node ad int shortestpath int node int node return minimum cost path node node if path exist return the cost path sum cost edg path
2033
minim total price trip there exist undirect unroot tree node index you integ d integ array edg length edg ai bi edg node ai bi tree each node price you integ array price price price ith node the price sum path sum price node lie path addit d integ array trip trip starti endi start ith trip node starti travel node endi path befor perform trip choos adjac node halv price return minimum total price sum perform trip
2034
minimum revers oper you integ integ rang repres index array arr length posit set posit set you integ array ban posit array for ith posit ban arr ban ban you perform multipl oper arr in oper choos subarray size revers subarray howev arr posit ban in word oper arr ban remain return array an an minimum number revers oper need bring posit arr imposs a subarray contigu empti sequenc element array the valu an independ the revers array array valu revers order
2035
minimum number visit cell grid you index integ matrix grid your initi posit top left cell start cell move cell cell lt lt grid rightward movement cell lt lt grid downward movement return minimum number cell visit reach bottom cell if valid path return
2036
design graph with shortest path calcul there direct weight graph consist node number the edg graph initi repres array edg edg fromi toi edgecosti mean edg fromi toi cost edgecosti implement graph class graph int int edg initi object node edg addedg int edg add edg list edg edg edgecost it guarante edg node ad int shortestpath int node int node return minimum cost path node node if path exist return the cost path sum cost edg path
2037
minim total price trip there exist undirect unroot tree node index you integ d integ array edg length edg ai bi edg node ai bi tree each node price you integ array price price price ith node the price sum path sum price node lie path addit d integ array trip trip starti endi start ith trip node starti travel node endi path befor perform trip choos adjac node halv price return minimum total price sum perform trip
2038
minimum number visit cell grid you index integ matrix grid your initi posit top left cell start cell move cell cell lt lt grid rightward movement cell lt lt grid downward movement return minimum number cell visit reach bottom cell if valid path return
2039
design graph with shortest path calcul there direct weight graph consist node number the edg graph initi repres array edg edg fromi toi edgecosti mean edg fromi toi cost edgecosti implement graph class graph int int edg initi object node edg addedg int edg add edg list edg edg edgecost it guarante edg node ad int shortestpath int node int node return minimum cost path node node if path exist return the cost path sum cost edg path
2040
minim total price trip there exist undirect unroot tree node index you integ d integ array edg length edg ai bi edg node ai bi tree each node price you integ array price price price ith node the price sum path sum price node lie path addit d integ array trip trip starti endi start ith trip node starti travel node endi path befor perform trip choos adjac node halv price return minimum total price sum perform trip
2041
make array empti you integ array num distinct number perform oper array empti if element smallest remov otherwis put element end array return integ denot number oper take make num empti
2042
design graph with shortest path calcul there direct weight graph consist node number the edg graph initi repres array edg edg fromi toi edgecosti mean edg fromi toi cost edgecosti implement graph class graph int int edg initi object node edg addedg int edg add edg list edg edg edgecost it guarante edg node ad int shortestpath int node int node return minimum cost path node node if path exist return the cost path sum cost edg path
2043
minim total price trip there exist undirect unroot tree node index you integ d integ array edg length edg ai bi edg node ai bi tree each node price you integ array price price price ith node the price sum path sum price node lie path addit d integ array trip trip starti endi start ith trip node starti travel node endi path befor perform trip choos adjac node halv price return minimum total price sum perform trip
2044
make array empti you integ array num distinct number perform oper array empti if element smallest remov otherwis put element end array return integ denot number oper take make num empti
2045
lexicograph smallest beauti string a string beauti it consist letter english lowercas alphabet it substr length palindrom you beauti string length posit integ return lexicograph smallest string length larger beauti if string return empti string a string lexicograph larger string length posit differ charact strictli larger charact for abcd lexicograph larger abcc posit differ fourth charact greater
2046
design graph with shortest path calcul there direct weight graph consist node number the edg graph initi repres array edg edg fromi toi edgecosti mean edg fromi toi cost edgecosti implement graph class graph int int edg initi object node edg addedg int edg add edg list edg edg edgecost it guarante edg node ad int shortestpath int node int node return minimum cost path node node if path exist return the cost path sum cost edg path
2047
minim total price trip there exist undirect unroot tree node index you integ d integ array edg length edg ai bi edg node ai bi tree each node price you integ array price price price ith node the price sum path sum price node lie path addit d integ array trip trip starti endi start ith trip node starti travel node endi path befor perform trip choos adjac node halv price return minimum total price sum perform trip
2048
make array empti you integ array num distinct number perform oper array empti if element smallest remov otherwis put element end array return integ denot number oper take make num empti
2049
lexicograph smallest beauti string a string beauti it consist letter english lowercas alphabet it substr length palindrom you beauti string length posit integ return lexicograph smallest string length larger beauti if string return empti string a string lexicograph larger string length posit differ charact strictli larger charact for abcd lexicograph larger abcc posit differ fourth charact greater
2050
minim total price trip there exist undirect unroot tree node index you integ d integ array edg length edg ai bi edg node ai bi tree each node price you integ array price price price ith node the price sum path sum price node lie path addit d integ array trip trip starti endi start ith trip node starti travel node endi path befor perform trip choos adjac node halv price return minimum total price sum perform trip
2051
make array empti you integ array num distinct number perform oper array empti if element smallest remov otherwis put element end array return integ denot number oper take make num empti
2052
lexicograph smallest beauti string a string beauti it consist letter english lowercas alphabet it substr length palindrom you beauti string length posit integ return lexicograph smallest string length larger beauti if string return empti string a string lexicograph larger string length posit differ charact strictli larger charact for abcd lexicograph larger abcc posit differ fourth charact greater
2053
power hero you index integ array num repres strength hero the power group hero defin let ik indic hero group then power group max num num num ik min num num num ik return sum power empti group hero sinc sum larg return modulo
2054
minim total price trip there exist undirect unroot tree node index you integ d integ array edg length edg ai bi edg node ai bi tree each node price you integ array price price price ith node the price sum path sum price node lie path addit d integ array trip trip starti endi start ith trip node starti travel node endi path befor perform trip choos adjac node halv price return minimum total price sum perform trip
2055
make array empti you integ array num distinct number perform oper array empti if element smallest remov otherwis put element end array return integ denot number oper take make num empti
2056
lexicograph smallest beauti string a string beauti it consist letter english lowercas alphabet it substr length palindrom you beauti string length posit integ return lexicograph smallest string length larger beauti if string return empti string a string lexicograph larger string length posit differ charact strictli larger charact for abcd lexicograph larger abcc posit differ fourth charact greater
2057
power hero you index integ array num repres strength hero the power group hero defin let ik indic hero group then power group max num num num ik min num num num ik return sum power empti group hero sinc sum larg return modulo
2058
make array empti you integ array num distinct number perform oper array empti if element smallest remov otherwis put element end array return integ denot number oper take make num empti
2059
lexicograph smallest beauti string a string beauti it consist letter english lowercas alphabet it substr length palindrom you beauti string length posit integ return lexicograph smallest string length larger beauti if string return empti string a string lexicograph larger string length posit differ charact strictli larger charact for abcd lexicograph larger abcc posit differ fourth charact greater
2060
power hero you index integ array num repres strength hero the power group hero defin let ik indic hero group then power group max num num num ik min num num num ik return sum power empti group hero sinc sum larg return modulo
2061
modifi graph edg weight you undirect weight connect graph node label integ array edg edg ai bi wi edg node ai bi weight wi some edg weight wi posit weight wi gt your task modifi edg weight assign posit integ valu rang shortest distanc node sourc destin equal integ target if multipl modif make shortest distanc sourc destin equal target consid correct return array edg unmodifi order make shortest distanc sourc destin equal target empti array imposs note you allow modifi weight edg initi posit weight
2062
lexicograph smallest beauti string a string beauti it consist letter english lowercas alphabet it substr length palindrom you beauti string length posit integ return lexicograph smallest string length larger beauti if string return empti string a string lexicograph larger string length posit differ charact strictli larger charact for abcd lexicograph larger abcc posit differ fourth charact greater
2063
power hero you index integ array num repres strength hero the power group hero defin let ik indic hero group then power group max num num num ik min num num num ik return sum power empti group hero sinc sum larg return modulo
2064
modifi graph edg weight you undirect weight connect graph node label integ array edg edg ai bi wi edg node ai bi weight wi some edg weight wi posit weight wi gt your task modifi edg weight assign posit integ valu rang shortest distanc node sourc destin equal integ target if multipl modif make shortest distanc sourc destin equal target consid correct return array edg unmodifi order make shortest distanc sourc destin equal target empti array imposs note you allow modifi weight edg initi posit weight
2065
greatest common divisor travers you index integ array num allow travers indic you travers index index gcd num num gt gcd greatest common divisor your task determin pair indic num lt exist sequenc travers return true travers pair indic fals
2066
power hero you index integ array num repres strength hero the power group hero defin let ik indic hero group then power group max num num num ik min num num num ik return sum power empti group hero sinc sum larg return modulo
2067
modifi graph edg weight you undirect weight connect graph node label integ array edg edg ai bi wi edg node ai bi weight wi some edg weight wi posit weight wi gt your task modifi edg weight assign posit integ valu rang shortest distanc node sourc destin equal integ target if multipl modif make shortest distanc sourc destin equal target consid correct return array edg unmodifi order make shortest distanc sourc destin equal target empti array imposs note you allow modifi weight edg initi posit weight
2068
greatest common divisor travers you index integ array num allow travers indic you travers index index gcd num num gt gcd greatest common divisor your task determin pair indic num lt exist sequenc travers return true travers pair indic fals
2069
maximum strictli increas cell matrix given index integ matrix mat select cell matrix start cell from start cell move cell row column destin cell strictli greater current cell you repeat process time move cell cell longer make move your task find maximum number cell visit matrix start cell return integ denot maximum number cell visit
2070
modifi graph edg weight you undirect weight connect graph node label integ array edg edg ai bi wi edg node ai bi weight wi some edg weight wi posit weight wi gt your task modifi edg weight assign posit integ valu rang shortest distanc node sourc destin equal integ target if multipl modif make shortest distanc sourc destin equal target consid correct return array edg unmodifi order make shortest distanc sourc destin equal target empti array imposs note you allow modifi weight edg initi posit weight
2071
greatest common divisor travers you index integ array num allow travers indic you travers index index gcd num num gt gcd greatest common divisor your task determin pair indic num lt exist sequenc travers return true travers pair indic fals
2072
maximum strictli increas cell matrix given index integ matrix mat select cell matrix start cell from start cell move cell row column destin cell strictli greater current cell you repeat process time move cell cell longer make move your task find maximum number cell visit matrix start cell return integ denot maximum number cell visit
2073
count integ you numer string num num integ max sum min sum we denot integ good num lt lt num min sum lt digit sum lt max sum return number good integ sinc answer larg return modulo note digit sum denot sum digit
2074
greatest common divisor travers you index integ array num allow travers indic you travers index index gcd num num gt gcd greatest common divisor your task determin pair indic num lt exist sequenc travers return true travers pair indic fals
2075
maximum strictli increas cell matrix given index integ matrix mat select cell matrix start cell from start cell move cell row column destin cell strictli greater current cell you repeat process time move cell cell longer make move your task find maximum number cell visit matrix start cell return integ denot maximum number cell visit
2076
count integ you numer string num num integ max sum min sum we denot integ good num lt lt num min sum lt digit sum lt max sum return number good integ sinc answer larg return modulo note digit sum denot sum digit
2077
find good subset matrix you index binari matrix grid let call empti subset row good sum column subset half length subset more formal length chosen subset row sum column floor return integ array row indic good subset sort ascend order if multipl good subset return if good subset return empti array a subset row matrix grid matrix obtain delet possibl row grid
2078
maximum strictli increas cell matrix given index integ matrix mat select cell matrix start cell from start cell move cell row column destin cell strictli greater current cell you repeat process time move cell cell longer make move your task find maximum number cell visit matrix start cell return integ denot maximum number cell visit
2079
count integ you numer string num num integ max sum min sum we denot integ good num lt lt num min sum lt digit sum lt max sum return number good integ sinc answer larg return modulo note digit sum denot sum digit
2080
find good subset matrix you index binari matrix grid let call empti subset row good sum column subset half length subset more formal length chosen subset row sum column floor return integ array row indic good subset sort ascend order if multipl good subset return if good subset return empti array a subset row matrix grid matrix obtain delet possibl row grid
2081
maximum sum queri you index integ array num num length index d array queri queri xi yi for ith queri find maximum num num indic lt lt num gt xi num gt yi satisfi constraint return array answer answer answer ith queri
2082
count integ you numer string num num integ max sum min sum we denot integ good num lt lt num min sum lt digit sum lt max sum return number good integ sinc answer larg return modulo note digit sum denot sum digit
2083
find good subset matrix you index binari matrix grid let call empti subset row good sum column subset half length subset more formal length chosen subset row sum column floor return integ array row indic good subset sort ascend order if multipl good subset return if good subset return empti array a subset row matrix grid matrix obtain delet possibl row grid
2084
maximum sum queri you index integ array num num length index d array queri queri xi yi for ith queri find maximum num num indic lt lt num gt xi num gt yi satisfi constraint return array answer answer answer ith queri
2085
paint wall you index integ array cost time size repres cost time paint wall there painter a paid painter paint ith wall time unit time take cost unit money a free painter paint wall unit time cost but free painter paid painter occupi return minimum amount money requir paint wall
2086
modifi graph edg weight you undirect weight connect graph node label integ array edg edg ai bi wi edg node ai bi weight wi some edg weight wi posit weight wi gt your task modifi edg weight assign posit integ valu rang shortest distanc node sourc destin equal integ target if multipl modif make shortest distanc sourc destin equal target consid correct return array edg unmodifi order make shortest distanc sourc destin equal target empti array imposs note you allow modifi weight edg initi posit weight
2087
greatest common divisor travers you index integ array num allow travers indic you travers index index gcd num num gt gcd greatest common divisor your task determin pair indic num lt exist sequenc travers return true travers pair indic fals
2088
maximum strictli increas cell matrix given index integ matrix mat select cell matrix start cell from start cell move cell row column destin cell strictli greater current cell you repeat process time move cell cell longer make move your task find maximum number cell visit matrix start cell return integ denot maximum number cell visit
2089
count integ you numer string num num integ max sum min sum we denot integ good num lt lt num min sum lt digit sum lt max sum return number good integ sinc answer larg return modulo note digit sum denot sum digit
2090
find good subset matrix you index binari matrix grid let call empti subset row good sum column subset half length subset more formal length chosen subset row sum column floor return integ array row indic good subset sort ascend order if multipl good subset return if good subset return empti array a subset row matrix grid matrix obtain delet possibl row grid
2091
maximum sum queri you index integ array num num length index d array queri queri xi yi for ith queri find maximum num num indic lt lt num gt xi num gt yi satisfi constraint return array answer answer answer ith queri
2092
paint wall you index integ array cost time size repres cost time paint wall there painter a paid painter paint ith wall time unit time take cost unit money a free painter paint wall unit time cost but free painter paid painter occupi return minimum amount money requir paint wall
2093
robot collis there index robot posit line health movement direct you index integ array posit health string direct direct l left r all integ posit uniqu all robot start move line simultan speed direct if robot share posit move collid if robot collid robot lower health remov line health robot decreas the surviv robot continu direct if robot health remov line your task determin health robot surviv collis order robot final heath robot surviv final health robot surviv if survivor return empti array return array health remain robot order input collis occur note the posit unsort
2094
maximum sum queri you index integ array num num length index d array queri queri xi yi for ith queri find maximum num num indic lt lt num gt xi num gt yi satisfi constraint return array answer answer answer ith queri
2095
paint wall you index integ array cost time size repres cost time paint wall there painter a paid painter paint ith wall time unit time take cost unit money a free painter paint wall unit time cost but free painter paid painter occupi return minimum amount money requir paint wall
2096
robot collis there index robot posit line health movement direct you index integ array posit health string direct direct l left r all integ posit uniqu all robot start move line simultan speed direct if robot share posit move collid if robot collid robot lower health remov line health robot decreas the surviv robot continu direct if robot health remov line your task determin health robot surviv collis order robot final heath robot surviv final health robot surviv if survivor return empti array return array health remain robot order input collis occur note the posit unsort
2097
sum imbal number all subarray the imbal number index integ array arr length defin number indic sarr sort arr lt lt sarr sarr gt here sort arr function return sort version arr given index integ array num return sum imbal number subarray a subarray contigu empti sequenc element array
2098
maximum sum queri you index integ array num num length index d array queri queri xi yi for ith queri find maximum num num indic lt lt num gt xi num gt yi satisfi constraint return array answer answer answer ith queri
2099
paint wall you index integ array cost time size repres cost time paint wall there painter a paid painter paint ith wall time unit time take cost unit money a free painter paint wall unit time cost but free painter paid painter occupi return minimum amount money requir paint wall
2100
robot collis there index robot posit line health movement direct you index integ array posit health string direct direct l left r all integ posit uniqu all robot start move line simultan speed direct if robot share posit move collid if robot collid robot lower health remov line health robot decreas the surviv robot continu direct if robot health remov line your task determin health robot surviv collis order robot final heath robot surviv final health robot surviv if survivor return empti array return array health remain robot order input collis occur note the posit unsort
2101
find good subset matrix you index binari matrix grid let call empti subset row good sum column subset half length subset more formal length chosen subset row sum column floor return integ array row indic good subset sort ascend order if multipl good subset return if good subset return empti array a subset row matrix grid matrix obtain delet possibl row grid
2102
maximum sum queri you index integ array num num length index d array queri queri xi yi for ith queri find maximum num num indic lt lt num gt xi num gt yi satisfi constraint return array answer answer answer ith queri
2103
paint wall you index integ array cost time size repres cost time paint wall there painter a paid painter paint ith wall time unit time take cost unit money a free painter paint wall unit time cost but free painter paid painter occupi return minimum amount money requir paint wall
2104
robot collis there index robot posit line health movement direct you index integ array posit health string direct direct l left r all integ posit uniqu all robot start move line simultan speed direct if robot share posit move collid if robot collid robot lower health remov line health robot decreas the surviv robot continu direct if robot health remov line your task determin health robot surviv collis order robot final heath robot surviv final health robot surviv if survivor return empti array return array health remain robot order input collis occur note the posit unsort
2105
sum imbal number all subarray the imbal number index integ array arr length defin number indic sarr sort arr lt lt sarr sarr gt here sort arr function return sort version arr given index integ array num return sum imbal number subarray a subarray contigu empti sequenc element array
2106
paint wall you index integ array cost time size repres cost time paint wall there painter a paid painter paint ith wall time unit time take cost unit money a free painter paint wall unit time cost but free painter paid painter occupi return minimum amount money requir paint wall
2107
robot collis there index robot posit line health movement direct you index integ array posit health string direct direct l left r all integ posit uniqu all robot start move line simultan speed direct if robot share posit move collid if robot collid robot lower health remov line health robot decreas the surviv robot continu direct if robot health remov line your task determin health robot surviv collis order robot final heath robot surviv final health robot surviv if survivor return empti array return array health remain robot order input collis occur note the posit unsort
2108
sum imbal number all subarray the imbal number index integ array arr length defin number indic sarr sort arr lt lt sarr sarr gt here sort arr function return sort version arr given index integ array num return sum imbal number subarray a subarray contigu empti sequenc element array
2109
length longest valid substr you string word array string forbidden a string call valid substr present forbidden return length longest valid substr string word a substr contigu sequenc charact string possibl empti
2110
paint wall you index integ array cost time size repres cost time paint wall there painter a paid painter paint ith wall time unit time take cost unit money a free painter paint wall unit time cost but free painter paid painter occupi return minimum amount money requir paint wall
2111
robot collis there index robot posit line health movement direct you index integ array posit health string direct direct l left r all integ posit uniqu all robot start move line simultan speed direct if robot share posit move collid if robot collid robot lower health remov line health robot decreas the surviv robot continu direct if robot health remov line your task determin health robot surviv collis order robot final heath robot surviv final health robot surviv if survivor return empti array return array health remain robot order input collis occur note the posit unsort
2112
sum imbal number all subarray the imbal number index integ array arr length defin number indic sarr sort arr lt lt sarr sarr gt here sort arr function return sort version arr given index integ array num return sum imbal number subarray a subarray contigu empti sequenc element array
2113
length longest valid substr you string word array string forbidden a string call valid substr present forbidden return length longest valid substr string word a substr contigu sequenc charact string possibl empti
2114
sum imbal number all subarray the imbal number index integ array arr length defin number indic sarr sort arr lt lt sarr sarr gt here sort arr function return sort version arr given index integ array num return sum imbal number subarray a subarray contigu empti sequenc element array
2115
length longest valid substr you string word array string forbidden a string call valid substr present forbidden return length longest valid substr string word a substr contigu sequenc charact string possibl empti
2116
maximum number group with increas length you index array usagelimit length your task creat group number ensur number usagelimit time total group you satisfi condit each group consist distinct number mean duplic number allow singl group each group length strictli greater previou group return integ denot maximum number group creat satisfi condit
2117
count path that can form palindrom tree you tree connect undirect graph cycl root node consist node number the tree repres index array size node sinc node root you string length charact assign edg return number pair node lt charact assign edg path rearrang form palindrom a string palindrom read backward forward
2118
length longest valid substr you string word array string forbidden a string call valid substr present forbidden return length longest valid substr string word a substr contigu sequenc charact string possibl empti
2119
maximum number group with increas length you index array usagelimit length your task creat group number ensur number usagelimit time total group you satisfi condit each group consist distinct number mean duplic number allow singl group each group length strictli greater previou group return integ denot maximum number group creat satisfi condit
2120
count path that can form palindrom tree you tree connect undirect graph cycl root node consist node number the tree repres index array size node sinc node root you string length charact assign edg return number pair node lt charact assign edg path rearrang form palindrom a string palindrom read backward forward
2121
count step number rang given posit integ low high repres string find count step number inclus rang low high a step number integ adjac digit absolut differ return integ denot count step number inclus rang low high sinc answer larg return modulo note a step number lead
2122
maximum number group with increas length you index array usagelimit length your task creat group number ensur number usagelimit time total group you satisfi condit each group consist distinct number mean duplic number allow singl group each group length strictli greater previou group return integ denot maximum number group creat satisfi condit
2123
count path that can form palindrom tree you tree connect undirect graph cycl root node consist node number the tree repres index array size node sinc node root you string length charact assign edg return number pair node lt charact assign edg path rearrang form palindrom a string palindrom read backward forward
2124
count step number rang given posit integ low high repres string find count step number inclus rang low high a step number integ adjac digit absolut differ return integ denot count step number inclus rang low high sinc answer larg return modulo note a step number lead
2125
minimum time make array sum at most you index integ array num num equal length everi indic lt lt num length num increment num after oper choos index lt lt num length make num you integ return minimum time make sum element num equal
2126
count path that can form palindrom tree you tree connect undirect graph cycl root node consist node number the tree repres index array size node sinc node root you string length charact assign edg return number pair node lt charact assign edg path rearrang form palindrom a string palindrom read backward forward
2127
count step number rang given posit integ low high repres string find count step number inclus rang low high a step number integ adjac digit absolut differ return integ denot count step number inclus rang low high sinc answer larg return modulo note a step number lead
2128
minimum time make array sum at most you index integ array num num equal length everi indic lt lt num length num increment num after oper choos index lt lt num length make num you integ return minimum time make sum element num equal
2129
maximum eleg k length subsequ you index d integ array item length integ item profiti categoryi profiti categoryi denot profit categori ith item let defin eleg subsequ item total profit distinct categori total profit sum profit subsequ distinct categori number distinct categori categori select subsequ your task find maximum eleg subsequ size item return integ denot maximum eleg subsequ item size note a subsequ array array gener origin array delet element possibl chang remain element rel order
